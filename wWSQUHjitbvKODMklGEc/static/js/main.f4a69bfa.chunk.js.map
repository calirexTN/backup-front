{"version":3,"sources":["components/slider/Slider.js","components/video/Video.js","components/cards/Cards.js","components/introCard/IntroCard.js","components/map/Map.js","components/home/Home.js","api/Common.js","components/header/Header.js","components/header/HeaderLoggedOut.js","components/footer/Footer.js","components/prices/Prices.js","components/profile/Profile.js","components/breadcrumbs/Breadcrumbs.js","api/DataManager.js","components/popupform/PopupForm.js","components/printComponent/PrintComponent.js","components/table/Table.js","components/orders/Orders.js","components/notifications/Notifications.js","components/customers/Customers.js","components/bills/Bills.js","components/contactus/ContactUs.js","components/tracking/Tracking.js","components/login/Login.js","components/dashboard/Dashboard.js","components/signup/Signup.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Slider","Video","embedId","className","src","frameBorder","allow","allowFullScreen","Cards","props","card","type","Card","Body","Row","Col","md","Text","text_size","title","text","Img","loading","alt","Container","lg","IntroCard","imgStyle","padding","hrStyle","width","Map","style","subtitle","rel","target","href","Home","cards_data","require","cards","card_item","push","getOrders","token","resolve","reject","axios","get","replace","then","response","data","statusCode","body","catch","error","getCustomers","userAttributes","getUser","userStr","sessionStorage","getItem","getToken","removeUserSession","removeItem","i","length","getUserIds","users","JSON","parse","ids","memory","id","setUserSession","user","setItem","setClientsList","Promise","getClients","list","forEach","element","a","setOrdersList","setCustomersList","stringify","sessionVariable","str","Items","console","log","updateOrderList","rawdata","post","setOrders","alert","updateCustomersList","setCustomers","getOrderslist","getCustomerslist","Header","history","useHistory","userDropdownTitle","icon","faUserCircle","logoutDropdownTitle","faSignOutAlt","loggedIn","faBell","Nav","NavDropdown","Item","Divider","onClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","height","Toggle","Collapse","HeaderOut","loggedOut","Link","Footer","Prices","table_data","useState","show","setShow","handleClose","handleShow","criterias","criterea","criterias_item","xmlns","fill","viewBox","d","promo","Title","dangerouslySetInnerHTML","__html","name","quantity","price","Helmet","classNameName","Modal","onHide","closeButton","Button","Profile","placeholder","value","textAlign","size","Breadcrumbs","breadcrumbs","content","bcscript","crumbs_list","index","crumbs","crumb","itemListElement","crumb_item","Breadcrumb","invertedText","active","script_content","CryptoJS","QRCode","submitCustomer","formData","e","customersList","dataTransfer","userExists","Date","now","Object","keys","map","key","SaveData","items","products","onSubmit","today","toISOString","split","PopupForm","onSubmitFunction","handleSave","ordersList","schema","required","requiredFields","properties","definitions","additionalProperties","newUserTransfer","transfer","date","Clientorder_exists","order_exists","addClient","userTransferObject","oldData","local_Clientorder_exists","parseInt","submitOrder","color","buttonTitle","modalTitle","PrintComponent","componentRef","useRef","trigger","printButton","ref","el","media","componentToPrint","Table","SearchBar","Search","ColumnToggle","ToggleList","confirmDelete","customFormats","modifiedItems","columns","custoColumns","togglecolumns","clientsList","inputList","setInputList","selectedItems","setSelectedItems","setPrintButton","alertDelete","setAlertDelete","filter","textFilter","generatePdf","allcustomersList","newImputList","nb_slip","global_price","global_weight","global_delivery","global_total","order","global_packages","userInfo","select","arrObj","weight","nb_colis","qrcode","AES","encrypt","toString","raw_product_price","toFixed","tva_product_price","product_price","raw_delivery_price","tva_delivery_price","delivery_price","total_price","Number","client","address","number","email","j","num_colis","pageBreak","Input","pageBreakBefore","scope","colSpan","Bill","generateDeliverySlip","generateBillPdf","raw_total_price","tva_total_price","generateBill","modifyItems","warning","msg","deleteItems","CustomToggleList","onColumnToggle","toggles","flexDirection","column","toggle","dataField","maxWidth","marginRight","borderRadius","selectRow","mode","clickToSelect","clickToEdit","onSelect","row","isSelect","item","concat","cellEdit","beforeSaveCell","oldValue","newValue","done","async","actions","searchloop","faSearch","titleIcon","faClipboardList","modalSchema","test","columnToggleProps","bootstrap4","keyField","columnToggle","search","searchProps","includes","baseProps","pagination","paginationFactory","filterFactory","cellEditFactory","Orders","clientslist","getClientslist","userIds","editable","hidden","editor","Type","SELECT","options","label","k","userToken","name_company","contact_name","plans","Math","ceil","userDescription","customers","firstname","schemaString","client_id","$ref","maxItems","weight_g","price_base","package_number","customerData","Metric","postal_code","state","phone","format","Notifications","Customers","orders","total_orders","current_orders","Bills","plan","initProperties","dataMap","all","delivered","awaiting_pickup","in_delivery","postponed","in_storage","awaiting_return","in_storage_to_return","return_postponed","return_pickup_postponed","returned","payed","total_packages","total_weight","price_delivery","ret","billsData","ContactUs","Tracking","useFormInput","initialValue","setValue","onChange","Login","setLoading","username","password","setError","autoComplete","go","disabled","Dashboard","display","justifyContent","alignItems","textDecoration","Signup","from_name","to_name","message","reply_to","toSend","setToSend","preventDefault","elements","send","status","err","App","authLoading","setAuthLoading","useEffect","header","Spinner","animation","path","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4a69bfa.chunk.js","sourcesContent":["import Carousel from 'react-bootstrap/Carousel'\nimport './Slider.scss';\nimport PropTypes from \"prop-types\";\nfunction Slider(props) {    \n    const items = [];\n    for (let item of props.slider_data.sliders) {\n        const bgStyle = {\n            background: \" linear-gradient( rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5) ), \"+item.style\n        };\n        const carousel_item = (\n            <Carousel.Item className={item.class} style={bgStyle}>\n                <Carousel.Caption>\n                    <h1>{item.title}</h1>\n                    <p>{item.subtitle}</p>\n                </Carousel.Caption>\n            </Carousel.Item>\n      );\n      items.push(carousel_item);\n    }\n    return (\n        <Carousel variant=\"light\" fade className={props.type}>\n            {items}\n        </Carousel>\n\n        );\n}\n\nSlider.propTypes = {\n    type: PropTypes.array,\n    slider_data: PropTypes.object,\n};\n\nexport default Slider;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Video.scss';\nconst Video = ({ embedId }) => (\n\t<div className=\"video-responsive\">\n\t\t<iframe\n\t\tsrc={`https://www.youtube.com/embed/${embedId}`}\n\t\tframeBorder=\"0\" \n\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n\t\tallowFullScreen\n\t\t/>\n\t</div>\n);\n\nVideo.propTypes = {\n\tembedId: PropTypes.string.isRequired\n};\n\nexport default Video;\n","\nimport { Container, Row, Card, Col } from \"react-bootstrap\";\nimport './Cards.scss';\nimport Video from '../video/Video';\nimport PropTypes from \"prop-types\";\n\n function Cards(props) {\n    let card = <></>;\n\tconst hrStyle ={\n\t\twidth: \"50%\",\n\t\t\"display\" : \"inline-block\"\n\t}\n    if (props.type === 'video'){\n\t\tcard = (\n            <Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Video embedId={props.src} /> \n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n      );\n\t}\n\tif (props.type === 'card-img-left'){\n\t\tcard = (\n\t\t\t<Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Card.Text className={props.text_size}> \n\t\t\t\t\t\t\t\t<p className=\"is-size-20 is-bold\">{props.title}</p>\n\t\t\t\t\t\t\t\t<p className=\"is-size-13\">{props.text}</p>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Card.Img loading=\"lazy\"  src={props.src} alt={props.alt}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n\t\t) \n\t}\n\tif (props.type === 'card-img-right'){\n\t\tcard = (\n\t\t\t<Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Card.Img  loading=\"lazy\"  src={props.src} alt={props.alt}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Card.Text className={props.text_size}>\n\t\t\t\t\t\t\t<p className=\"is-size-20 is-bold\">{props.title}</p>\n\t\t\t\t\t\t\t\t<p className=\"is-size-13\">{props.text}</p>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n\t\t) \n\t}\n\tif (props.type === 'jumbotron'){\n\t\tcard=(\n\t\t\t<>\n\t\t\t<h2 className=\"has-text-centered is-size-24 is-bold\">Apprenez à nous connaître?</h2>\n\t\t\t{/*<div className=\"jumbotron jumbotron-fluid alert alert-primary\">\n\t\t\t\t\n\t\t\t<p className=\"lead jumbottron-lead is-marginless\">\n\t\t\t\t<Row>\n\t\t\t\t<Col md={1}></Col>\n\t\t\t\t<Col md={8}>\n\t\t\t\t<h1 className=\"display-4 is-size-18 is-bold\">Envie de tarifs personnalisées?</h1>\n\t\t\t\t<p>Sélectionnez un parmi nos tarifs en promotion qui s&#39;adaptent à vos besoins quelle que soit la taille de votre commerce. <b>Commencez vos économies dès maintenant!</b></p>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={2}>\n\t\t\t\t<a className=\"btn btn-primary btn-lg jumbotron-btn\" href=\"/pricing\" role=\"button\">Tarifs</a></Col>\n\t\t\t\t<Col md={1}></Col>\n\t\t\t\t</Row>\n\t\t\t</p>\n\t\t\t</div>*/}\n\t\t\t</>\n\t\t)\n\t}\n\treturn (\n\t<Container lg className=\"card-container\" >\n\t\t{card}\n\t</Container>\n\t);\n}\n\nCards.propTypes = {\n\ttype: PropTypes.string,\n\ttext_size : PropTypes.string,\n\ttitle: PropTypes.string,\n\ttext: PropTypes.string,\n\tsrc: PropTypes.string,\n\talt: PropTypes.string\n  };\nexport default Cards\n","import { Col, Row } from \"react-bootstrap\";\nimport './IntroCard.scss';\nfunction IntroCard() {\n    return (\n        <> \n\t\t\t<div className=\"bg-image p-5  mb-5 text-white align-items-center d-flex\">\n\t\t\t\t<Col md={6} className=\"cover-text-bloc has-text-centered has-text-left-touch\">\n\t\t\t\t\t\t<h1 className=\"is-size-30 is-size-15-mobile is-white\">\n\t\t\t\t\t\t{'On s\\'engage '}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{'à améliorer'}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{'votre expérience'}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t{/* <a type=\"button\" href=\"/tracking\" className=\"is-size-15 btn btn-primary\"> Suivre un colis</a> */}\n\t\t\t\t</Col>\n\t\t\t\t<img src=\"https://calirextn.com/assets/images/truck.svg\" className=\"cover-icon is-hidden-touch\"/>\n\t\t\t\t<img src='https://calirextn.com/assets/images/building-shadow.webp' className=\"cover-image is-hidden-touch\"/>\n\t\t\t</div>\n\t\t\t\n        </>  \n    );\n}\nexport default IntroCard;\n","import { Container, Row } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nconst imgStyle = {\n\tpadding: \" 2rem \"\n};\nconst hrStyle ={\n\twidth: \"50%\",\n\t\"display\" : \"inline-block\"\n}\nconst Map = (props) => (\n\t<Container className=\"has-text-centered\" style={imgStyle}>\n\t\t<hr  style={hrStyle}/>\n\t\t<Row>\n\t\t\t<p className=\"is-size-24 is-bold\">{props.title}</p>\n\t\t\t<p className=\"is-size-15\">{props.subtitle}</p>\n\t\t</Row>\n\t\t<Row>\n\t\t<a data-expand-link className=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/maps/place/Calirex+Tunisie/@36.7643632,10.0340955,15z/data=!4m2!3m1!1s0x0:0xe8edc1e22de4a228?sa=X&ved=2ahUKEwjgvoCwnJvzAhUkBGMBHX4YCpIQ_BJ6BAhJEAU\">\n\n\t\t\t<img data-expand-target loading=\"lazy\" className=\"standalone-img\" src={props.src} alt={props.alt}></img></a>\n\t\t</Row>\n\t</Container>\n\t)\n\tMap.propTypes = {\n\t\ttitle: PropTypes.string,\n\t\tsubtitle: PropTypes.string,\n\t\tsrc: PropTypes.string,\n\t\talt: PropTypes.string\n\t};\nexport default Map;\n","import Slider from '../slider/Slider';\nimport Cards from '../cards/Cards';\n\nimport { Container } from \"react-bootstrap\";\nimport IntroCard from '../introCard/IntroCard';\nimport Map from '../map/Map';\nimport './Home.scss';\n\n\nfunction Home() {\n\tconst cards_data = require('../data/cards.json'); \n\tconst map_title = \"Vous pouvez nous retrouver à cette addresse\";\n\tconst map_subtitle = \"7 avenue habib bourguiba Mornaguia, Manouba, 1110 Tunisie\";\n\tconst card_img = \"https://calirextn.com/assets/images/calirex-tunisie-geolocatisation.jpg\";\n    const cards = [];\n    for (let card of cards_data.cards) {\n\t\tconst card_item = (\n\t\t\t<Cards type={card.type} title={card.title} src={card.src} text_size={card.text_size} text={card.text} alt={(card.alt) ? card.alt : ''}></Cards>\n\t\t);\n      cards.push(card_item);\n    }\n    return (\n        <> \n\t\t\t<IntroCard/>\n\t\t\t{cards}\n\t\t\t<Map title={map_title} subtitle={map_subtitle} src={card_img} alt=\"Calirex Tunisie address\" />\n\t\t\t<div className='container'>\n\t\t\t</div>\n        </>  \n    );\n}\nexport default Home;\n","// return the user data from the session storage\nimport axios from 'axios';\nexport const getOrders = (token, resolve, reject) => {\n    axios.get('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/orders?pathvar='+token.replace(/\\W/g, '-')+'orders').then(response => {\n        if(response.data.statusCode === 200) {\n            resolve(response.data.body)\n            return(response.data.body)\n        }else{\n         \n            resolve(0)\n            return 0\n        }\n    }).catch(error => {\n        resolve(0)\n        return 0\n    });\n}\nexport const getClients = (token, resolve, reject) => {\n  axios.get('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/clients?authtoken='+token.replace(/\\W/g, '-')).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const getCustomers = (token, resolve, reject) => {\n  axios.get('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/customers?pathvar='+token.replace(/\\W/g, '-')+'customers').then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const setOrders = (data, resolve, reject) => {\n  axios.post('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/orders',data).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const setCustomers = (data, resolve, reject) => {\n  console.log('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/customers',data)\n  axios.post('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/customers',data).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\n\nconst userAttributes = [\"phonenumber\", \"companyname\", \"landline\", \"plan\", \"address\", \"postalcode\", \"email\", \"country\", \"state\", \"city\", \"lastname\", \"countrycode\", \"firstname\", \"id\"]\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('firstname');\n  \n  if (userStr) return userStr;\n  else return null;\n}\n\n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token')\n  sessionStorage.removeItem('orders')\n  sessionStorage.removeItem('customers')\n  for (let i = 0; i < userAttributes.length; i++){\n    sessionStorage.removeItem(userAttributes[i])\n  }\n}\nexport const getUserIds = (token) =>{\n  const users = JSON.parse(sessionStorage.getItem(\"customers\"))\n  let ids = []\n  for (let i=0; i<users[token].length; i++){\n    if(users[token][i].memory==1){\n      ids.push(users[token][i].id)\n    }\n  }\n  return ids\n}\n// set user session\nexport const setUserSession = (user) => {\n  sessionStorage.setItem('token', user.id);\n  for (let i = 0; i < userAttributes.length; i++){\n    sessionStorage.setItem(userAttributes[i], user[userAttributes[i]]);\n  }\n  setClientsList(user.id)\n  //setOrdersList(user.id)\n  //setCustomersList(user.id)\n}\nexport const setClientsList =  (token) => {\n  new Promise((resolve,reject) => {\n    getClients(token, resolve, reject)\n  }).then((list) => {\n    if(list){\n      \n      list.forEach( async (element) => {\n        await setOrdersList(element.id)\n        await setCustomersList(element.id)\n      });\n      sessionStorage.setItem('clients', JSON.stringify(list));\n    }\n    else{\n      sessionStorage.setItem('clients', '[]');\n    }\n    \n  })\n  \n  \n}\n\n\nexport const setOrdersList = async (token) => {\n  new Promise((resolve,reject) => {\n    getOrders(token, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      let sessionVariable\n      let str = sessionStorage.getItem('orders')\n      if (str!='undefined'){\n        sessionVariable = JSON.parse(str)\n      }\n      if (!sessionVariable){\n        sessionVariable = {}\n      }\n      sessionVariable[token] = list.Items\n      console.log(sessionVariable)\n      sessionStorage.setItem('orders', JSON.stringify(sessionVariable));\n    }\n    else{\n      sessionStorage.setItem('orders', '[]');\n    }\n    \n  })\n  \n  \n}\nexport const setCustomersList = async (token) => {\n  new Promise((resolve,reject) => {\n    getCustomers(token, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      let sessionVariable\n      let str = sessionStorage.getItem('customers')\n      if (str!='undefined'){\n        sessionVariable = JSON.parse(str)\n      }\n      if (!sessionVariable){\n        sessionVariable = {}\n      }\n      sessionVariable[token] = list.Items\n      console.log(sessionVariable)\n      sessionStorage.setItem('customers', JSON.stringify(sessionVariable));\n    }\n    else{\n      sessionStorage.setItem('customers', '[]');\n    }\n    \n  })\n  \n  \n}\nexport const updateOrderList = (token,rawdata) => {\n  console.log(rawdata)\n  new Promise((resolve,reject) => {\n    setOrders(rawdata, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      setOrdersList(token)\n      console.log(list)\n      alert(\"Votre commande a été mise à jour\")\n    }\n    else{\n      alert(\"Une erreur est survenue. Veuillez réessayer ultérieurement.\")\n    }\n    \n  })\n  \n  \n}\nexport const updateCustomersList = (token,rawdata) => {\n  new Promise((resolve,reject) => {\n    setCustomers(rawdata, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      setCustomersList(token)\n    }\n    else{\n      alert(\"Une erreur est survenue. Veuillez réessayer ultérieurement.\")\n    }\n    \n  })\n  \n  \n}\nexport const getClientslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"clients\"))\n  let items = []\n  for (let i=0; i<list.length; i++){\n      items.push(list[i])\n  }\n    return (JSON.stringify(items))\n}\nexport const getOrderslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"orders\"))\n  return (JSON.stringify(list))\n}\nexport const getCustomerslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"customers\"))\n  return (JSON.stringify(list))\n}\nexport const getUserPlan = () => {\n  return (sessionStorage.getItem(\"plan\"))\n}\n\nexport const getUserSession = () => {\n  const userInfo = []\n  for (let i = 0; i < userAttributes.length-1; i++){\n    if(!sessionStorage.getItem(userAttributes[i])){\n      return null\n    }\n    userInfo.push(sessionStorage.getItem(userAttributes[i]))\n    \n  }\n  const retVal = [userAttributes.slice(0, 13),userInfo]\n  return retVal\n}","import { Navbar,NavDropdown, Container, Nav} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\nimport './Header.scss';\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCircle, faSignOutAlt, faBell } from '@fortawesome/free-solid-svg-icons'\nimport { removeUserSession } from '../../api/Common';\nfunction Header(props) {\n    let history = useHistory();\n\tconst handleLogout = () => {\n\t\tremoveUserSession();\n\t\thistory.push(\"/login\")\n\t\t}\n    const userDropdownTitle = (<FontAwesomeIcon className='is-size-15' icon={faUserCircle} />);\n    const logoutDropdownTitle = (<FontAwesomeIcon icon={faSignOutAlt} />);\n    const bellIcon = (<FontAwesomeIcon className='is-size-15' icon={faBell} />);\n    const loggedIn = <Nav>\n\n                        <NavDropdown   title=\"Menu\" id=\"login-nav-dropdown\">\n                            <NavDropdown.Item href=\"/dashboard\">Tableau de bord</NavDropdown.Item>\n                            {/* <NavDropdown.Item href=\"/customers\">Mes clients</NavDropdown.Item>*/}\n                            <NavDropdown.Item href=\"/orders\">Mes commandes</NavDropdown.Item>\n                            {/* <NavDropdown.Item href=\"/bills\">Mes Factures</NavDropdown.Item>*/}\n                            {/* <NavDropdown.Item href=\"/notifications\">Mes alertes</NavDropdown.Item> */}\n                        </NavDropdown>\n                        <NavDropdown title={userDropdownTitle} id=\"login-nav-dropdown\">\n                            {/*<NavDropdown.Item href=\"/profile\">Mon profil</NavDropdown.Item>*/}\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"/\" onClick={handleLogout}>Se déconnecter {logoutDropdownTitle}</NavDropdown.Item>\n                        </NavDropdown>\n                        {/* <Nav.Link href=\"/notifications\">{bellIcon}</Nav.Link> */}\n                    </Nav>\n\t\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"lg\" bg={props.bg} variant=\"dark\">\n        <Container className=\"page-header\" >\n        <Navbar.Brand href=\"/\">\n                <img\n                alt=\"\"\n                src=\"https://calirextn.com/assets/images/bare-logo-ctn.svg\"\n                width=\"70\"\n                height=\"70\"\n                className=\"d-inline-block align-top\"\n                />{' '}\n            </Navbar.Brand>\n        <Navbar.Brand  className=\"mea-text\" href=\"/\">Calirex Tunisie</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\n            <Nav className=\"me-auto\">\n            {/*<Nav.Link href=\"/signup\">Tarifs</Nav.Link>*/}\n\t\t\t{/* <Nav.Link href=\"/tracking\">Suivre un colis</Nav.Link> */}\n            </Nav>\n\n\t\t\t{loggedIn}\n            \n        </Navbar.Collapse>\n        </Container>\n        </Navbar>      \n        </>  \n    );\n}\n\nHeader.propTypes = {\n    bg: PropTypes.array\n};\n\nexport default Header;\n","import {Navbar, Container, Nav, NavDropdown} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\nimport './Header.scss';\n\nfunction HeaderOut(props) {\n\tconst loggedOut = <Nav><Nav.Link href=\"/login\">Connexion</Nav.Link>{/*<Nav.Link href=\"/signup\">S&#39;inscrire</Nav.Link>*/}</Nav>\n\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"lg\" bg={props.bg} variant=\"dark\">\n        <Container className=\"page-header\" >\n        <Navbar.Brand href=\"/\">\n                <img\n                alt=\"\"\n                src=\"https://calirextn.com/assets/images/bare-logo-ctn.svg\"\n                width=\"70\"\n                height=\"70\"\n                className=\"d-inline-block align-top\"\n                />{' '}\n            </Navbar.Brand>\n        <Navbar.Brand  className=\"mea-text\" href=\"/\">Calirex Tunisie</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\n            <Nav className=\"me-auto\">\n            <Nav.Link href=\"/signup\">S&#39;enregistrer</Nav.Link>\n\t\t\t{/* <Nav.Link href=\"/tracking\">Suivre un colis</Nav.Link> */}\n            </Nav>\n\n\t\t\t{loggedOut}\n            \n        </Navbar.Collapse>\n        </Container>\n        </Navbar>      \n        </>  \n    );\n}\n\nHeaderOut.propTypes = {\n    bg: PropTypes.array\n};\n\nexport default HeaderOut;\n","\nimport {footer} from 'react-bootstrap'\nimport { FaRegEnvelope, FaFacebookSquare ,FaTwitterSquare, FaLinkedin,FaInstagram, FaMapMarkerAlt,FaPhoneSquareAlt} from \"react-icons/fa\";\nimport './Footer.scss';\nconst Footer = () => <footer className=\"footer\">\n    <div className=\"footer-center col-md-4 col-sm-6\">\n    <p className=\"about\">\n        <span> Qui sommes nous?</span> Entreprise de livraison à domicile qui s&lsquo;adapte à vos besoins. Livrer plus rapidement à vos clients et finalisez vos transactions.\n    </p>\n    <div className=\"icons\">\n        \n        <a href=\"https://pages.facebook.com/CalirexTunisie\"><FaFacebookSquare className=\"ct-icon\"/></a>\n        <a href=\"https://twitter.com/CalirexTunisie\"><FaTwitterSquare className=\"ct-icon\"/></a>\n        <a href=\"https://linkedin.com/company/calirex-tunisie\"><FaLinkedin className=\"ct-icon\"/></a>\n        <a href=\"https://www.instagram.com/calirex.tunisie\"><FaInstagram className=\"ct-icon\"/></a>\n    </div>\n    </div>\n    <div className=\"footer-center\">\n    <div>\n        <a><FaMapMarkerAlt className=\"ct-icon\"/>\n        <p><span> 7 avenue habib bourguiba, Mornaguia</span> Manouba, Tunisie</p></a>\n    </div>\n    <div>\n        <FaPhoneSquareAlt className=\"ct-icon\"/>\n        <p> (+216) 50 873 992</p>\n    </div>\n    <div>\n        <FaRegEnvelope className=\"ct-icon\"/>\n        <p><a href=\"#\"> info@calirextn.com</a></p>\n    </div>\n    </div>\n    <div className=\"footer-right\">\n    <h2 className=\"mea-text\"> Calirex <span>Tunisie</span></h2>\n    <p className=\"menu\">\n        <a href=\"/\"> Accueil</a> |\n        <a href=\"/pricing\"> Tarifs</a> |\n        <a href=\"/carrieres\"> Carrières</a> |\n        {/* <a href=\"/tracking\"> Suivre un colis</a> */}\n    </p>\n    <p className=\"name\"> Calirex Tunisie &copy; 2021</p>\n    </div>\n\t<div className=\"footer-bottom\">\n\t\tCopyright © 2021 calirex tunisie. Tous droits réservés.\n\t</div>\n    </footer>\n\nexport default Footer\n","import React, {useState } from \"react\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\nimport './Prices.scss';\n\nfunction Prices() {   \n\tlet table_data = require('../data/prices.json'); \n\tlet title = \"Choisissez l'offre qui vous convient\";\n  const [show, setShow] = useState(false);\n  const css = `\n      .App {\n          background: url('https://calirextn.com/assets/images/loading-background.svg');\n          background-position: bottom right;\n          background-size: cover;\n          background-repeat: no-repeat;\n      }\n  `\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const cards = [];\n    for (let card of table_data.cards) {\n      const criterias = []\n      \n      for (let criterea of card.criterias) {\n      const criterias_item = (\n        <li className=\"list-group-item price-card-bullet\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check text-primary\" viewBox=\"0 0 16 16\">\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\n          </svg> {criterea}\n        </li>\n      )\n      criterias.push(criterias_item);\n      }\n\t\tconst card_item = (\n\n        <div className=\"col-lg-4 col-md-12 mb-4\">\n          <Card className=\"popout-card h-100 shadow-lg pricing-card\">\n            <Card.Body>\n              <span className=\"badge text-primary badge-card is-size-13\">{card.promo}</span>\n              <div className=\"text-center p-3\">\n                <br/>\n                <Card.Title className=\"is-size-20 text-primary text-center price-card-title\" dangerouslySetInnerHTML={{__html: card.name}}></Card.Title>\n                <br/>\n                <small className=\"text-tertiary is-size-11\">{card.quantity}</small>\n                <br/><br/>\n                <span className=\"h1\">{card.price}</span><sup>TND</sup>/colis\n                <br/><br/>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                {criterias}\n              </ul>\n            </Card.Body>\n            <Card.Footer className=\" text-center price-card-footer\">\n              <button className=\"btn btn-primary btn-card btn-lg\" onClick={handleShow}>Selectionner</button>\n            </Card.Footer>\n          </Card>\n        </div>\n\t\t);\n      cards.push(card_item);\n    }\n    return (\n        <> \n          <Helmet>\n              <style>{css}</style>\n          </Helmet>\n          <div classNameName= \"Prices\">\n            <div className=\"container-fluid price-cards-container\" >\n              <div className=\"container p-4\">\n                <h2 className=\" text-center text-white p-4\">{title}</h2>\n                <div className=\"row\">\n                  {cards}\n                </div>    \n              </div>\n            </div>\n          </div>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Modal heading</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Woohoo, you&#39;re reading this text in a modal!</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose}>\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>  \n    );\n}\n\n\nexport default Prices;\n","\nimport {getToken} from '../../api/Common';\nimport {useHistory} from \"react-router-dom\";\nimport {Button} from 'react-bootstrap';\nfunction Profile() {\n\tlet history = useHistory();\n\t// handle click event of logout button\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n    //const userInfo = getUserSession()\n    //console.log(userInfo)\n\treturn(\n        <div className=\"container rounded bg-white mt-5 mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-3 border-right\">\n                    <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\n                        <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\n                    </div>\n                </div>\n                <div className=\"col-md-5 border-right\">\n                    <div className=\"p-3 py-5\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                            <h4 className=\"text-right\">Profile Settings</h4>\n                        </div>\n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-6\"><label className=\"labels\">Nom</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"first name\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-6\"><label className=\"labels\">Prénom</label>\n                                <input type=\"text\" className=\"form-control\" value=\"\" placeholder=\"surname\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Adresse mail</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Société</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Programme</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-12\"><label className=\"labels\">Numéro de téléphone</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter phone number\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Adresse</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 1\" value=\"\"/>\n\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Complément d&#39;adresse</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Code postal</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n                                \n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Ville</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <label className=\"labels\">Pays</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"country\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <label className=\"labels\">État</label>\n                                <input type=\"text\" className=\"form-control\" value=\"\" placeholder=\"state\"/>\n                            </div>\n                        </div>\n                        <div className=\"mt-5 text-center\">\n                            <button className=\"btn btn-primary profile-button\" type=\"button\">Sauvegarder</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"p-3 py-5\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 text-right\"\n                                style={{ textAlign: 'end'}}\n                            >\n                                <Button variant=\"primary\" size=\"lg\">Modifier</Button>\n                            </div>\n                            <div className=\"col-md-6\"\n                                style={{ textAlign: 'start'}}\n                            >\n                                <Button variant=\"danger\" size=\"lg\">Supprimer</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\t);\n}\n\nexport default Profile;\n\n\n\n\n\n\n","import Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport PropTypes from \"prop-types\";\nimport { Container } from 'react-bootstrap';\n\n function Breadcrumbs(props) {\n    let breadcrumbs = <></>;\n\tconst content = [];\n\n\tlet bcscript = {\n\t\t\"@context\": \"https://schema.org\",\n\t\t\"@type\": \"BreadcrumbList\",\n\t\t\"itemListElement\": []\n\t}\n\tlet crumbs_list = \n\t\t{\n\t\t\t\"@type\": \"ListItem\",\n\t\t\t\"position\": 0,\n\t\t\t\"name\": \"\",\n\t\t\t\"item\": \"\"\n\t\t}\n\t\t\n\t\tfor (let index = 0 ; index <  props.crumbs.length; index++ ) {\n\t\t\tconst crumb = props.crumbs[index]\n\t\t\tcrumbs_list[\"position\"] = index\n\t\t\tcrumbs_list[\"name\"] = crumb[1]\n\t\t\tcrumbs_list[\"item\"] = \"https://www.calirextn.com\" + crumb[0]\n\t\t\tbcscript.itemListElement.push(crumbs_list);\n\t\t\tconst crumb_item = (\t\t\t\n\t\t\t\t<Breadcrumb.Item className={props.invertedText ? \"is-white\" : false } active={index === props.crumbs.length-1 ? true : false } href={crumbs_list[\"item\"]}>\n\t\t\t\t\t{crumbs_list[\"name\"]}\n\t\t\t\t</Breadcrumb.Item>\n\n\t\t\t);\n\t\t\tcontent.push(crumb_item);\n\t\t\t\n\t\t}\n\t\tconst script_content = JSON.stringify(bcscript)\n\t\tconsole.log(script_content)\n\t\tbreadcrumbs = (\n\t\t\t<>\n\t\t\t<Container>\n\t\t\t<Breadcrumb>\n\t\t\t\t{content}\n\t\t\t</Breadcrumb>\n\t\t\t</Container>\n\t\t\t</>\n\t\t) \n\t\n\n\treturn (\n\t\t<>\n\t\t\t{breadcrumbs}\n\t\t\t<script type=\"application/ld+json\" dangerouslySetInnerHTML={{__html: script_content}}></script>\n\t\t</>\n\t);\n}\n\nBreadcrumbs.propTypes = {\n\tcrumbs: PropTypes.array,\n\tinvertedText : PropTypes.string\n  };\nexport default Breadcrumbs\n\n\n\n\n\n\n\n","\nimport {getToken,updateOrderList,updateCustomersList, getUserSession} from './Common';\nconst CryptoJS = require(\"crypto-js\");\nconst QRCode = require('qrcode.react');\nconst token = getToken()\nexport const submitOrder = (formData, e, ordersList, dataTransfer, newUserTransfer, customersList) =>{ \n    const date = new Date()\n    formData[\"delivery_date\"] = \"\"\n    formData[\"return_date\"] = \"\"\n    formData[\"memory\"] = 1\n    formData[\"TableName\"] = token+\"orders\"\n    formData[\"status\"] = \"en attente d'enlèvement\"\n    formData[\"address\"] = \"0\"\n\n    let Clientorder_exists = 0\n    let order_exists = 0\n    if((!formData[\"client_id\"])&&(formData.addClient)){\n      newUserTransfer= submitCustomer (formData.addClient[0], e, customersList,newUserTransfer)\n      let userTransferObject = JSON.parse(newUserTransfer)\n      formData[\"client_id\"] = userTransferObject.id\n\n      console.log(formData)\n      console.log(typeof(formData) )\n    }\n    const oldData = JSON.parse(\"[\"+dataTransfer+\"]\")\n    let local_Clientorder_exists = false\n    for(let i=0; i<oldData.length;i++){\n\n        if(oldData[i][\"client_id\"]===formData[\"client_id\"]){\n          local_Clientorder_exists = 1\n          oldData[i][\"package_number\"] = parseInt(oldData[i][\"package_number\"]) + parseInt(formData[\"package_number\"])\n          oldData[i][\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(oldData[i][\"weight_g\"])\n          oldData[i][\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(oldData[i][\"price_base\"])\n        }\n         \n    }\n    console.log(oldData.length)\n    console.log(ordersList.length)\n\n    for(let i=0; i<ordersList.length;i++){\n      console.log(formData)\n\n      if(ordersList[i][\"status\"]===\"en attente d'enlèvement\"){\n        order_exists = i+1\n        formData[\"id\"] = ordersList[i][\"id\"]\n        if(ordersList[i][\"client_id\"]===formData[\"client_id\"]){\n          Clientorder_exists = i+1\n        }\n      }\n\n      if(i===ordersList.length-1){\n        \n        if (oldData.length===0){\n          if(order_exists){\n            formData[\"order_id\"] = ordersList[order_exists-1][\"order_id\"]\n            console.log(' formData[\"order_id\"]')\n            console.log( formData[\"order_id\"])\n          }else{\n            formData[\"order_id\"] = \"CTO-\"+ Date.now()\n            console.log(\" order doesn't exist\")\n          }\n          if (Clientorder_exists){\n            console.log(\"client order exist\")\n            formData[\"id\"] = ordersList[Clientorder_exists-1][\"id\"]\n            formData[\"package_number\"] = parseInt(ordersList[Clientorder_exists-1][\"package_number\"]) + parseInt(formData[\"package_number\"])\n            formData[\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(ordersList[Clientorder_exists-1][\"weight_g\"])\n            formData[\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(ordersList[Clientorder_exists-1][\"price_base\"])\n            formData[\"creation_date\"] = ordersList[Clientorder_exists-1][\"creation_date\"]\n          }else{\n            formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n            formData[\"id\"] = \"CTP-\"+ Date.now()\n          }\n\n          dataTransfer =JSON.stringify(formData)\n        }else{\n          if (local_Clientorder_exists){\n            dataTransfer = JSON.stringify(oldData)\n          }else{\n            if (Clientorder_exists){\n              formData[\"order_id\"] = ordersList[order_exists][\"order_id\"]\n              formData[\"id\"] = ordersList[Clientorder_exists-1][\"id\"]\n              formData[\"package_number\"] = parseInt(ordersList[Clientorder_exists-1][\"package_number\"]) + parseInt(formData[\"package_number\"])\n              formData[\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(ordersList[Clientorder_exists-1][\"weight_g\"])\n              formData[\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(ordersList[Clientorder_exists-1][\"price_base\"])\n              formData[\"creation_date\"] = ordersList[Clientorder_exists-1][\"creation_date\"]\n            }else{\n              formData[\"order_id\"] = oldData[0][\"order_id\"]\n              formData[\"id\"] = \"CTP-\"+ Date.now()\n              formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n              \n            }\n            dataTransfer =dataTransfer +\",\"+ JSON.stringify(formData)\n          }\n        }\n\n\n      }\n    }\n    if (ordersList.length === 0){\n      if (local_Clientorder_exists){\n        dataTransfer = JSON.stringify(oldData)\n      }else{\n        formData[\"id\"] = \"CTP-\"+ Date.now()\n        formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n        if (oldData.length===0){\n          formData[\"order_id\"] = \"CTO-\"+ Date.now()\n          dataTransfer =JSON.stringify(formData)\n        }else{\n          formData[\"order_id\"] = oldData[0][\"order_id\"]\n          dataTransfer =dataTransfer +\",\"+ JSON.stringify(formData)\n        }\n      }\n    }\n    return [dataTransfer,newUserTransfer]\n    \n  }\nexport  const submitCustomer = (formData, e, customersList,dataTransfer) =>{ \n    formData[\"memory\"] = 1\n    formData[\"TableName\"] = token+\"customers\"\n    formData[\"country_code\"] = \"+216\"\n    console.log(formData)\n    console.log(customersList)\n    let userExists = false\n    for(let i=0; i<customersList.length;i++){\n      if(customersList[i][\"email\"]===formData[\"memory\"] ){\n        userExists = i\n        alert(\"Ce client a déjà été créé\")\n      }\n    }\n    if(!userExists){\n      formData[\"id\"] =  \"CTCID-\"+ Date.now()\n      console.log(formData[0])\n      console.log(dataTransfer)\n      dataTransfer =dataTransfer +(dataTransfer===\"\" ?\"\":\",\") + JSON.stringify(formData)\n      console.log(JSON.stringify(formData))\n      \n    }\n    Object.keys(formData).map(function(key, index) {\n      formData[key] = \"\";\n    });\n    console.log(e)\n    console.log(dataTransfer)\n    return dataTransfer\n  }\n\n  export const generateBill = (selectedItems,products, inputList, setInputList,allcustomersList,clientsList)=>{\n\n    console.log(\"customersList]\")\n    console.log(customersList)\n    console.log(customersList[0])\n    let userInfo = clientsList[0]   \n    let newImputList = []\n    let customersList = allcustomersList[clientsList[0].id]\n    console.log(products)\n    for (let select of selectedItems) {\n        let date = new Date() \n        let today = date.toISOString().split('T')[0].replace(/-/g,'/');\n        clientsList.forEach((arrObj) => {\n          if(arrObj['id']===products[select-1]['client_id']){\n            console.log(\"we found our object\")\n            userInfo = arrObj\n            customersList = allcustomersList[products[select-1]['id_company']]\n          }\n        })\n        console.log(\"products[select-1]\")\n        console.log(products[select-1])\n        let weight =  products[select-1][\"total_weight\"]\n        let order =  products[select-1][\"order_id\"]\n        let nb_colis = products[select-1][\"package_number\"]\n        let text = token + products[select-1][\"id\"]+ products[select-1][\"order_id\"]\n        let ciphertext = CryptoJS.AES.encrypt(text, '-tracking-number-').toString();\n        let raw_product_price = (products[select-1][\"total_price\"]*0.93).toFixed(3)\n        let tva_product_price = (products[select-1][\"total_price\"]*0.07).toFixed(3)\n        let product_price = products[select-1][\"total_price\"]\n        let raw_delivery_price = (products[select-1][\"price_delivery\"]*0.93).toFixed(3)\n        let tva_delivery_price = (products[select-1][\"price_delivery\"]*0.07).toFixed(3)\n        let delivery_price = products[select-1][\"price_delivery\"]\n        let raw_total_price = Number(raw_product_price) + Number(raw_delivery_price)\n        let tva_total_price = Number(tva_delivery_price) + Number(tva_product_price)\n        let total_price = product_price + delivery_price\n        //log encrypted data\n            let Input = () => {\n                return <>\n                        <div className=\"page-break\" />\n                        <table className=\"table table-bordered has-background-white\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">\n\n                                <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                            </th>\n                            <th scope=\"col\">\n                                <p className='is-size-9'>Societé de livraison: <u>Calirex Tunisie</u>\n                                <br/><u>Site Web: </u>https://www.calirextn.com/\n                                <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                                <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                                <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                            </th>\n                            <th>\n                              Date: {today}\n                              <br/>\n                              Manifest {order}\n                            </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <td colSpan={2}> <b>Société: {userInfo[1]}</b>\n                                <br/>Adresse: {userInfo[4]}, {userInfo[9]}, {userInfo[8]}, {userInfo[7]}\n                                <br/>Numéro de téléphone: ({userInfo[11]}) {userInfo[2]}\n                            </td>\n                            <td>\n\n                            </td>\n                            </tr>\n\n                            <tr>\n                            <td><u>Prix du produit:</u> {product_price} \n                              <br/>prix(HT): {raw_product_price} TND\n                                <br/>TVA(7%): {tva_product_price} TND\n                                <br/>prix(TTC): {product_price} TND\n                                <br/>\n                                    <b>Prix de la livraison:</b>\n                                <br/>prix(HT): {raw_delivery_price} TND\n                                <br/>TVA(7%): {tva_delivery_price} TND\n                                <br/>prix(TTC): {delivery_price} TND\n                                <br/>\n                                  \n                                <b>Total à payer:</b>\n                                <br/>prix(HT): {raw_total_price} TND\n                                <br/>TVA(7%): {tva_total_price} TND\n                                <br/>prix(TTC): {total_price} TND\n                                <br/><u>Poids:</u> {weight} grammes\n                                <br/><u>Nombre de colis:</u> {nb_colis}\n                            </td>\n                            <td>\n                                Signature Calirex Tunisie: \n                            </td>\n                            <td>\n                                Signature {userInfo[1]} \n                            </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>;\n            };\n\n            newImputList.push(<Input />)\n        \n    }\n    setInputList(newImputList);\n}\nexport const generateDeliverySlip = (selectedItems,products, inputList, setInputList,allcustomersList,clientsList)=>{\n    let newImputList = []\n    let nb_slip =1\n    let global_price =0\n    let global_weight =0\n    let global_delivery =0\n    let global_total =0\n    let order =products[selectedItems[0]]['order_id']\n    let global_packages =0\n    let date = new Date() \n    let userInfo = clientsList[0]\n    let customersList = allcustomersList[clientsList[0].id]\n    let today = date.toISOString().split('T')[0].replace(/-/g,'/');\n    for (let select of selectedItems) {\n     \n      clientsList.forEach((arrObj) => {\n        if(arrObj['id']===products[select-1]['client_id']){\n          console.log(\"we found our object\")\n          userInfo = arrObj\n          customersList = allcustomersList[products[select-1]['id_company']]\n        }\n      })\n      console.log(customersList)\n      console.log(\"products[select-1]\")\n      console.log(products[select-1])\n        let weight =  products[select-1][\"weight_g\"]\n        let nb_colis = products[select-1][\"package_number\"]\n        let text = token + products[select-1][\"id\"]+ products[select-1][\"order_id\"]\n        let ciphertext = CryptoJS.AES.encrypt(text, '-tracking-number-').toString();\n        let qrcode = \"https://calirextn.com/tracking?tracking_number=\"+ciphertext\n        let raw_product_price = (products[select-1][\"price_base\"]*0.93).toFixed(3)\n        let tva_product_price = (products[select-1][\"price_base\"]*0.07).toFixed(3)\n        let product_price = products[select-1][\"price_base\"]\n        let raw_delivery_price = (products[select-1][\"price_delivery\"]*0.93).toFixed(3)\n        let tva_delivery_price = (products[select-1][\"price_delivery\"]*0.07).toFixed(3)\n        let delivery_price = products[select-1][\"price_delivery\"]\n        let raw_total_price = Number(raw_product_price) + Number(raw_delivery_price)\n        let tva_total_price = Number(tva_delivery_price) + Number(tva_product_price)\n        let total_price = Number(product_price) + Number(delivery_price)\n        let client\n        let address\n        let number\n        let email\n        console.log(customersList)\n        console.log(products[select-1][\"client_id\"])\n        for(let j=0; j<customersList.length; j++){\n            \n            if(customersList[j][\"id\"]==products[select-1][\"client_id\"]){\n              console.log(customersList[j][\"id\"])\n                client = customersList[j][\"firstname\"] + \" \" + customersList[j][\"name\"]\n                address = customersList[j][\"address\"] + \", \"+customersList[j][\"state\"] + \", \"+customersList[j][\"postal_code\"] \n                number = customersList[j][\"country_code\"] + \" \" + customersList[j][\"phone\"]\n                email = customersList[j][\"email\"]\n            }\n        }\n        //log encrypted data\n        global_packages= global_packages + Number(nb_colis)\n        global_total= global_total + Number(total_price)\n        global_delivery= global_delivery + Number(delivery_price)\n        global_weight= global_weight + (weight?Number(weight):0)\n        global_price= global_price + Number(total_price)\n        for(let num_colis=1; num_colis<=nb_colis; num_colis++){\n            let is_even = ((nb_slip % 2)<1)\n            let pageBreak = is_even\n            let Input = () => {\n                return <>\n                  {pageBreak\n                    ?<p style={{pageBreakBefore: 'always'}}></p>\n                    :<></>\n                  }\n                        <table className=\"table table-bordered has-background-white\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">\n\n                                <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                            </th>\n                            <th scope=\"col\">\n                                <p className='is-size-9'>Calirex Tunisie\n                                <br/><u>Site Web: </u>https://www.calirextn.com/\n                                <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                                <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                                <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                            </th>\n                            <th scope=\"col\"><QRCode value={qrcode} /></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <td colSpan={2}><b>Destinataire</b>\n                                <br/>Nom: {client}\n                                <br/>Adresse: {address}\n                                <br/>tél: {number}\n                                <br/>e-mail: {email}\n                            </td>\n                            <td> <b>Expéditeur</b>\n                                <br/>Société: {userInfo['companyname']}\n                                <br/>Adresse: {userInfo['address']}, {userInfo['city']}, {userInfo['country']}, {userInfo['postalcode']}\n                                <br/>tél: ({userInfo['countrycode']}) {userInfo['phonenumber']}\n                            </td>\n                            </tr>\n\n                            <tr>\n                            <td colSpan={2}>                               \n                                <u>Total à payer:</u>\n                                <br/>prix(TTC): {total_price} TND\n                                    \n                            </td>\n                            <td>\n                              <u>Poids:</u> {weight} grammes\n                              <br/><u>Nombre de colis:</u> {num_colis}/{nb_colis}\n                            </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>;\n            };\n\n            newImputList.push(<Input />)\n            nb_slip++\n            \n        }\n    }\n    let Bill = () => {\n        return <>\n                \n                <p style={{pageBreakBefore: 'always'}} className=\"has-text-centered is-bold is-size-18\">Manifest</p>\n                <div className=\"page-break\" />\n                <table className=\"table table-bordered has-background-white\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">\n\n                        <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                    </th>\n                    <th scope=\"col\">\n                        <p className='is-size-9'>Societé de livraison: <u>Calirex Tunisie</u>\n                        <br/><u>Site Web: </u>https://www.calirextn.com/\n                        <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                        <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                        <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                    </th>\n                    <th>\n                      Date: {today}\n                      <br/>\n                      Manifest {order}\n                    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                    <td colSpan={2}> <b>Société: {userInfo['companyname']}</b>\n                                <br/>Adresse: {userInfo['address']}, {userInfo['city']}, {userInfo['country']}, {userInfo['postalcode']}\n                                <br/>tél: ({userInfo['countrycode']}) {userInfo['phonenumber']}\n                    </td>\n                    <td>\n\n                    </td>\n                    </tr>\n\n                    <tr>\n                    <td><u>Prix du produit:</u>\n                        {global_price} TND\n                        <br/>\n                            <b>Prix de la livraison:</b>{global_delivery} TND\n                        <br/>\n                          \n                        <b>Total à payer:</b>prix(TTC): {global_total} TND\n                        <br/><u>Poids:</u> {global_weight} grammes\n                        <br/><u>Nombre de colis:</u> {global_packages}\n                    </td>\n                    <td>\n                        Signature Calirex Tunisie: \n                    </td>\n                    <td>\n                        Signature {userInfo['companyname']} \n                    </td>\n                    </tr>\n                </tbody>\n            </table>\n        </>;\n    };\n    newImputList.push(<Bill />)\n    setInputList(newImputList);\n}\n\nexport \tconst SaveData= (items,products,onSubmit) =>{\n    let data = []\n    items.forEach(element => {\n        console.log(element)\n        data.push(products[element-1])\n        if (onSubmit=== \"orders\"){\n            data[data.length-1][\"TableName\"] = token+\"orders\"\n            if(data[data.length-1][\"status\"]===\"livré\"){\n              let date = new Date() \n              let today = date.toISOString().split('T')[0].replace(/-/g,'/');\n              data[data.length-1][\"delivery_date\"] = today\n            }\n        }\n        if (onSubmit === \"customers\"){\n            data[data.length-1][\"TableName\"] = token+\"customers\"\n        }\n    });\n    const dataTransfer = JSON.stringify(data)\n    if (onSubmit === \"orders\"){\n        console.log(items)\n        console.log(products)\n        console.log(data)\n        updateOrderList(token, '{\"data\":'+dataTransfer+'}' )\n    }\n    if (onSubmit === \"customers\"){\n        updateCustomersList(token, '{\"data\":'+dataTransfer+'}' )\n    }\n}","import React, {useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport {submitOrder,submitCustomer} from '../../api/DataManager';\nimport {getToken, getCustomerslist, getOrderslist, updateOrderList , updateCustomersList}  from '../../api/Common';\nimport Form from \"@rjsf/core\";\nfunction PopupForm(props) {   \n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setShow(false);\n  }\n  const orderHandleSave = () => {\n    updateOrderList(token, '{\"data\":['+dataTransfer+']}' )\n    if(newUserTransfer!=\"\"){\n      updateCustomersList(token, '{\"data\":['+newUserTransfer+']}' )\n    }\n    setShow(false);\n  }\n  const customerHandleSave = () => {\n    updateCustomersList(token, '{\"data\":['+dataTransfer+']}' )\n    setShow(false);\n  }\n  console.log(\"props.onSubmitFunction\" )\n  console.log(props.onSubmitFunction )\n\n  const customersList = JSON.parse(getCustomerslist())\n  const ordersList = JSON.parse(getOrderslist())\n  const token = getToken()\n  const handleShow = () => setShow(true);\n  const schema = {\n    title: \"Veuillez remplir le formulaire\",\n    type: \"object\",\n    required: Object.keys(props.requiredFields),\n    properties: props.schema,\n    definitions: props.additionalProperties\n  }\n  const uiSchema = {\n    \"ui:options\":  {\n      \"expandable\": true\n    }\n  };\n  let dataTransfer = \"\"\n  let newUserTransfer = \"\"\n  const onSubmitOrder = ({formData}, e) =>{ \n    let transfer = submitOrder(formData, e, ordersList, dataTransfer, newUserTransfer, customersList)\n    newUserTransfer = transfer[1]\n    dataTransfer = transfer[0]\n  }\n  const onSubmitCustomer = ({formData}, e) =>{ \n    dataTransfer = submitCustomer (formData, e, customersList,dataTransfer)\n  }\n  let onSubmit\n  let handleSave\n  if (props.onSubmitFunction === \"orders\"){\n    onSubmit = onSubmitOrder\n    handleSave = orderHandleSave\n  }\n  if (props.onSubmitFunction === \"customers\"){\n    onSubmit = onSubmitCustomer\n    handleSave = customerHandleSave\n  }\n\n    return (\n        <> \n          <Button variant={props.color} className=\" btn-card btn-lg\" onClick={handleShow}>{props.buttonTitle}</Button>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>{props.modalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> \n            <Form schema={schema} formData={\"\"} onSubmit={onSubmit}>\n            <Button variant=\"secondary\" type=\"submit\" >\n                Confirmer et ajouter\n              </Button>\n              </Form>\n        </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={handleSave}>\n                Sauvgarder\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>  \n    );\n}\nPopupForm.propTypes = {\n  modalTitle: PropTypes.string,\n  onSubmitFunction: PropTypes.string,\n  schema: PropTypes.array,\n  requiredFields: PropTypes.array,\n  additionalProperties: PropTypes.array,\n  color: PropTypes.string,\n  buttonTitle: PropTypes.string\n};\n\nexport default PopupForm;\n","import React, { useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport PropTypes from \"prop-types\";\nexport default function PrintComponent(props) {\n  let componentRef = useRef();\n\n  return (\n    <>\n      <div >\n        {/* button to trigger printing of target component */}\n        <ReactToPrint\n          trigger={() => <div className=\"p-3\"><Button className={props.printButton? \"\":\"is-hidden\"}>Imprimer</Button></div>}\n          content={() => componentRef}\n        />\n\n        {/* component to be printed */}\n        <div className=\"to-print\" ref={(el) => (componentRef = el)} >\n          <style type=\"text/css\" media=\"print\">{\"@page { size: A4 ; pageBreakBefore: 'always'}\"}</style>\n          {props.componentToPrint}\n        </div>\n      </div>\n    </>\n  );\n}\n\nPrintComponent.propTypes = {\n    componentToPrint: PropTypes.any,\n    printButton: PropTypes.any\n  };\n  ","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faClipboardList } from '@fortawesome/free-solid-svg-icons'\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport PopupForm from '../popupform/PopupForm';\nimport {Helmet} from \"react-helmet\";\nimport {Container, Button,Modal} from 'react-bootstrap';\nimport {getToken,getCustomerslist} from '../../api/Common';\nimport {generateDeliverySlip,SaveData,generateBill} from '../../api/DataManager';\nimport PrintComponent from '../../components/printComponent/PrintComponent';\nimport {useHistory} from \"react-router-dom\";\n\nfunction Table(props) {\n\tconst { SearchBar } = Search;\n\tconst { ToggleList } = ColumnToggle;\n\tlet history = useHistory();\n\t// handle click event of logout button\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n\tconst [show, setShow] = useState(false);\n\tconst handleShow = () => {\n\t\tconfirmDelete()\n\t\tsetShow(true);\n\t}\n\tconst handleClose = () => {\n\t\tsetShow(false);\n\t\t}\n\tconst customersList = JSON.parse(getCustomerslist())\n\tconst css = `\n\t\t.App {\n\t\t\tbackground: url('https://calirextn.com/assets/images/loading-background-light.svg');\n\t\t\tbackground-position: bottom right;\n\t\t\tbackground-size: cover;\n\t\t\tbackground-repeat: no-repeat;\n\t\t}Slider\n\t\t`\n\tconst customFormats = props.customFormats \n\tconst onSubmit = props.onSubmitFunction \n\tconst products = props.data\n\tlet modifiedItems = []\n\tconst columns = props.columns\n\tconst custoColumns = props.togglecolumns\n\tconst clientsList = props.clientsList\n\tconst title = props.title\n\tconst [inputList, setInputList] = useState([]);\n\tconst [selectedItems, setSelectedItems] = useState([]);\n\tconst [printButton, setPrintButton] = useState(false);\n\tconst [alertDelete, setAlertDelete] = useState(\"Voulez-vous supprimer ces éléments\");\n\tcolumns.forEach(element => {\n\t\telement.filter=textFilter({placeholder:\"...\"})\n\t});\n\tconst generatePdf = () =>{\n\t\tconsole.log(selectedItems)\n\t\tgenerateDeliverySlip(selectedItems,products,inputList, setInputList,customersList,clientsList)\n\t\tsetPrintButton(true)\n\t} \n\tconst generateBillPdf = () =>{\n\t\tconsole.log(selectedItems)\n\t\tgenerateBill(selectedItems,products,inputList, setInputList,customersList,clientsList)\n\t\tsetPrintButton(true)\n\t} \n\tconst handleOnSelect = (row, isSelect) => {\n\t\tlet item = 0\n\t\tconsole.log(row)\n\t\tconsole.log(isSelect)\n\t\tfor (let i=0; i<products.length; i++){\n\t\t\tif (products[i].id===row.id){\n\t\t\t\titem = i+1\n\t\t\t\tconsole.log(item)\n\t\t\t}\n\t\t}\n\t\tif (isSelect) {\t\t\t\n\t\t\tsetSelectedItems(selectedItems.concat(item))\n\t\t}else{\n\t\t\tsetSelectedItems(selectedItems.filter(i => i !== item))\n\t\t}\n\t\tconsole.log(selectedItems)\n\t\treturn true; // return true or dont return to approve current select action\n\t}\n\tconst modifyItems = () =>{\n\t\tSaveData (modifiedItems,products,onSubmit)\n\t}\n\tconst confirmDelete = ()=>{\n\t\tlet warning = \"\"\n\t\tlet msg = \"\"\n\t\tselectedItems.forEach(index => {\n\t\t\tif(products[index-1][\"status\"]==\"terminé\"||products[index-1][\"status\"]==\"en attente d'enlèvement\"){\n\t\t\t\tproducts[index-1][\"memory\"] = 0\n\t\t\t\tmsg = msg +(msg!=\"\"?\", \":\"\") + products[index-1][\"id\"]\n\t\t\t}else{\n\t\t\t\twarning = warning +(warning!=\"\"?\", \":\"\") + products[index-1][\"id\"]\n\t\t\t}\n\t\t\tif (warning ==\"\"){\n\t\t\t\tsetAlertDelete(alertDelete + \": \"+ msg)\n\t\t\t}else{\n\t\t\t\tsetAlertDelete(\"Ces éléments ne peuvent pas être supprimés\" + \": \"+ warning+\". Voulez-vous supprimer les éléments suivants: \"+msg)\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\n\tconst deleteItems = () =>{\n\t\tsetAlertDelete(\"Voulez-vous supprimer ces éléments\")\n\t\tconsole.log(selectedItems)\n\t\tSaveData (selectedItems,products,onSubmit)\n\t\thandleClose()\n\t}\n\n\tconst beforeSaveCell= (oldValue, newValue, row, column, done) =>{\n\t\tfor (let i=0; i<products.length;i++){\n\t\t\tif(products[i].id === row.id){\n\t\t\t\tproducts[i][column[\"dataField\"]]= newValue\n\t\t\t\tfor (let j=0; j<modifiedItems.length;j++){\n\t\t\t\t\tif(modifiedItems[j]=== (i+1)){\n\t\t\t\t\t\tconsole.log(modifiedItems)\n\t\t\t\t\t\tdone(true);\n\t\t\t\t\t\treturn { async: true };\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(modifiedItems)\n\t\t\t\t}\n\t\t\t\tmodifiedItems.push(i+1)\n\t\t\t\tconsole.log(modifiedItems)\n\t\t\t}\n\t\t}\n\t\tconsole.log(modifiedItems)\n\t\tdone(true);\n\t\treturn { async: true };\n\t}\n\tconst CustomToggleList = ({\n\n\t\tonColumnToggle,\n\t\ttoggles\n\t\t}) => (\n\t\t<div className=\"btn-group btn-group-toggle btn-group-vertical\" style={{ flexDirection: 'row' }} data-toggle=\"buttons\">\n\t\t\t{\n\t\t\tcustoColumns\n\t\t\t\t.map(column => ({\n\t\t\t\t...column,\n\t\t\t\ttoggle: toggles[column.dataField]\n\t\t\t\t}))\n\t\t\t\t.map(column => (\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ maxWidth: '200px',marginRight: '0.5rem !important',borderRadius: '0.3rem', height: '100%'}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvariant=\"outline-primary\"\n\t\t\t\t\tkey={ column.dataField }\n\t\t\t\t\tclassName={ `toggle-button ${column.toggle ? 'active' : ''}` }\n\t\t\t\t\tdata-toggle=\"button\"\n\t\t\t\t\taria-pressed={ column.toggle ? 'true' : 'false' }\n\t\t\t\t\tonClick={ () => onColumnToggle(column.dataField) }\n\t\t\t\t>\n\t\t\t\t\t{ column.text }\n\t\t\t\t</Button>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t\t);\t\n\tconst selectRow = {\n\t\tmode: 'checkbox',\n\t\tclickToSelect: true,\n\t\tclickToEdit: true,\n\t\tonSelect: handleOnSelect\n\t};\n\tconst cellEdit = {\n\t\tmode: 'click',\n\t\tbeforeSaveCell\n\t};\n\tconst actions = props.actions\n\tconst searchloop = (<FontAwesomeIcon icon={faSearch} />);\n\tconst titleIcon = (<FontAwesomeIcon icon={faClipboardList} />);\n\tconst modalSchema = props.schema\n\tconst test = props.columnToggleProps\n\tconsole.log(test)\n\tconst requiredFields = props.requiredFields\n\tconst additionalProperties = props.additionalProperties\n\treturn (\n\t\t<>\n\t\t<Helmet>\n\t\t\t<style>{css}</style>\n\t\t</Helmet>\n\t\t<Container className='p-5 info-table'>\t\t\n\t\t\t<ToolkitProvider\n\t\t\t\tbootstrap4\n\t\t\t\tkeyField={columns[0][\"dataField\"]}\n\t\t\t\tclassName='bootstrap-data-table' \n\t\t\t\tdata={ products } \n\t\t\t\tcolumns={ columns } \n\t\t\t\tcolumnToggle\n\t\t\t\tplaceholder= \"\"\n\t\t\t\tsearch\n\t\t\t>\n\t\t\t{\n\t\t\t\t(props) => (\n\t\t\t\t\t\n\t\t\t\t<div\t>\n\t\t\t\t\t<h3>{titleIcon}{title}</h3>\n\t\t\t\t\t{searchloop}\n\t\t\t\t\t\n\t\t\t\t\t<SearchBar { ...props.searchProps } placeholder='Recherche ...' />\n\t\t\t\t\t<div className=\"row p-3\">\n\t\t\t\t\t\t<p className=\"is-size-11 has-text-centered\"><b>Afficher/Cacher le(s) colonne(s)</b></p>\n\t\t\t\t\t<CustomToggleList { ...props.columnToggleProps } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col p-2 has-text-centered-mobile'\n\t\t\t\t\t\tstyle={{ textAlign: 'start'}}>\n\t\t\t\t\t\t{actions.includes(\"generate\")\n\t\t\t\t\t\t\t?<><Button variant=\"outline-primary\" size=\"lg\" onClick={generatePdf}>Générer le(s) bordereau(x)</Button>{' '}</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{actions.includes(\"bill\")\n\t\t\t\t\t\t\t?<><Button variant=\"outline-primary\" size=\"lg\" onClick={generateBillPdf}>Générer le(s) facture(s)</Button>{' '}</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{actions.includes(\"add\")\n\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\n\t\t\t\t\t\t\t<PopupForm schema={modalSchema} requiredFields={requiredFields} additionalProperties={additionalProperties} customFormats={customFormats}\tonSubmitFunction={onSubmit} color=\"primary\" modalTitle=\"Ajouter un element\" buttonTitle=\"+Ajouter\"></PopupForm>{' '}\n\t\t\t\t\t\t\t</div></>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{actions.includes(\"modify\")\n\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" size=\"lg\" onClick={modifyItems}>Modifier</Button>{' '}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{actions.includes(\"delete\")\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button variant=\"outline-danger\" size=\"lg\"onClick={handleShow}>Supprimer</Button>\n\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>Supprimer</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>{alertDelete}</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={handleClose}>\n\t\t\t\t\t\t\t\t\tAnnuler\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={deleteItems}>\n\t\t\t\t\t\t\t\t\tConfirmer\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<BootstrapTable\n\t\t\t\t\t\t{ ...props.baseProps }\n\t\t\t\t\t\tpagination={ paginationFactory() }\n\t\t\t\t\t\tfilter={ filterFactory() }\n\t\t\t\t\t\tselectRow={ selectRow }\n\t\t\t\t\t\tcellEdit={ cellEditFactory(cellEdit)}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrintComponent componentToPrint={inputList} printButton={printButton}/>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</ToolkitProvider>\n\n\t\t</Container>\n\t\t{props.crumbs_list\n\t\t\t? <Breadcrumbs crumbs ={props.crumbs_list} invertedText={false} ></Breadcrumbs>\n\t\t\t: <></>\n\t\t}\n\t\t\n\t\t</>\n\t);\n}\nTable.propTypes = {\n\t\tadditionalProperties: PropTypes.array,\n\t\trequiredFields: PropTypes.array,\n\t\tcustomFormats: PropTypes.array,\n\t\ttogglecolumns: PropTypes.array,\n\t\tclientsList: PropTypes.array,\n\t\ttitle: PropTypes.string,\n\t\tdata: PropTypes.array,\n\t\tcolumns: PropTypes.array,\n\t\tschema: PropTypes.array,\n\t\tactions: PropTypes.array,\n\t\tcrumbs_list: PropTypes.array,\n\t\tsearchProps: PropTypes.any,\n\t\tcolumnToggleProps: PropTypes.any,\n\t\tonColumnToggle: PropTypes.any,\n\t\ttoggles: PropTypes.any,\n\t\tbaseProps: PropTypes.any,\n\t\taddItems: PropTypes.any,\n\t\tmodifyItems: PropTypes.any,\n\t\tonSubmitFunction : PropTypes.string,\n\t\tdeleteItems: PropTypes.any,\n};\n\n\nexport default Table;\n\n\n\n","import Table from '../table/Table';\nimport  customerData  from '../data/orders.json';\nimport  plans  from '../data/plans.json';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\nimport {getToken, getCustomerslist, getUserIds,getOrderslist, getClientslist}  from '../../api/Common';\nimport {useHistory} from \"react-router-dom\";\nfunction Orders() {\n\n\tconst ordersList = JSON.parse(getOrderslist())\n\tconst customersList = JSON.parse(getCustomerslist())\n\tconst clientslist = JSON.parse(getClientslist())\n\n\tlet userIds = []\n\tlet columns = [\n\t\t{\n\t\t\tdataField: \"id\",\n\t\t\ttext: \"Numéro du colis\",\n\t\t\teditable: false\n\t\t  },\n\t\t{\n\t\t  dataField: \"id_company\",\n\t\t  text: \"identifiant de la société\",\n\t\t  editable: false,\n\t\t  hidden: true\n\t\t},\n\t\t{\n\t\t  dataField: \"name_company\",\n\t\t  text: \"Nom de la société\",\n\t\t  editable: false\n\t\t},\n\t\t{\n\t\t  dataField: \"contact_name\",\n\t\t  text: \"Nom du contact pro\",\n\t\t  editable: false,\n\t\t  hidden: true\n\t\t},\n\t\t{\n\t\t  dataField: \"order_id\",\n\t\t  text: \"Numéro de commande\",\n\t\t  editable: false\n\t\t}, \n\t\t{\n\t\t  dataField: \"client_id\",\n\t\t  text: \"Numéro du client\",\n\t\t  editable: false,\n\t\t  hidden: true\n\t\t}, \n\t\t{\n\t\t  dataField: \"weight_g\",\n\t\t  text: \"Poids\",\n\t\t  hidden: true\n\t\t},\n\t\t{\n\t\t  dataField: \"package_number\",\n\t\t  text: \"Nombre de colis\"\n\t\t},\n\t\t{\n\t\t  dataField: \"creation_date\",\n\t\t  text: \"Date de création\",\n\t\t  editable: false,\n\t\t  hidden: true\n\t\t},\n\t\t{\n\t\t  dataField: \"return_date\",\n\t\t  text: \"Date de retour\",\n\t\t  editable: true,\n\t\t  hidden: true\n\t\t},\n\t\t{\n\t\t  dataField: \"delivery_date\",\n\t\t  text: \"Date de livraison\",\n\t\t  editable: true\n\t\t},\n\t\t{\n\t\t  dataField: \"state\",\n\t\t  text: \"État/Commune\",\n\t\t  editable: false,\n\t\t  hidden: true\n\t\t},\n\t\t{\n\t\t  dataField: \"postal_code\",\n\t\t  text: \"Code postale\",\n\t\t  editable: false,\n\t\t  hidden: true\n\t\t}, \n\t\t{\n\t\t  dataField: \"price_base\",\n\t\t  text: \"Prix du produit\"\n\t\t}, \n\t\t{\n\t\t  dataField: \"price_delivery\",\n\t\t  text: \"Prix de livraison\",\n\t\t  editable: false\n\t\t},\n\t\t{\n\t\t\tdataField: \"status\",\n\t\t\ttext: \"statut\",\n\t\t\teditor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'en attente d\\'enlèvement',\n\t\t\t\t\t\tlabel: 'en attente d\\'enlèvement'\n\t\t\t\t\t}, \n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'en entrepôt',\n\t\t\t\t\t\tlabel: 'en entrepôt'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'en cours de livraison',\n\t\t\t\t\t\tlabel: 'en cours de livraison'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'Livraison reportée',\n\t\t\t\t\t\tlabel: 'Livraison reportée'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'livré',\n\t\t\t\t\t\tlabel: 'livré'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'en attente de retour',\n\t\t\t\t\t\tlabel: 'en attente de retour'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'retour reporté',\n\t\t\t\t\t\tlabel: 'retour reporté'\n\t\t\t\t\t}, \n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'enlèvement reporté (retour)',\n\t\t\t\t\t\tlabel: 'enlèvement reporté (retour)'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'en entrepôt (retour)',\n\t\t\t\t\t\tlabel: 'en entrepôt (retour)'\n\t\t\t\t\t}, \n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'retourné',\n\t\t\t\t\t\tlabel: 'retourné'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'payé',\n\t\t\t\t\t\tlabel: 'payé'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t  ]\n\tlet history = useHistory();\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n\tlet list = []\n\tlet k = 0\n\tfor (let userToken in ordersList){\n\t\tlet name_company = \"\"\n\t\tlet contact_name = \"\"\n\t\tuserIds.push(getUserIds(userToken))\n\t\tfor(let index in clientslist){\n\t\t\tif(clientslist[index]['id']===userToken){\n\t\t\t\tname_company = clientslist[index]['companyname']\n\t\t\t\tcontact_name = clientslist[index]['firstname'] + \" \" + clientslist[index]['lastname']\n\t\t\t}\n\t\t}\n\n\t\tfor (let i in ordersList[userToken]){\n\t\t\tif(ordersList[userToken][i][\"memory\"]==\"1\"){\n\t\t\t\tconst plan = \"plan1\"\n\n\t\t\t\tlist.push(ordersList[userToken][i])\n\t\t\t\tlist[k]['id_company'] = userToken\n\t\t\t\tlist[k]['name_company'] = name_company\n\t\t\t\tlist[k]['contact_name'] = contact_name\n\t\t\t\tlist[k][\"price_delivery\"]=(plans[plan][\"price\"]+((list[k][\"weight_g\"]>10200)?(Math.ceil((list[k][\"weight_g\"]-10200)/1000) * plans[plan][\"extra\"]):\"\"))\n\t\t\t\tk++\n\t\t\t}\n\n\t\t}\n\t}\n\tlet userDescription = []\n\tfor (let customers in customersList){\n\t\tfor (let i in customers){\n\t\t\tuserDescription.push(customers[i].firstname + \" \" +customers[i].firstname+ \": \" + customers[i].id)\n\t\t}\n\t}\n\tconst createReciept = (data)=>{\n\t\tcreateReciept()\n\t}\n\tlet togglecolumns = [\n    {\n      dataField: \"client_id\",\n      text: \"Numéro du client\",\n      editable: false,\n      hidden: true\n    }, \n    {\n      dataField: \"weight_g\",\n      text: \"Poids\",\n      hidden: true\n    },\n    {\n      dataField: \"creation_date\",\n      text: \"Date de création\",\n      editable: false,\n      hidden: true\n    },\n    {\n      dataField: \"id_company\",\n      text: \"Numéro de la société\",\n      editable: false,\n      hidden: true\n    },\n    {\n      dataField: \"name_company\",\n      text: \"Nom de la société\",\n      editable: false,\n      hidden: true\n    },\n    {\n      dataField: \"state\",\n      text: \"État/Commune\",\n      editable: false\n    },\n    {\n      dataField: \"postal_code\",\n      text: \"Code postale\",\n      editable: false\n    }, \n    {\n      dataField: \"contact_name\",\n      text: \"Nom du contact pro\",\n      editable: false,\n      hidden: true\n    },\n    {\n      dataField: \"return_date\",\n      text: \"Date de retour\",\n      editable: false,\n      hidden: true\n    }, \n    {\n      dataField: \"status\",\n      text: \"statut\",\n      \"editor\": {\n        \"type\": \"Type.SELECT\",\n        \"options\": [{\n          \"value\": \"A\",\n          \"label\": \"A\"\n        }, {\n          \"value\": \"B\",\n          \"label\": \"B\"\n        }, {\n          \"value\": \"C\",\n          \"label\": \"C\"\n        }, {\n          \"value\": \"D\",\n          \"label\": \"D\"\n        }, {\n          \"value\": \"E\",\n          \"label\": \"E\"\n        }]\n      }\n    }\n  ]\t\n\tconsole.log(userIds)\n\tconst schemaString = {\n\t\tclient_id: {\"type\": \"string\", \"title\": \"Numéro du client\", \"enum\": userIds, \"enumNames\": userDescription},\n\t\taddClient: {\n\t\t\ttype: \"array\",\n\t\t\titems: {\n\t\t\t\t$ref: \"#/definitions/Metric\"\n\t\t\t},\n\t\t\tmaxItems: 1,\n\t\t\ttitle: \"\"\n\t\t\t},\n\t\tweight_g: {\"type\": \"number\", \"title\": \"Poids en grammes\"},\n\t\tprice_base: {\"type\": \"number\", \"title\": \"Prix du produit\"},\n\t\tpackage_number: {\"type\": \"number\", \"title\": \"Nombre de colis\"}\n\t}\n\n\tconst definitions = {\n\t\tMetric: {\n\t\t\ttitle: \"Nouveau Client\",\n\t\t\ttype: \"object\",\n\t\t\tproperties: {\n\t\t\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\t\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\t\t\temail: {\"type\": \"string\", \"title\": \"Adresse mail\"},\n\t\t\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\t\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\t\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\t\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t\t\t},\n\t\t\trequired: [\"firstname\", \"name\", \"postal_code\", \"state\", \"address\", \"phone\"]\n\t\t},\t\t\n\t}\n\tconst requiredFields = {\n\n\t\tprice_base: {\"type\": \"number\", \"title\": \"Prix du produit\"},\n\t\tpackage_number: {\"type\": \"number\", \"title\": \"Nombre de colis\"},\n\n\t}\n\treturn(\n\t\t<>\n\t\t<Table data={list} schema={schemaString} togglecolumns={customerData[\"togglecolumns\"]} requiredFields ={requiredFields} additionalProperties={definitions} customFormats={{}}  onSubmitFunction=\"orders\" actions={customerData[\"actions\"]}  columns={columns} title={customerData[\"title\"]} clientsList = {clientslist} crumbs_list={customerData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Orders;\n\n\n\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { getUser, getToken } from '../../api/Common';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport  data  from '../data/table.json';\nfunction Notifications() {\n  const user = getUser();\n  let history = useHistory();\n  // handle click event of logout button\n  if (!getToken()){\n\thistory.push(\"/login\")\n  }\n  const products = data\n  const columns = [\n\t{\n\t\tdataField: 'order_id',\n\t\ttext: 'Numéro de commande'\n\t}, \n\t{\n\t\tdataField: 'package_id',\n\t\ttext: 'Numéro du colis'\n\t}, \n\t{\n\t\tdataField: 'weight_g',\n\t\ttext: 'Poids'\n\t},\n\t{\n\t\tdataField: 'name',\n\t\ttext: 'Nom du client'\n\t}, \n\t{\n\t\tdataField: 'email',\n\t\ttext: 'Adresse mail'\n\t},\n\n\t{\n\t\tdataField: 'state',\n\t\ttext: 'État'\n\t},\n\t{\n\t\tdataField: 'postal_code',\n\t\ttext: 'Code postale'\n\t}, \n\t{\n\t\tdataField: 'price_base',\n\t\ttext: 'Prix du produit'\n\t}, \n\t{\n\t\tdataField: 'price_delivery',\n\t\ttext: 'Prix de livraison'\n\t}, \n\t{\n\t\tdataField: 'status',\n\t\ttext: 'statut'\n\t}\n\n\n];\n  return (\n    <BootstrapTable keyField='id' className='bootstrap-data-table' data={ products } columns={ columns } pagination={ paginationFactory() } />\n  );\n}\nexport default Notifications;\n\n\n\n","import Table from '../table/Table';\nimport  customerData  from '../data/customers.json';\nimport {getCustomerslist,getOrderslist}  from '../../api/Common';\nfunction Customers() {\n\tconst customers = JSON.parse(getCustomerslist())\n\tconst orders = JSON.parse(getOrderslist())\n\tconsole.log(customers)\n\tlet list = []\n\tfor (let i in customers){\n\t\tif(customers[i][\"memory\"]==\"1\"){\n\t\t\tlet total_orders = 0\n\t\t\tlet current_orders = 0\n\t\t\tfor (let j in orders){\n\t\t\t\tif(orders[j][\"client_id\"]==customers[i][\"id\"]){\n\t\t\t\t\ttotal_orders = total_orders+1\n\t\t\t\t\tif(customers[i][\"status\"]!=\"terminé\"){\n\t\t\t\t\t\tcurrent_orders = current_orders +1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcustomers[i][\"total_orders\"] = total_orders\n\t\t\tcustomers[i][\"ongoing_orders\"] = current_orders\n\t\t\tlist.push(customers[i])\n\t\t}\n\t}\n\n\tconst schemaString = {\n\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\temail: {\"type\": \"string\", \"title\": \"Adresse mail\"},\n\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t}\n\tconst requiredFields = schemaString\n\tconst customFormats = {\n\t\t'phone-tn': /^[0-9]{8}$/\n\t};\n\treturn(\n\t\t<>\n\t\t<Table data={list} schema={schemaString} togglecolumns={customerData[\"togglecolumns\"]}  requiredFields={requiredFields} customFormats={customFormats} onSubmitFunction=\"customers\" actions={customerData[\"actions\"]}  columns={customerData[\"columns\"]} title={customerData[\"title\"]} crumbs_list={customerData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Customers;\n","import Table from '../table/Table';\nimport\tbillsData\tfrom '../data/bills.json';\nimport  plans  from '../data/plans.json';\nimport {getCustomerslist,getOrderslist,getUserPlan}\tfrom '../../api/Common';\nfunction Bills() {\n\tconst orders = JSON.parse(getOrderslist())\n\tlet data = []\n\tlet list = []\n\tconst plan = getUserPlan()\n\tlet initProperties = [\"delivered\",\"awaiting_pickup\",\"in_delivery\",\"postponed\",\"in_storage\",\"awaiting_return\",\"in_storage_to_return\",\"in_storage_to_return\",\n\t\"return_postponed\",\"return_pickup_postponed\",\"returned\",\"package_number\",\"total_price\",\"total_weight\",\"price_delivery\",\"total_packages\",\"payed\"]\n\tconst dataMap = async () =>{\n\t\tPromise.all(orders.map(item => { \n\t\t\tif(item[\"memory\"]==\"1\"){\n\t\t\t\tif(!list[item[\"order_id\"]]){\n\t\t\t\tlist[item[\"order_id\"]]= []\n\t\t\t\tlist[item[\"order_id\"]][\"order_id\"] = item[\"order_id\"]\n\t\t\t\tinitProperties.forEach(element => {\n\t\t\t\t\tlist[item[\"order_id\"]][element] = 0\n\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(item[\"order_id\"]==list[item[\"order_id\"]][\"order_id\"]){\n\t\t\n\t\t\t\tswitch (item[\"status\"]) {\n\t\t\t\t\tcase \"livré\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].delivered = list[list[item[\"order_id\"]]].delivered + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en attente d'enlèvement\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].awaiting_pickup = list[item[\"order_id\"]].awaiting_pickup + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en cours de livraison\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_delivery = list[item[\"order_id\"]].in_delivery + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Livraison reportée\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].postponed = list[item[\"order_id\"]].postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en entrepôt\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_storage = list[item[\"order_id\"]].in_storage + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en attente de retour\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].awaiting_return = list[item[\"order_id\"]].awaiting_return + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en entrepôt (retour)\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_storage_to_return = list[item[\"order_id\"]].in_storage_to_return + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"retour reporté\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].return_postponed = list[item[\"order_id\"]].return_postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"enlèvement reporté (retour)\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].return_pickup_postponed = list[item[\"order_id\"]].return_pickup_postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"retourné\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].returned = list[item[\"order_id\"]].returned + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"payé\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].payed = list[item[\"order_id\"]].payed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Status not recognized\");\n\t\t\t\t}\n\t\t\t\titem[\"price_delivery\"]=(plans[plan][\"price\"]+((item[\"weight_g\"]>10200)?(Math.ceil((item[\"weight_g\"]-10200)/1000) * plans[plan][\"extra\"]):\"\"))\n\t\t\t\tlist[item[\"order_id\"]].total_packages = list[item[\"order_id\"]].total_packages + 1\n\t\t\t\tlist[item[\"order_id\"]].total_weight = Number(item[\"weight_g\"]) + list[item[\"order_id\"]].total_weight\n\t\t\t\tlist[item[\"order_id\"]].total_price = Number(item[\"price_base\"]) + list[item[\"order_id\"]].total_price\n\t\t\t\tlist[item[\"order_id\"]].price_delivery = Number(item[\"price_base\"]) + list[item[\"order_id\"]].price_delivery\n\t\t\t\tlist[item[\"order_id\"]].package_number = Number(item[\"package_number\"]) + list[item[\"order_id\"]].package_number\n\t\t\t\t}\n\t\t\t}\n\t\t})).then((ret)=>{\n\t\t\tconsole.log(\"end of promises\", orders)\n\t\t\tconsole.log(\"end of promises\", ret)\n\t\t\tconsole.log(\"end of promises\", list)\n\t\t\treturn true\n\t\t})\n\t}\n\tdataMap()\n\tfor (let k in list){\n\t\tdata.push(list[k])\n\t\tconsole.log(data)\n\t}\n\n\tconsole.log(data)\n\treturn(\n\t\t<>\n\t\t<Table data={data} actions={billsData[\"actions\"]} togglecolumns={billsData[\"togglecolumns\"]} columns={billsData[\"columns\"]} title={billsData[\"title\"]} crumbs_list={billsData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Bills;\n","function ContactUs() {\n    return (\n        <div className= \"ContactUs\">\n\n\t\t</div>\n    );\n}\n\nexport default ContactUs;\n","function Tracking() {\n    return (\n        <div className= \"Tracking\">\n\n\t\t</div>\n    );\n}\n\nexport default Tracking;\n","\nimport { Helmet } from \"react-helmet\";\nimport { useHistory } from \"react-router-dom\";\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession , getToken} from '../../api/Common';\n\nfunction Login() {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n  let history = useHistory();\n  if (getToken()){\n\thistory.push(\"/dashboard\")\n  }\n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    \n    axios.post('https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/user', { \"query\": \"0\", \"username\": username.value, \"password\": password.value }).then(response => {\n      if(response.data.statusCode === 200) {\n        setUserSession(response.data.body);\n\t\thistory.go(\"/dashboard\")\n      }else{\n        setLoading(false);\n        setError(\"Votre nom d'utilisateur ou adresse mail est incorrecte\");\n      }\n\n    }).catch(error => {\n      setLoading(false);\n      if (error) {setError(error);\n      }\n      else setError(\"Something went wrong. Please try again later.\");\n    });\n  }\n    const css = `\n        .App {\n            background: url('https://calirextn.com/assets/images/loading-background.svg');\n            background-position: top center;\n            background-size: cover;\n            background-repeat: no-repeat;\n        }\n    `\n    return (\n        <div className= \"LoginForm\">\n            <Helmet>\n                <style>{css}</style>\n            </Helmet>\n            <div className=\"auth-wrapper p-5\">\n                <div className=\"auth-inner\"> \n                    <form>\n                        <h3>Connexion</h3>\n\n                        <div className=\"form-group\">\n                            <label>Adresse mail</label>\n                            <input type=\"email\" {...username} autoComplete=\"new-username\"  className=\"form-control\" placeholder=\"Enter email\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Mot de passe</label>\n                            <input type=\"password\" {...password} autoComplete=\"new-password\" className=\"form-control\" placeholder=\"Enter password\" />\n                        </div>\n\t\t\t\t\t\t{error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n                        {/* <div className=\"form-group\">\n                            <div className=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                            </div>\n                        </div>\n\t\t\t\t\t\t*/}\n                        <button type=\"button\" className=\"btn btn-primary btn-block\"  value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading}>Se connecter</button>\n                        {/* <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>  */}\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nconst useFormInput = initialValue => {\n\tconst [value, setValue] = useState(initialValue);\n\tconst handleChange = e => {\n\t\tsetValue(e.target.value);\n\t}\n\treturn {\n\t\tvalue,\n\t\tonChange: handleChange\n\t}\n  }\n  \n\nexport default  Login;\n","import React from 'react';\nimport { Card, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { getUser, removeUserSession, getToken } from '../../api/Common';\nimport './Dashboard.scss';\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport Table from '../table/Table';\n\nfunction Dashboard() {\n  const user = getUser();\n  const crumbs_list = [[\"/\", \"Accueil\"], [\"/Dashboard\", \"Tableau de bord\"]]\n  let history = useHistory();\n  // handle click event of logout button\n  if (!getToken()){\n\thistory.push(\"/login\")\n  }\n  const handleLogout = () => {\n    removeUserSession();\n\thistory.go(\"/login\")\n  }\n  const css = `\n      .App {\n          background: url('https://calirextn.com/assets/images/loading-background.svg');\n          background-position: bottom right;\n          background-size: cover;\n          background-repeat: no-repeat;\n      }\n  `\n  return (\n    <>\n      <Helmet>\n          <style>{css}</style>\n      </Helmet>\n      <div className=\"container p-4 container-sm\">\n        <h2 className=\" text-center text-white p-4\">Bienvenue {user}</h2>\n        <div className=\"row justify-content-center\">\n          {/*<Col md={4}>\n            <Card\n            bg={'secondary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/customers' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Clients\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col>*/}\n          <Col md={4}>\n            <Card\n            bg={'secondary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/orders' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Commandes\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col>\n        </div>\n        <div className=\"row justify-content-center\"> \n          {/* <Col md={4} >\n            <Card\n            bg={'secondary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/notifications' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Alertes\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col> */}\n          {/* <Col md={4} className='order-sm-last order-first'>\n            <Card\n            bg={'primary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/bills' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Factures\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card> \n          </Col>*/}\n        </div> \n      </div>\n      <Breadcrumbs crumbs ={crumbs_list} invertedText={true} ></Breadcrumbs>\n    </>\n  );\n}\n\n\nexport default Dashboard;\n","\nimport { Helmet } from \"react-helmet\";\nimport { send } from 'emailjs-com';\nimport React, { useState, useEffect } from 'react';\nfunction Signup() {\n    const [toSend, setToSend] = useState({\n        from_name: '',\n        to_name: '',\n        message: '',\n        reply_to: '',\n        });\n        const handleChange = (e) => {\n        setToSend({ ...toSend, [e.target.name]: e.target.value });\n        };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        let msg = toSend\n        console.log (e.target.elements)\n        setToSend(msg)\n        send(\n        'service_81qhnac',\n        'template_pwdbk4v',\n        toSend,\n        'user_FNM2N5TLP9QWEBN2rYAQt'\n        )\n        .then((response) => {\n            if (response.status === \"200\"){\n                console.log('SUCCESS!', response.status, response.text);\n            }\n            \n        })\n        .catch((err) => {\n            console.log('FAILED...', err);\n        });\n    };\n    const css = `\n        .App {\n            background: url('https://calirextn.com/assets/images/loading-background.svg');\n            background-position: top center;\n            background-size: cover;\n            background-repeat: no-repeat;\n        }\n    `\n    return (\n        <div className= \"SignupForm\">\n            <Helmet>\n                <style>{css}</style>\n            </Helmet>\n            <div className=\"auth-wrapper p-5\">\n                <div className=\"auth-inner\"> \n                    <form onSubmit={onSubmit}>\n                        <h3>S&#39;enregistrer</h3>\n                        <div className=\"form-group\">\n                            <label>Societé</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Societé\" required />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Prénom</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: Prénom\" required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Nom</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: Nom\" required/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Numéro de téléphone</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: 22111333\" required/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Adresse</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: 4 avenue habib bourguiba\" required/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Ville</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: Beb Saadoun\" required/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Code postal</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: 1000\" required/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>État</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"EX: Tunis\" required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Adresse email</label>\n                            <input type=\"email\" className=\"form-control\" placeholder=\"EX: client@societe.com\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Mot de passe</label>\n                            <input type=\"password\" className=\"form-control\" placeholder=\"EX: Mot de passe\" />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Envoyer</button>\n                        <p className=\"forgot-password text-right\">\n                            Déjà client? <a href=\"/login\">se connecter?</a>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;\n","import './App.scss';\nimport Home from './components/home/Home';\nimport Header from './components/header/Header';\nimport HeaderOut from './components/header/HeaderLoggedOut';\nimport Footer from './components/footer/Footer';\nimport Prices from './components/prices/Prices';\nimport Profile from './components/profile/Profile';\nimport Orders from './components/orders/Orders';\nimport Notifications from './components/notifications/Notifications';\nimport Customers from './components/customers/Customers';\nimport Bills from './components/bills/Bills';\nimport ContactUs from './components/contactus/ContactUs';\nimport Tracking from './components/tracking/Tracking';\nimport Login from './components/login/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Signup from './components/signup/Signup';\nimport React, { useState, useEffect } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport axios from 'axios';\nimport { getToken, removeUserSession, setUserSession } from './api/Common';\nfunction App() {\n\tconst [authLoading, setAuthLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tconst token = getToken();\n\t\tif (!token) {\n\t\treturn;\n\t\t}\n\t\taxios.get(`https://uue7ow29fk.execute-api.eu-west-3.amazonaws.com/Prod/user?operation=2&&authorizationToken=${token}`).then(response => {\n\t\tif(response.data.statusCode === 200) {\n\t\t\tsetUserSession(response.data.body);\n\t\t\tsetAuthLoading(false);\n\t\t}else{\t\n\t\t\tremoveUserSession();\n\t\t\tsetAuthLoading(false);\n\t\t}\n\t\t\n\t\t}).catch(error => {\n\t\tremoveUserSession();\n\t\tsetAuthLoading(false);\n\t\t});\n\t}, []);\n\tlet header = <></>\n\tif(getToken()){\n\n\t\theader = <Header bg=\"secondary\"/>\n\t}else{\n\t\theader = <HeaderOut bg=\"secondary\"/>\n\t}\n\tif (authLoading && getToken()) {\n\t\treturn  <> \n\t\t\t\t\t\n\t\t\t\t\t<div className=\"pageloader\">  \n\t\t\t\t\t<Header/>\n\t\t\t\t\t<div className=\"pageloader-content\">\n\t\t\t\t\t\t<Spinner animation=\"grow\" size=\"sm\" /><Spinner animation=\"grow\" />\n\t\t\t\t\t\t<span className=\"is-size-24 text-white\">&nbsp;Chargement...</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</>\n\t}\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t{header}\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Login/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/signup\">\n\t\t\t\t\t\t<Signup/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/tracking\">\n\t\t\t\t\t\t<Tracking />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/pricing\">\n\t\t\t\t\t\t<Prices />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/dashboard\">\n\t\t\t\t\t\t<Dashboard/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t\t<Profile/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/customers\">\n\t\t\t\t\t\t<Customers/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/bills\">\n\t\t\t\t\t\t<Bills/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/notifications\">\n\t\t\t\t\t\t<Notifications />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/orders\">\n\t\t\t\t\t\t<Orders />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/contact-us\">\n\t\t\t\t\t\t<ContactUs />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t\t<Footer/>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}