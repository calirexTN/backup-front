{"version":3,"sources":["components/slider/Slider.js","components/video/Video.js","components/cards/Cards.js","components/introCard/IntroCard.js","components/map/Map.js","components/home/Home.js","api/Common.js","components/header/Header.js","components/header/HeaderLoggedOut.js","components/footer/Footer.js","components/prices/Prices.js","components/profile/Profile.js","components/breadcrumbs/Breadcrumbs.js","api/DataManager.js","components/popupform/PopupForm.js","components/printComponent/PrintComponent.js","components/table/Table.js","components/orders/Orders.js","components/notifications/Notifications.js","components/customers/Customers.js","components/bills/Bills.js","components/contactus/ContactUs.js","components/tracking/Tracking.js","components/login/Login.js","components/dashboard/Dashboard.js","components/signup/Signup.js","components/userform/UserForm.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Slider","Video","embedId","className","src","frameBorder","allow","allowFullScreen","Cards","props","card","type","Card","Body","Row","Col","md","Text","text_size","title","text","Img","loading","alt","href","role","Container","lg","IntroCard","imgStyle","padding","hrStyle","width","Map","style","subtitle","rel","target","Home","cards_data","require","cards","card_item","push","userAttributes","getUser","userStr","sessionStorage","getItem","getToken","removeUserSession","removeItem","i","length","setUserSession","user","setItem","id","setOrdersList","setCustomersList","token","Promise","resolve","reject","axios","get","replace","then","response","data","statusCode","body","catch","error","getOrders","list","console","log","JSON","stringify","Items","getCustomers","updateOrderList","rawdata","post","setOrders","alert","updateCustomersList","setCustomers","getOrderslist","parse","items","memory","getCustomerslist","getUserPlan","Header","userDropdownTitle","icon","faUserCircle","logoutDropdownTitle","faSignOutAlt","loggedIn","faBell","Nav","NavDropdown","Item","Divider","onClick","history","Navbar","collapseOnSelect","expand","bg","variant","Brand","height","Toggle","Collapse","Link","HeaderOut","loggedOut","Footer","Prices","table_data","useState","show","setShow","handleClose","handleShow","criterias","criterea","criterias_item","xmlns","fill","viewBox","d","promo","Title","dangerouslySetInnerHTML","__html","name","quantity","price","Helmet","classNameName","Modal","onHide","closeButton","Button","Profile","useHistory","placeholder","value","textAlign","size","Breadcrumbs","breadcrumbs","content","bcscript","crumbs_list","index","crumbs","crumb","itemListElement","crumb_item","Breadcrumb","invertedText","active","script_content","CryptoJS","QRCode","userInfo","slice","getUserSession","submitCustomer","formData","e","customersList","dataTransfer","userExists","Date","now","Object","keys","map","key","SaveData","products","onSubmit","forEach","element","PopupForm","onSubmitFunction","handleSave","ordersList","schema","required","requiredFields","properties","definitions","additionalProperties","newUserTransfer","transfer","date","Clientorder_exists","order_exists","addClient","userTransferObject","oldData","local_Clientorder_exists","parseInt","toISOString","split","submitOrder","color","buttonTitle","modalTitle","PrintComponent","componentRef","useRef","trigger","printButton","ref","el","media","componentToPrint","Table","SearchBar","Search","ColumnToggle","ToggleList","confirmDelete","customFormats","modifiedItems","columns","custoColumns","togglecolumns","inputList","setInputList","selectedItems","setSelectedItems","setPrintButton","alertDelete","setAlertDelete","filter","textFilter","generatePdf","newImputList","select","poids","nb_colis","qrcode","AES","encrypt","toString","raw_product_price","toFixed","tva_product_price","product_price","raw_delivery_price","tva_delivery_price","delivery_price","raw_total_price","Number","tva_total_price","total_price","client","address","number","email","j","num_colis","Input","scope","colSpan","generateDeliverySlip","generateBillPdf","today","order","generateBill","modifyItems","warning","msg","deleteItems","CustomToggleList","onColumnToggle","toggles","flexDirection","column","toggle","dataField","maxWidth","marginRight","borderRadius","selectRow","mode","clickToSelect","clickToEdit","onSelect","row","isSelect","item","concat","cellEdit","beforeSaveCell","oldValue","newValue","done","async","actions","searchloop","faSearch","titleIcon","faClipboardList","modalSchema","test","columnToggleProps","bootstrap4","keyField","columnToggle","search","searchProps","includes","baseProps","pagination","paginationFactory","filterFactory","cellEditFactory","Orders","orders","customers","plan","plans","Math","ceil","userDescription","firstname","userIds","users","ids","getUserIds","schemaString","client_id","$ref","maxItems","weight_g","price_base","package_number","customerData","Metric","postal_code","state","phone","format","Notifications","Customers","total_orders","current_orders","Bills","initProperties","dataMap","a","all","delivered","awaiting_pickup","in_delivery","postponed","in_storage","awaiting_return","in_storage_to_return","return_postponed","return_pickup_postponed","returned","payed","total_packages","total_weight","price_delivery","ret","k","billsData","ContactUs","Tracking","useFormInput","initialValue","setValue","onChange","Login","setLoading","username","password","setError","autoComplete","go","disabled","Dashboard","display","justifyContent","alignItems","textDecoration","Signup","UserForm","App","authLoading","setAuthLoading","useEffect","header","Spinner","animation","path","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9e2606a2.chunk.js","sourcesContent":["import Carousel from 'react-bootstrap/Carousel'\nimport './Slider.scss';\nimport PropTypes from \"prop-types\";\nfunction Slider(props) {    \n    const items = [];\n    for (let item of props.slider_data.sliders) {\n        const bgStyle = {\n            background: \" linear-gradient( rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5) ), \"+item.style\n        };\n        const carousel_item = (\n            <Carousel.Item className={item.class} style={bgStyle}>\n                <Carousel.Caption>\n                    <h1>{item.title}</h1>\n                    <p>{item.subtitle}</p>\n                </Carousel.Caption>\n            </Carousel.Item>\n      );\n      items.push(carousel_item);\n    }\n    return (\n        <Carousel variant=\"light\" fade className={props.type}>\n            {items}\n        </Carousel>\n\n        );\n}\n\nSlider.propTypes = {\n    type: PropTypes.array,\n    slider_data: PropTypes.object,\n};\n\nexport default Slider;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Video.scss';\nconst Video = ({ embedId }) => (\n\t<div className=\"video-responsive\">\n\t\t<iframe\n\t\tsrc={`https://www.youtube.com/embed/${embedId}`}\n\t\tframeBorder=\"0\" \n\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n\t\tallowFullScreen\n\t\t/>\n\t</div>\n);\n\nVideo.propTypes = {\n\tembedId: PropTypes.string.isRequired\n};\n\nexport default Video;\n","\nimport { Container, Row, Card, Col } from \"react-bootstrap\";\nimport './Cards.scss';\nimport Video from '../video/Video';\nimport PropTypes from \"prop-types\";\n\n function Cards(props) {\n    let card = <></>;\n\tconst hrStyle ={\n\t\twidth: \"50%\",\n\t\t\"display\" : \"inline-block\"\n\t}\n    if (props.type === 'video'){\n\t\tcard = (\n            <Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Video embedId={props.src} /> \n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n      );\n\t}\n\tif (props.type === 'card-img-left'){\n\t\tcard = (\n\t\t\t<Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Card.Text className={props.text_size}> \n\t\t\t\t\t\t\t\t<p className=\"is-size-20 is-bold\">{props.title}</p>\n\t\t\t\t\t\t\t\t<p className=\"is-size-13\">{props.text}</p>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Card.Img loading=\"lazy\"  src={props.src} alt={props.alt}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n\t\t) \n\t}\n\tif (props.type === 'card-img-right'){\n\t\tcard = (\n\t\t\t<Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Card.Img  loading=\"lazy\"  src={props.src} alt={props.alt}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Card.Text className={props.text_size}>\n\t\t\t\t\t\t\t<p className=\"is-size-20 is-bold\">{props.title}</p>\n\t\t\t\t\t\t\t\t<p className=\"is-size-13\">{props.text}</p>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n\t\t) \n\t}\n\tif (props.type === 'jumbotron'){\n\t\tcard=(\n\t\t\t<div className=\"jumbotron jumbotron-fluid alert alert-primary\">\n\t\t\t\t\n\t\t\t<p className=\"lead jumbottron-lead is-marginless\">\n\t\t\t\t<Row>\n\t\t\t\t<Col md={1}></Col>\n\t\t\t\t<Col md={8}>\n\t\t\t\t<h1 className=\"display-4 is-size-18 is-bold\">Envie de tarifs personnalisées?</h1>\n\t\t\t\t<p>Sélectionnez un parmi nos tarifs en promotion qui s&#39;adaptent à vos besoins quelle que soit la taille de votre commerce. <b>Commencez vos économies dès maintenant!</b></p>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={2}>\n\t\t\t\t<a className=\"btn btn-primary btn-lg jumbotron-btn\" href=\"/pricing\" role=\"button\">Tarifs</a></Col>\n\t\t\t\t<Col md={1}></Col>\n\t\t\t\t</Row>\n\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn (\n\t<Container lg className=\"card-container\" >\n\t\t{card}\n\t</Container>\n\t);\n}\n\nCards.propTypes = {\n\ttype: PropTypes.string,\n\ttext_size : PropTypes.string,\n\ttitle: PropTypes.string,\n\ttext: PropTypes.string,\n\tsrc: PropTypes.string,\n\talt: PropTypes.string\n  };\nexport default Cards\n","import { Col, Row } from \"react-bootstrap\";\nimport './IntroCard.scss';\nfunction IntroCard() {\n    return (\n        <> \n\t\t\t<div className=\"bg-image p-5  mb-5 text-white align-items-center d-flex\">\n\t\t\t\t<Col md={6} className=\"cover-text-bloc has-text-centered has-text-left-touch\">\n\t\t\t\t\t\t<h1 className=\"is-size-30 is-size-15-mobile is-white\">\n\t\t\t\t\t\t{'On s\\'engage '}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{'à améliorer'}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{'votre expérience'}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t{/* <a type=\"button\" href=\"/tracking\" className=\"is-size-15 btn btn-primary\"> Suivre un colis</a> */}\n\t\t\t\t</Col>\n\t\t\t\t<img src=\"https://calirextn.com/assets/images/truck.svg\" className=\"cover-icon is-hidden-touch\"/>\n\t\t\t\t<img src='https://calirextn.com/assets/images/building-shadow.webp' className=\"cover-image is-hidden-touch\"/>\n\t\t\t</div>\n\t\t\t\n        </>  \n    );\n}\nexport default IntroCard;\n","import { Container, Row } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nconst imgStyle = {\n\tpadding: \" 2rem \"\n};\nconst hrStyle ={\n\twidth: \"50%\",\n\t\"display\" : \"inline-block\"\n}\nconst Map = (props) => (\n\t<Container className=\"has-text-centered\" style={imgStyle}>\n\t\t<hr  style={hrStyle}/>\n\t\t<Row>\n\t\t\t<p className=\"is-size-24 is-bold\">{props.title}</p>\n\t\t\t<p className=\"is-size-15\">{props.subtitle}</p>\n\t\t</Row>\n\t\t<Row>\n\t\t<a data-expand-link className=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/maps/place/Calirex+Tunisie/@36.7643632,10.0340955,15z/data=!4m2!3m1!1s0x0:0xe8edc1e22de4a228?sa=X&ved=2ahUKEwjgvoCwnJvzAhUkBGMBHX4YCpIQ_BJ6BAhJEAU\">\n\n\t\t\t<img data-expand-target loading=\"lazy\" className=\"standalone-img\" src={props.src} alt={props.alt}></img></a>\n\t\t</Row>\n\t</Container>\n\t)\n\tMap.propTypes = {\n\t\ttitle: PropTypes.string,\n\t\tsubtitle: PropTypes.string,\n\t\tsrc: PropTypes.string,\n\t\talt: PropTypes.string\n\t};\nexport default Map;\n","import Slider from '../slider/Slider';\nimport Cards from '../cards/Cards';\n\nimport { Container } from \"react-bootstrap\";\nimport IntroCard from '../introCard/IntroCard';\nimport Map from '../map/Map';\nimport './Home.scss';\n\n\nfunction Home() {\n\tconst cards_data = require('../data/cards.json'); \n\tconst map_title = \"Vous pouvez nous retrouver à cette addresse\";\n\tconst map_subtitle = \"7 avenue habib bourguiba Mornaguia, Manouba, 1110 Tunisie\";\n\tconst card_img = \"https://calirextn.com/assets/images/calirex-tunisie-geolocatisation.jpg\";\n    const cards = [];\n    for (let card of cards_data.cards) {\n\t\tconst card_item = (\n\t\t\t<Cards type={card.type} title={card.title} src={card.src} text_size={card.text_size} text={card.text} alt={(card.alt) ? card.alt : ''}></Cards>\n\t\t);\n      cards.push(card_item);\n    }\n    return (\n        <> \n\t\t\t<IntroCard/>\n\t\t\t{cards}\n\t\t\t<Map title={map_title} subtitle={map_subtitle} src={card_img} alt=\"Calirex Tunisie address\" />\n\t\t\t<div className='container'>\n\t\t\t</div>\n        </>  \n    );\n}\nexport default Home;\n","// return the user data from the session storage\nimport axios from 'axios';\nexport const getOrders = (token, resolve, reject) => {\n    axios.get('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/orders?pathvar='+token.replace(/\\W/g, '-')+'orders').then(response => {\n        if(response.data.statusCode === 200) {\n            resolve(response.data.body)\n            return(response.data.body)\n        }else{\n         \n            resolve(0)\n            return 0\n        }\n    }).catch(error => {\n        resolve(0)\n        return 0\n    });\n}\nexport const getCustomers = (token, resolve, reject) => {\n  axios.get('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/customers?pathvar='+token.replace(/\\W/g, '-')+'customers').then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const setOrders = (data, resolve, reject) => {\n  axios.post('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/orders',data).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const setCustomers = (data, resolve, reject) => {\n  console.log('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/customers',data)\n  axios.post('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/customers',data).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\n\nconst userAttributes = [\"phonenumber\", \"companyname\", \"landline\", \"plan\", \"address\", \"postalcode\", \"email\", \"country\", \"state\", \"city\", \"lastname\", \"countrycode\", \"firstname\", \"id\"]\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('firstname');\n  \n  if (userStr) return userStr;\n  else return null;\n}\n\n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token')\n  sessionStorage.removeItem('orders')\n  sessionStorage.removeItem('customers')\n  for (let i = 0; i < userAttributes.length; i++){\n    sessionStorage.removeItem(userAttributes[i])\n  }\n}\nexport const getUserIds = () =>{\n  const users = JSON.parse(sessionStorage.getItem(\"customers\"))\n  let ids = []\n  for (let i=0; i<users.length; i++){\n    if(users[i].memory==1){\n      ids.push(users[i].id)\n    }\n  }\n  return ids\n}\n// set user session\nexport const setUserSession = (user) => {\n  sessionStorage.setItem('token', user.id);\n  for (let i = 0; i < userAttributes.length; i++){\n    sessionStorage.setItem(userAttributes[i], user[userAttributes[i]]);\n  }\n  setOrdersList(user.id)\n  setCustomersList(user.id)\n}\nexport const setOrdersList = (token) => {\n  new Promise((resolve,reject) => {\n    getOrders(token, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      console.log(list)\n      sessionStorage.setItem('orders', JSON.stringify(list.Items));\n    }\n    else{\n      sessionStorage.setItem('orders', '[]');\n    }\n    \n  })\n  \n  \n}\nexport const setCustomersList = (token) => {\n  new Promise((resolve,reject) => {\n    getCustomers(token, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      console.log(\"here\")\n      console.log(list)\n      sessionStorage.setItem('customers', JSON.stringify(list.Items));\n    }\n    else{\n      console.log(\"empty\")\n      sessionStorage.setItem('customers', '[]');\n    }\n    \n  })\n  \n  \n}\nexport const updateOrderList = (token,rawdata) => {\n  console.log(rawdata)\n  new Promise((resolve,reject) => {\n    setOrders(rawdata, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      setOrdersList(token)\n      console.log(list)\n    }\n    else{\n      alert(\"Une erreur est survenue. Veuillez réessayer ultérieurement.\")\n    }\n    \n  })\n  \n  \n}\nexport const updateCustomersList = (token,rawdata) => {\n  new Promise((resolve,reject) => {\n    setCustomers(rawdata, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      setCustomersList(token)\n    }\n    else{\n      alert(\"Une erreur est survenue. Veuillez réessayer ultérieurement.\")\n    }\n    \n  })\n  \n  \n}\nexport const getOrderslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"orders\"))\n  let items = []\n  for (let i=0; i<list.length; i++){\n    if(list[i].memory==1){\n      items.push(list[i])\n    }\n  }\n    return (JSON.stringify(items))\n}\nexport const getCustomerslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"customers\"))\n  let items = []\n  for (let i=0; i<list.length; i++){\n    if(list[i].memory==1){\n      items.push(list[i])\n    }\n  }\n    return (JSON.stringify(items))\n}\nexport const getUserPlan = () => {\n  return (sessionStorage.getItem(\"plan\"))\n}\n\nexport const getUserSession = () => {\n  const userInfo = []\n  for (let i = 0; i < userAttributes.length-1; i++){\n    if(!sessionStorage.getItem(userAttributes[i])){\n      return null\n    }\n    userInfo.push(sessionStorage.getItem(userAttributes[i]))\n    \n  }\n  const retVal = [userAttributes.slice(0, 13),userInfo]\n  return retVal\n}","import { Navbar,NavDropdown, Container, Nav} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\nimport './Header.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCircle, faSignOutAlt, faBell } from '@fortawesome/free-solid-svg-icons'\nimport { removeUserSession } from '../../api/Common';\nfunction Header(props) {\n\tconst handleLogout = () => {\n\t\tremoveUserSession();\n\t\thistory.push(\"/login\")\n\t\t}\n    const userDropdownTitle = (<FontAwesomeIcon className='is-size-15' icon={faUserCircle} />);\n    const logoutDropdownTitle = (<FontAwesomeIcon icon={faSignOutAlt} />);\n    const bellIcon = (<FontAwesomeIcon className='is-size-15' icon={faBell} />);\n    const loggedIn = <Nav>\n\n                        <NavDropdown   title=\"Menu\" id=\"login-nav-dropdown\">\n                            <NavDropdown.Item href=\"/dashboard\">Tableau de bord</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/customers\">Mes clients</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/orders\">Mes commandes</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/bills\">Mes Factures</NavDropdown.Item>\n                            {/* <NavDropdown.Item href=\"/notifications\">Mes alertes</NavDropdown.Item> */}\n                        </NavDropdown>\n                        <NavDropdown title={userDropdownTitle} id=\"login-nav-dropdown\">\n                            {/*<NavDropdown.Item href=\"/profile\">Mon profil</NavDropdown.Item>*/}\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"/\" onClick={handleLogout}>Se déconnecter {logoutDropdownTitle}</NavDropdown.Item>\n                        </NavDropdown>\n                        {/* <Nav.Link href=\"/notifications\">{bellIcon}</Nav.Link> */}\n                    </Nav>\n\t\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"lg\" bg={props.bg} variant=\"dark\">\n        <Container className=\"page-header\" >\n        <Navbar.Brand href=\"/\">\n                <img\n                alt=\"\"\n                src=\"https://calirextn.com/assets/images/bare-logo-ctn.svg\"\n                width=\"70\"\n                height=\"70\"\n                className=\"d-inline-block align-top\"\n                />{' '}\n            </Navbar.Brand>\n        <Navbar.Brand  className=\"mea-text\" href=\"/\">Calirex Tunisie</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\n            <Nav className=\"me-auto\">\n            <Nav.Link href=\"/pricing\">Tarifs</Nav.Link>\n\t\t\t{/* <Nav.Link href=\"/tracking\">Suivre un colis</Nav.Link> */}\n            </Nav>\n\n\t\t\t{loggedIn}\n            \n        </Navbar.Collapse>\n        </Container>\n        </Navbar>      \n        </>  \n    );\n}\n\nHeader.propTypes = {\n    bg: PropTypes.array\n};\n\nexport default Header;\n","import {Navbar, Container, Nav, NavDropdown} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\nimport './Header.scss';\n\nfunction HeaderOut(props) {\n\tconst loggedOut = <Nav><Nav.Link href=\"/login\">Connexion</Nav.Link>{/*<Nav.Link href=\"/signup\">S&#39;inscrire</Nav.Link>*/}</Nav>\n\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"lg\" bg={props.bg} variant=\"dark\">\n        <Container className=\"page-header\" >\n        <Navbar.Brand href=\"/\">\n                <img\n                alt=\"\"\n                src=\"https://calirextn.com/assets/images/bare-logo-ctn.svg\"\n                width=\"70\"\n                height=\"70\"\n                className=\"d-inline-block align-top\"\n                />{' '}\n            </Navbar.Brand>\n        <Navbar.Brand  className=\"mea-text\" href=\"/\">Calirex Tunisie</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\n            <Nav className=\"me-auto\">\n            <Nav.Link href=\"/pricing\">Tarifs</Nav.Link>\n\t\t\t{/* <Nav.Link href=\"/tracking\">Suivre un colis</Nav.Link> */}\n            </Nav>\n\n\t\t\t{loggedOut}\n            \n        </Navbar.Collapse>\n        </Container>\n        </Navbar>      \n        </>  \n    );\n}\n\nHeaderOut.propTypes = {\n    bg: PropTypes.array\n};\n\nexport default HeaderOut;\n","\nimport {footer} from 'react-bootstrap'\nimport { FaRegEnvelope, FaFacebookSquare ,FaTwitterSquare, FaLinkedin,FaInstagram, FaMapMarkerAlt,FaPhoneSquareAlt} from \"react-icons/fa\";\nimport './Footer.scss';\nconst Footer = () => <footer className=\"footer\">\n    <div className=\"footer-center col-md-4 col-sm-6\">\n    <p className=\"about\">\n        <span> Qui sommes nous?</span> Entreprise de livraison à domicile qui s&lsquo;adapte à vos besoins. Livrer plus rapidement à vos clients et finalisez vos transactions.\n    </p>\n    <div className=\"icons\">\n        \n        <a href=\"https://pages.facebook.com/CalirexTunisie\"><FaFacebookSquare className=\"ct-icon\"/></a>\n        <a href=\"https://twitter.com/CalirexTunisie\"><FaTwitterSquare className=\"ct-icon\"/></a>\n        <a href=\"https://linkedin.com/company/calirex-tunisie\"><FaLinkedin className=\"ct-icon\"/></a>\n        <a href=\"https://www.instagram.com/calirex.tunisie\"><FaInstagram className=\"ct-icon\"/></a>\n    </div>\n    </div>\n    <div className=\"footer-center\">\n    <div>\n        <a><FaMapMarkerAlt className=\"ct-icon\"/>\n        <p><span> 7 avenue habib bourguiba, Mornaguia</span> Manouba, Tunisie</p></a>\n    </div>\n    <div>\n        <FaPhoneSquareAlt className=\"ct-icon\"/>\n        <p> (+216) 50 873 992</p>\n    </div>\n    <div>\n        <FaRegEnvelope className=\"ct-icon\"/>\n        <p><a href=\"#\"> info@calirextn.com</a></p>\n    </div>\n    </div>\n    <div className=\"footer-right\">\n    <h2 className=\"mea-text\"> Calirex <span>Tunisie</span></h2>\n    <p className=\"menu\">\n        <a href=\"/\"> Accueil</a> |\n        <a href=\"/pricing\"> Tarifs</a> |\n        <a href=\"/carrieres\"> Carrières</a> |\n        {/* <a href=\"/tracking\"> Suivre un colis</a> */}\n    </p>\n    <p className=\"name\"> Calirex Tunisie &copy; 2021</p>\n    </div>\n\t<div className=\"footer-bottom\">\n\t\tCopyright © 2021 calirex tunisie. Tous droits réservés.\n\t</div>\n    </footer>\n\nexport default Footer\n","import React, {useState } from \"react\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\nimport './Prices.scss';\n\nfunction Prices() {   \n\tlet table_data = require('../data/prices.json'); \n\tlet title = \"Choisissez l'offre qui vous convient\";\n  const [show, setShow] = useState(false);\n  const css = `\n      .App {\n          background: url('https://calirextn.com/assets/images/loading-background.svg');\n          background-position: bottom right;\n          background-size: cover;\n          background-repeat: no-repeat;\n      }\n  `\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const cards = [];\n    for (let card of table_data.cards) {\n      const criterias = []\n      \n      for (let criterea of card.criterias) {\n      const criterias_item = (\n        <li className=\"list-group-item price-card-bullet\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check text-primary\" viewBox=\"0 0 16 16\">\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\n          </svg> {criterea}\n        </li>\n      )\n      criterias.push(criterias_item);\n      }\n\t\tconst card_item = (\n\n        <div className=\"col-lg-4 col-md-12 mb-4\">\n          <Card className=\"popout-card h-100 shadow-lg pricing-card\">\n            <Card.Body>\n              <span className=\"badge text-primary badge-card is-size-13\">{card.promo}</span>\n              <div className=\"text-center p-3\">\n                <br/>\n                <Card.Title className=\"is-size-20 text-primary text-center price-card-title\" dangerouslySetInnerHTML={{__html: card.name}}></Card.Title>\n                <br/>\n                <small className=\"text-tertiary is-size-11\">{card.quantity}</small>\n                <br/><br/>\n                <span className=\"h1\">{card.price}</span><sup>TND</sup>/colis\n                <br/><br/>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                {criterias}\n              </ul>\n            </Card.Body>\n            <Card.Footer className=\" text-center price-card-footer\">\n              <button className=\"btn btn-primary btn-card btn-lg\" onClick={handleShow}>Selectionner</button>\n            </Card.Footer>\n          </Card>\n        </div>\n\t\t);\n      cards.push(card_item);\n    }\n    return (\n        <> \n          <Helmet>\n              <style>{css}</style>\n          </Helmet>\n          <div classNameName= \"Prices\">\n            <div className=\"container-fluid price-cards-container\" >\n              <div className=\"container p-4\">\n                <h2 className=\" text-center text-white p-4\">{title}</h2>\n                <div className=\"row\">\n                  {cards}\n                </div>    \n              </div>\n            </div>\n          </div>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Modal heading</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Woohoo, you&#39;re reading this text in a modal!</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose}>\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>  \n    );\n}\n\n\nexport default Prices;\n","\nimport {getToken} from '../../api/Common';\nimport {useHistory} from \"react-router-dom\";\nimport {Button} from 'react-bootstrap';\nfunction Profile() {\n\tlet history = useHistory();\n\t// handle click event of logout button\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n    //const userInfo = getUserSession()\n    //console.log(userInfo)\n\treturn(\n        <div className=\"container rounded bg-white mt-5 mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-3 border-right\">\n                    <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\n                        <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\n                    </div>\n                </div>\n                <div className=\"col-md-5 border-right\">\n                    <div className=\"p-3 py-5\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                            <h4 className=\"text-right\">Profile Settings</h4>\n                        </div>\n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-6\"><label className=\"labels\">Nom</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"first name\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-6\"><label className=\"labels\">Prénom</label>\n                                <input type=\"text\" className=\"form-control\" value=\"\" placeholder=\"surname\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Adresse mail</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Société</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Programme</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-12\"><label className=\"labels\">Numéro de téléphone</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter phone number\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Adresse</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 1\" value=\"\"/>\n\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Complément d&#39;adresse</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Code postal</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n                                \n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Ville</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <label className=\"labels\">Pays</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"country\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <label className=\"labels\">État</label>\n                                <input type=\"text\" className=\"form-control\" value=\"\" placeholder=\"state\"/>\n                            </div>\n                        </div>\n                        <div className=\"mt-5 text-center\">\n                            <button className=\"btn btn-primary profile-button\" type=\"button\">Sauvegarder</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"p-3 py-5\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 text-right\"\n                                style={{ textAlign: 'end'}}\n                            >\n                                <Button variant=\"primary\" size=\"lg\">Modifier</Button>\n                            </div>\n                            <div className=\"col-md-6\"\n                                style={{ textAlign: 'start'}}\n                            >\n                                <Button variant=\"danger\" size=\"lg\">Supprimer</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\t);\n}\n\nexport default Profile;\n\n\n\n\n\n\n","import Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport PropTypes from \"prop-types\";\nimport { Container } from 'react-bootstrap';\n\n function Breadcrumbs(props) {\n    let breadcrumbs = <></>;\n\tconst content = [];\n\n\tlet bcscript = {\n\t\t\"@context\": \"https://schema.org\",\n\t\t\"@type\": \"BreadcrumbList\",\n\t\t\"itemListElement\": []\n\t}\n\tlet crumbs_list = \n\t\t{\n\t\t\t\"@type\": \"ListItem\",\n\t\t\t\"position\": 0,\n\t\t\t\"name\": \"\",\n\t\t\t\"item\": \"\"\n\t\t}\n\t\t\n\t\tfor (let index = 0 ; index <  props.crumbs.length; index++ ) {\n\t\t\tconst crumb = props.crumbs[index]\n\t\t\tcrumbs_list[\"position\"] = index\n\t\t\tcrumbs_list[\"name\"] = crumb[1]\n\t\t\tcrumbs_list[\"item\"] = \"https://www.calirextn.com\" + crumb[0]\n\t\t\tbcscript.itemListElement.push(crumbs_list);\n\t\t\tconst crumb_item = (\t\t\t\n\t\t\t\t<Breadcrumb.Item className={props.invertedText ? \"is-white\" : false } active={index === props.crumbs.length-1 ? true : false } href={crumbs_list[\"item\"]}>\n\t\t\t\t\t{crumbs_list[\"name\"]}\n\t\t\t\t</Breadcrumb.Item>\n\n\t\t\t);\n\t\t\tcontent.push(crumb_item);\n\t\t\t\n\t\t}\n\t\tconst script_content = JSON.stringify(bcscript)\n\t\tconsole.log(script_content)\n\t\tbreadcrumbs = (\n\t\t\t<>\n\t\t\t<Container>\n\t\t\t<Breadcrumb>\n\t\t\t\t{content}\n\t\t\t</Breadcrumb>\n\t\t\t</Container>\n\t\t\t</>\n\t\t) \n\t\n\n\treturn (\n\t\t<>\n\t\t\t{breadcrumbs}\n\t\t\t<script type=\"application/ld+json\" dangerouslySetInnerHTML={{__html: script_content}}></script>\n\t\t</>\n\t);\n}\n\nBreadcrumbs.propTypes = {\n\tcrumbs: PropTypes.array,\n\tinvertedText : PropTypes.string\n  };\nexport default Breadcrumbs\n\n\n\n\n\n\n\n","\nimport {getToken,updateOrderList,updateCustomersList, getUserSession} from './Common';\nconst CryptoJS = require(\"crypto-js\");\nconst QRCode = require('qrcode.react');\nconst token = getToken()\nconst userInfo = getUserSession()\n\nexport const submitOrder = (formData, e, ordersList, dataTransfer, newUserTransfer, customersList) =>{ \n    const date = new Date()\n    formData[\"delivery_date\"] = \"\"\n    formData[\"return_date\"] = \"\"\n    formData[\"memory\"] = 1\n    formData[\"TableName\"] = token+\"orders\"\n    formData[\"status\"] = \"en attente d'enlèvement\"\n    formData[\"address\"] = \"0\"\n\n    let Clientorder_exists = 0\n    let order_exists = 0\n    if((!formData[\"client_id\"])&&(formData.addClient)){\n      newUserTransfer= submitCustomer (formData.addClient[0], e, customersList,newUserTransfer)\n      let userTransferObject = JSON.parse(newUserTransfer)\n      formData[\"client_id\"] = userTransferObject.id\n\n      console.log(formData)\n      console.log(typeof(formData) )\n    }\n    const oldData = JSON.parse(\"[\"+dataTransfer+\"]\")\n    let local_Clientorder_exists = false\n    for(let i=0; i<oldData.length;i++){\n\n        if(oldData[i][\"client_id\"]===formData[\"client_id\"]){\n          local_Clientorder_exists = 1\n          oldData[i][\"package_number\"] = parseInt(oldData[i][\"package_number\"]) + parseInt(formData[\"package_number\"])\n          oldData[i][\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(oldData[i][\"weight_g\"])\n          oldData[i][\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(oldData[i][\"price_base\"])\n        }\n         \n    }\n    console.log(oldData.length)\n    console.log(ordersList.length)\n\n    for(let i=0; i<ordersList.length;i++){\n      console.log(formData)\n\n      if(ordersList[i][\"status\"]===\"en attente d'enlèvement\"){\n        order_exists = i+1\n        formData[\"id\"] = ordersList[i][\"id\"]\n        if(ordersList[i][\"client_id\"]===formData[\"client_id\"]){\n          Clientorder_exists = i+1\n        }\n      }\n\n      if(i===ordersList.length-1){\n        \n        if (oldData.length===0){\n          if(order_exists){\n            formData[\"order_id\"] = ordersList[order_exists-1][\"order_id\"]\n            console.log(' formData[\"order_id\"]')\n            console.log( formData[\"order_id\"])\n          }else{\n            formData[\"order_id\"] = \"CTO-\"+ Date.now()\n            console.log(\" order doesn't exist\")\n          }\n          if (Clientorder_exists){\n            console.log(\"client order exist\")\n            formData[\"id\"] = ordersList[Clientorder_exists-1][\"id\"]\n            formData[\"package_number\"] = parseInt(ordersList[Clientorder_exists-1][\"package_number\"]) + parseInt(formData[\"package_number\"])\n            formData[\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(ordersList[Clientorder_exists-1][\"weight_g\"])\n            formData[\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(ordersList[Clientorder_exists-1][\"price_base\"])\n            formData[\"creation_date\"] = ordersList[Clientorder_exists-1][\"creation_date\"]\n          }else{\n            formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n            formData[\"id\"] = \"CTP-\"+ Date.now()\n          }\n\n          dataTransfer =JSON.stringify(formData)\n        }else{\n          if (local_Clientorder_exists){\n            dataTransfer = JSON.stringify(oldData)\n          }else{\n            if (Clientorder_exists){\n              formData[\"order_id\"] = ordersList[order_exists][\"order_id\"]\n              formData[\"id\"] = ordersList[Clientorder_exists-1][\"id\"]\n              formData[\"package_number\"] = parseInt(ordersList[Clientorder_exists-1][\"package_number\"]) + parseInt(formData[\"package_number\"])\n              formData[\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(ordersList[Clientorder_exists-1][\"weight_g\"])\n              formData[\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(ordersList[Clientorder_exists-1][\"price_base\"])\n              formData[\"creation_date\"] = ordersList[Clientorder_exists-1][\"creation_date\"]\n            }else{\n              formData[\"order_id\"] = oldData[0][\"order_id\"]\n              formData[\"id\"] = \"CTP-\"+ Date.now()\n              formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n              \n            }\n            dataTransfer =dataTransfer +\",\"+ JSON.stringify(formData)\n          }\n        }\n\n\n      }\n    }\n    if (ordersList.length === 0){\n      if (local_Clientorder_exists){\n        dataTransfer = JSON.stringify(oldData)\n      }else{\n        formData[\"id\"] = \"CTP-\"+ Date.now()\n        formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n        if (oldData.length===0){\n          formData[\"order_id\"] = \"CTO-\"+ Date.now()\n          dataTransfer =JSON.stringify(formData)\n        }else{\n          formData[\"order_id\"] = oldData[0][\"order_id\"]\n          dataTransfer =dataTransfer +\",\"+ JSON.stringify(formData)\n        }\n      }\n    }\n    return [dataTransfer,newUserTransfer]\n    \n  }\nexport  const submitCustomer = (formData, e, customersList,dataTransfer) =>{ \n    formData[\"memory\"] = 1\n    formData[\"TableName\"] = token+\"customers\"\n    formData[\"country_code\"] = \"+216\"\n    console.log(formData)\n    console.log(customersList)\n    let userExists = false\n    for(let i=0; i<customersList.length;i++){\n      if(customersList[i][\"email\"]===formData[\"memory\"] ){\n        userExists = i\n        alert(\"Ce client a déjà été créé\")\n      }\n    }\n    if(!userExists){\n      formData[\"id\"] =  \"CTCID-\"+ Date.now()\n      console.log(formData[0])\n      console.log(dataTransfer)\n      dataTransfer =dataTransfer +(dataTransfer===\"\" ?\"\":\",\") + JSON.stringify(formData)\n      console.log(JSON.stringify(formData))\n      \n    }\n    Object.keys(formData).map(function(key, index) {\n      formData[key] = \"\";\n    });\n    console.log(e)\n    console.log(dataTransfer)\n    return dataTransfer\n  }\n\n  export const generateBill = (selectedItems,products, inputList, setInputList,customersList)=>{\n\n    console.log(\"userInfo[0]\")\n    console.log(userInfo)\n    let newImputList = []\n    console.log(products)\n    for (let select of selectedItems) {\n        let date = new Date() \n        let today = date.toISOString().split('T')[0].replace(/-/g,'/');\n        let poids =  products[select-1][\"total_weight\"]\n        let order =  products[select-1][\"order_id\"]\n        let nb_colis = products[select-1][\"package_number\"]\n        let text = token + products[select-1][\"id\"]+ products[select-1][\"order_id\"]\n        let ciphertext = CryptoJS.AES.encrypt(text, '-tracking-number-').toString();\n        let raw_product_price = (products[select-1][\"total_price\"]*0.93).toFixed(3)\n        let tva_product_price = (products[select-1][\"total_price\"]*0.07).toFixed(3)\n        let product_price = products[select-1][\"total_price\"]\n        let raw_delivery_price = (products[select-1][\"price_delivery\"]*0.93).toFixed(3)\n        let tva_delivery_price = (products[select-1][\"price_delivery\"]*0.07).toFixed(3)\n        let delivery_price = products[select-1][\"price_delivery\"]\n        let raw_total_price = Number(raw_product_price) + Number(raw_delivery_price)\n        let tva_total_price = Number(tva_delivery_price) + Number(tva_product_price)\n        let total_price = product_price + delivery_price\n        //log encrypted data\n            let Input = () => {\n                return <>\n                        <div className=\"page-break\" />\n                        <table className=\"table table-bordered has-background-white\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">\n\n                                <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                            </th>\n                            <th scope=\"col\">\n                                <p className='is-size-9'>Societé de livraison: <u>Calirex Tunisie</u>\n                                <br/><u>Site Web: </u>https://www.calirextn.com/\n                                <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                                <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                                <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                            </th>\n                            <th>\n                              Date: {today}\n                              <br/>\n                              Facture commande {order}\n                            </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <td colSpan={2}> <b>Société: {userInfo[1][1]}</b>\n                                <br/>Adresse: {userInfo[1][4]}, {userInfo[1][9]}, {userInfo[1][8]}, {userInfo[1][7]}\n                                <br/>Numéro de téléphone: ({userInfo[1][11]}) {userInfo[1][2]}\n                            </td>\n                            <td>\n\n                            </td>\n                            </tr>\n\n                            <tr>\n                            <td><u>Prix du produit:</u> {product_price} \n                              <br/>prix(HT): {raw_product_price} TND\n                                <br/>TVA(7%): {tva_product_price} TND\n                                <br/>prix(TTC): {product_price} TND\n                                <br/>\n                                    <b>Prix de la livraison:</b>\n                                <br/>prix(HT): {raw_delivery_price} TND\n                                <br/>TVA(7%): {tva_delivery_price} TND\n                                <br/>prix(TTC): {delivery_price} TND\n                                <br/>\n                                  \n                                <b>Total à payer:</b>\n                                <br/>prix(HT): {raw_total_price} TND\n                                <br/>TVA(7%): {tva_total_price} TND\n                                <br/>prix(TTC): {total_price} TND\n                                <br/><u>Poids:</u> {poids} grammes\n                                <br/><u>Nombre de colis:</u> {nb_colis}\n                            </td>\n                            <td>\n                                Signature Calirex Tunisie: \n                            </td>\n                            <td>\n                                Signature {userInfo[1][1]} \n                            </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>;\n            };\n\n            newImputList.push(<Input />)\n        \n    }\n    setInputList(newImputList);\n}\nexport const generateDeliverySlip = (selectedItems,products, inputList, setInputList,customersList)=>{\n\n    console.log(\"userInfo[0]\")\n    console.log(userInfo[0])\n    let newImputList = []\n    for (let select of selectedItems) {\n        let poids =  products[select-1][\"weight_g\"]\n        let nb_colis = products[select-1][\"package_number\"]\n        let text = token + products[select-1][\"id\"]+ products[select-1][\"order_id\"]\n        let ciphertext = CryptoJS.AES.encrypt(text, '-tracking-number-').toString();\n        let qrcode = \"https://calirextn.com/tracking?tracking_number=\"+ciphertext\n        let raw_product_price = (products[select-1][\"price_base\"]*0.93).toFixed(3)\n        let tva_product_price = (products[select-1][\"price_base\"]*0.07).toFixed(3)\n        let product_price = products[select-1][\"price_base\"]\n        let raw_delivery_price = (products[select-1][\"price_delivery\"]*0.93).toFixed(3)\n        let tva_delivery_price = (products[select-1][\"price_delivery\"]*0.07).toFixed(3)\n        let delivery_price = products[select-1][\"price_delivery\"]\n        let raw_total_price = Number(raw_product_price) + Number(raw_delivery_price)\n        let tva_total_price = Number(tva_delivery_price) + Number(tva_product_price)\n        let total_price = Number(product_price) + Number(delivery_price)\n        let client\n        let address\n        let number\n        let email\n        console.log(customersList)\n        for(let j=0; j<customersList.length; j++){\n            console.log(customersList[j][\"id\"])\n            if(customersList[j][\"id\"]==products[select-1][\"client_id\"]){\n                client = customersList[j][\"firstname\"] + \" \" + customersList[j][\"name\"]\n                address = customersList[j][\"address\"] + \", \"+customersList[j][\"state\"] + \", \"+customersList[j][\"postal_code\"] \n                number = customersList[j][\"country_code\"] + \" \" + customersList[j][\"phone\"]\n                email = customersList[j][\"email\"]\n            }\n        }\n        //log encrypted data\n        for(let num_colis=1; num_colis<=nb_colis; num_colis++){\n            let Input = () => {\n                return <>\n                        <div className=\"page-break\" />\n                        <table className=\"table table-bordered has-background-white\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">\n\n                                <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                            </th>\n                            <th scope=\"col\">\n                                <p className='is-size-9'>Societé de livraison: <u>Calirex Tunisie</u>\n                                <br/><u>Site Web: </u>https://www.calirextn.com/\n                                <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                                <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                                <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                            </th>\n                            <th scope=\"col\"><QRCode value={qrcode} /></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <td colSpan={2}><b>Destinataire</b>\n                                <br/>Nom: {client}\n                                <br/>Adresse: {address}\n                                <br/>Numéro de téléphone: {number}\n                                <br/>Adresse mail: {email}\n                            </td>\n                            <td> <b>Expéditeur</b>\n                                <br/>Société: {userInfo[1][1]}\n                                <br/>Adresse: {userInfo[1][4]}, {userInfo[1][9]}, {userInfo[1][8]}, {userInfo[1][7]}\n                                <br/>Numéro de téléphone: ({userInfo[1][11]}) {userInfo[1][2]}\n                            </td>\n                            </tr>\n\n                            <tr>\n                            <td colSpan={2}><u>Prix du produit:</u> {product_price} TND\n                                <br/>\n                                    <u>Prix de la livraison:</u>\n                                <br/>prix(HT): {raw_delivery_price} TND\n                                <br/>TVA(7%): {tva_delivery_price} TND\n                                <br/>prix(TTC): {delivery_price} TND\n                                <br/>\n                                    \n                            </td>\n                            <td>\n                                <u>Total à payer:</u>\n                                <br/>prix(HT): {raw_total_price} TND\n                                <br/>TVA(7%): {tva_total_price} TND\n                                <br/>prix(TTC): {total_price} TND\n                                <br/><u>Poids:</u> {poids} grammes\n                                <br/><u>Nombre de colis:</u> {num_colis}/{nb_colis}\n                            </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>;\n            };\n\n            newImputList.push(<Input />)\n        }\n    }\n    setInputList(newImputList);\n}\n\nexport \tconst SaveData= (items,products,onSubmit) =>{\n    let data = []\n    items.forEach(element => {\n        console.log(element)\n        data.push(products[element-1])\n        if (onSubmit=== \"orders\"){\n            data[data.length-1][\"TableName\"] = token+\"orders\"\n        }\n        if (onSubmit === \"customers\"){\n            data[data.length-1][\"TableName\"] = token+\"customers\"\n        }\n    });\n    const dataTransfer = JSON.stringify(data)\n    if (onSubmit === \"orders\"){\n        console.log(items)\n        console.log(products)\n        console.log(data)\n        updateOrderList(token, '{\"data\":'+dataTransfer+'}' )\n    }\n    if (onSubmit === \"customers\"){\n        updateCustomersList(token, '{\"data\":'+dataTransfer+'}' )\n    }\n}","import React, {useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport {submitOrder,submitCustomer} from '../../api/DataManager';\nimport {getToken, getCustomerslist, getOrderslist, updateOrderList , updateCustomersList}  from '../../api/Common';\nimport Form from \"@rjsf/core\";\nfunction PopupForm(props) {   \n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setShow(false);\n  }\n  const orderHandleSave = () => {\n    updateOrderList(token, '{\"data\":['+dataTransfer+']}' )\n    if(newUserTransfer!=\"\"){\n      updateCustomersList(token, '{\"data\":['+newUserTransfer+']}' )\n    }\n    setShow(false);\n  }\n  const customerHandleSave = () => {\n    updateCustomersList(token, '{\"data\":['+dataTransfer+']}' )\n    setShow(false);\n  }\n  console.log(\"props.onSubmitFunction\" )\n  console.log(props.onSubmitFunction )\n\n  const customersList = JSON.parse(getCustomerslist())\n  const ordersList = JSON.parse(getOrderslist())\n  const token = getToken()\n  const handleShow = () => setShow(true);\n  const schema = {\n    title: \"Veuillez remplir le formulaire\",\n    type: \"object\",\n    required: Object.keys(props.requiredFields),\n    properties: props.schema,\n    definitions: props.additionalProperties\n  }\n  const uiSchema = {\n    \"ui:options\":  {\n      \"expandable\": true\n    }\n  };\n  let dataTransfer = \"\"\n  let newUserTransfer = \"\"\n  const onSubmitOrder = ({formData}, e) =>{ \n    let transfer = submitOrder(formData, e, ordersList, dataTransfer, newUserTransfer, customersList)\n    newUserTransfer = transfer[1]\n    dataTransfer = transfer[0]\n  }\n  const onSubmitCustomer = ({formData}, e) =>{ \n    dataTransfer = submitCustomer (formData, e, customersList,dataTransfer)\n  }\n  let onSubmit\n  let handleSave\n  if (props.onSubmitFunction === \"orders\"){\n    onSubmit = onSubmitOrder\n    handleSave = orderHandleSave\n  }\n  if (props.onSubmitFunction === \"customers\"){\n    onSubmit = onSubmitCustomer\n    handleSave = customerHandleSave\n  }\n\n    return (\n        <> \n          <Button variant={props.color} className=\" btn-card btn-lg\" onClick={handleShow}>{props.buttonTitle}</Button>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>{props.modalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> \n            <Form schema={schema} formData={\"\"} onSubmit={onSubmit}>\n            <Button variant=\"secondary\" type=\"submit\" >\n                Confirmer et ajouter\n              </Button>\n              </Form>\n        </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={handleSave}>\n                Sauvgarder\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>  \n    );\n}\nPopupForm.propTypes = {\n  modalTitle: PropTypes.string,\n  onSubmitFunction: PropTypes.string,\n  schema: PropTypes.array,\n  requiredFields: PropTypes.array,\n  additionalProperties: PropTypes.array,\n  color: PropTypes.string,\n  buttonTitle: PropTypes.string\n};\n\nexport default PopupForm;\n","import React, { useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport PropTypes from \"prop-types\";\nexport default function PrintComponent(props) {\n  let componentRef = useRef();\n\n  return (\n    <>\n      <div >\n        {/* button to trigger printing of target component */}\n        <ReactToPrint\n          trigger={() => <div className=\"p-3\"><Button className={props.printButton? \"\":\"is-hidden\"}>Imprimer</Button></div>}\n          content={() => componentRef}\n        />\n\n        {/* component to be printed */}\n        <div className=\"to-print\" ref={(el) => (componentRef = el)} >\n          <style type=\"text/css\" media=\"print\">{\"@page { size: landscape; pageBreakBefore: 'always'}\"}</style>\n          {props.componentToPrint}\n        </div>\n      </div>\n    </>\n  );\n}\n\nPrintComponent.propTypes = {\n    componentToPrint: PropTypes.any,\n    printButton: PropTypes.any\n  };\n  ","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faClipboardList } from '@fortawesome/free-solid-svg-icons'\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport PopupForm from '../popupform/PopupForm';\nimport {Helmet} from \"react-helmet\";\nimport {Container, Button,Modal} from 'react-bootstrap';\nimport {getToken,getCustomerslist} from '../../api/Common';\nimport {generateDeliverySlip,SaveData,generateBill} from '../../api/DataManager';\nimport PrintComponent from '../../components/printComponent/PrintComponent';\nimport {useHistory} from \"react-router-dom\";\n\nfunction Table(props) {\n\tconst { SearchBar } = Search;\n\tconst { ToggleList } = ColumnToggle;\n\tlet history = useHistory();\n\t// handle click event of logout button\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n\tconst [show, setShow] = useState(false);\n\tconst handleShow = () => {\n\t\tconfirmDelete()\n\t\tsetShow(true);\n\t}\n\tconst handleClose = () => {\n\t\tsetShow(false);\n\t\t}\n\tconst customersList = JSON.parse(getCustomerslist())\n\tconst css = `\n\t\t.App {\n\t\t\tbackground: url('https://calirextn.com/assets/images/loading-background-light.svg');\n\t\t\tbackground-position: bottom right;\n\t\t\tbackground-size: cover;\n\t\t\tbackground-repeat: no-repeat;\n\t\t}Slider\n\t\t`\n\tconst customFormats = props.customFormats \n\tconst onSubmit = props.onSubmitFunction \n\tconst products = props.data\n\tlet modifiedItems = []\n\tconst columns = props.columns\n\tconst custoColumns = props.togglecolumns\n\tconst title = props.title\n\tconst [inputList, setInputList] = useState([]);\n\tconst [selectedItems, setSelectedItems] = useState([]);\n\tconst [printButton, setPrintButton] = useState(false);\n\tconst [alertDelete, setAlertDelete] = useState(\"Voulez-vous supprimer ces éléments\");\n\tcolumns.forEach(element => {\n\t\telement.filter=textFilter({placeholder:\"...\"})\n\t});\n\tconst generatePdf = () =>{\n\t\tconsole.log(selectedItems)\n\t\tgenerateDeliverySlip(selectedItems,products,inputList, setInputList,customersList)\n\t\tsetPrintButton(true)\n\t} \n\tconst generateBillPdf = () =>{\n\t\tconsole.log(selectedItems)\n\t\tgenerateBill(selectedItems,products,inputList, setInputList,customersList)\n\t\tsetPrintButton(true)\n\t} \n\tconst handleOnSelect = (row, isSelect) => {\n\t\tlet item = 0\n\t\tconsole.log(row)\n\t\tconsole.log(isSelect)\n\t\tfor (let i=0; i<products.length; i++){\n\t\t\tif (products[i].id===row.id){\n\t\t\t\titem = i+1\n\t\t\t\tconsole.log(item)\n\t\t\t}\n\t\t}\n\t\tif (isSelect) {\t\t\t\n\t\t\tsetSelectedItems(selectedItems.concat(item))\n\t\t}else{\n\t\t\tsetSelectedItems(selectedItems.filter(i => i !== item))\n\t\t}\n\t\tconsole.log(selectedItems)\n\t\treturn true; // return true or dont return to approve current select action\n\t}\n\tconst modifyItems = () =>{\n\t\tSaveData (modifiedItems,products,onSubmit)\n\t}\n\tconst confirmDelete = ()=>{\n\t\tlet warning = \"\"\n\t\tlet msg = \"\"\n\t\tselectedItems.forEach(index => {\n\t\t\tif(products[index-1][\"status\"]==\"terminé\"||products[index-1][\"status\"]==\"en attente d'enlèvement\"){\n\t\t\t\tproducts[index-1][\"memory\"] = 0\n\t\t\t\tmsg = msg +(msg!=\"\"?\", \":\"\") + products[index-1][\"id\"]\n\t\t\t}else{\n\t\t\t\twarning = warning +(warning!=\"\"?\", \":\"\") + products[index-1][\"id\"]\n\t\t\t}\n\t\t\tif (warning ==\"\"){\n\t\t\t\tsetAlertDelete(alertDelete + \": \"+ msg)\n\t\t\t}else{\n\t\t\t\tsetAlertDelete(\"Ces éléments ne peuvent pas être supprimés\" + \": \"+ warning+\". Voulez-vous supprimer les éléments suivants: \"+msg)\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\n\tconst deleteItems = () =>{\n\t\tsetAlertDelete(\"Voulez-vous supprimer ces éléments\")\n\t\tconsole.log(selectedItems)\n\t\tSaveData (selectedItems,products,onSubmit)\n\t\thandleClose()\n\t}\n\n\tconst beforeSaveCell= (oldValue, newValue, row, column, done) =>{\n\t\tfor (let i=0; i<products.length;i++){\n\t\t\tif(products[i].id === row.id){\n\t\t\t\tproducts[i][column[\"dataField\"]]= newValue\n\t\t\t\tfor (let j=0; j<modifiedItems.length;j++){\n\t\t\t\t\tif(modifiedItems[j]=== (i+1)){\n\t\t\t\t\t\tconsole.log(modifiedItems)\n\t\t\t\t\t\tdone(true);\n\t\t\t\t\t\treturn { async: true };\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(modifiedItems)\n\t\t\t\t}\n\t\t\t\tmodifiedItems.push(i+1)\n\t\t\t\tconsole.log(modifiedItems)\n\t\t\t}\n\t\t}\n\t\tconsole.log(modifiedItems)\n\t\tdone(true);\n\t\treturn { async: true };\n\t}\n\tconst CustomToggleList = ({\n\n\t\tonColumnToggle,\n\t\ttoggles\n\t\t}) => (\n\t\t<div className=\"btn-group btn-group-toggle btn-group-vertical\" style={{ flexDirection: 'row' }} data-toggle=\"buttons\">\n\t\t\t{\n\t\t\tcustoColumns\n\t\t\t\t.map(column => ({\n\t\t\t\t...column,\n\t\t\t\ttoggle: toggles[column.dataField]\n\t\t\t\t}))\n\t\t\t\t.map(column => (\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ maxWidth: '200px',marginRight: '0.5rem !important',borderRadius: '0.3rem', height: '100%'}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvariant=\"outline-primary\"\n\t\t\t\t\tkey={ column.dataField }\n\t\t\t\t\tclassName={ `toggle-button ${column.toggle ? 'active' : ''}` }\n\t\t\t\t\tdata-toggle=\"button\"\n\t\t\t\t\taria-pressed={ column.toggle ? 'true' : 'false' }\n\t\t\t\t\tonClick={ () => onColumnToggle(column.dataField) }\n\t\t\t\t>\n\t\t\t\t\t{ column.text }\n\t\t\t\t</Button>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t\t);\t\n\tconst selectRow = {\n\t\tmode: 'checkbox',\n\t\tclickToSelect: true,\n\t\tclickToEdit: true,\n\t\tonSelect: handleOnSelect\n\t};\n\tconst cellEdit = {\n\t\tmode: 'click',\n\t\tbeforeSaveCell\n\t};\n\tconst actions = props.actions\n\tconst searchloop = (<FontAwesomeIcon icon={faSearch} />);\n\tconst titleIcon = (<FontAwesomeIcon icon={faClipboardList} />);\n\tconst modalSchema = props.schema\n\tconst test = props.columnToggleProps\n\tconsole.log(test)\n\tconst requiredFields = props.requiredFields\n\tconst additionalProperties = props.additionalProperties\n\treturn (\n\t\t<>\n\t\t<Helmet>\n\t\t\t<style>{css}</style>\n\t\t</Helmet>\n\t\t<Container className='p-5 info-table'>\t\t\n\t\t\t<ToolkitProvider\n\t\t\t\tbootstrap4\n\t\t\t\tkeyField={columns[0][\"dataField\"]}\n\t\t\t\tclassName='bootstrap-data-table' \n\t\t\t\tdata={ products } \n\t\t\t\tcolumns={ columns } \n\t\t\t\tcolumnToggle\n\t\t\t\tplaceholder= \"\"\n\t\t\t\tsearch\n\t\t\t>\n\t\t\t{\n\t\t\t\t(props) => (\n\t\t\t\t\t\n\t\t\t\t<div\t>\n\t\t\t\t\t<h3>{titleIcon}{title}</h3>\n\t\t\t\t\t{searchloop}\n\t\t\t\t\t\n\t\t\t\t\t<SearchBar { ...props.searchProps } placeholder='Recherche ...' />\n\t\t\t\t\t<div className=\"row p-3\">\n\t\t\t\t\t\t<p className=\"is-size-11 has-text-centered\"><b>Afficher/Cacher le(s) colonne(s)</b></p>\n\t\t\t\t\t<CustomToggleList { ...props.columnToggleProps } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col p-2 has-text-centered-mobile'\n\t\t\t\t\t\tstyle={{ textAlign: 'start'}}>\n\t\t\t\t\t\t{actions.includes(\"generate\")\n\t\t\t\t\t\t\t?<><Button variant=\"outline-primary\" size=\"lg\" onClick={generatePdf}>Générer le(s) bordereau(x)</Button>{' '}</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{actions.includes(\"bill\")\n\t\t\t\t\t\t\t?<><Button variant=\"outline-primary\" size=\"lg\" onClick={generateBillPdf}>Générer le(s) facture(s)</Button>{' '}</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{actions.includes(\"add\")\n\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\n\t\t\t\t\t\t\t<PopupForm schema={modalSchema} requiredFields={requiredFields} additionalProperties={additionalProperties} customFormats={customFormats}\tonSubmitFunction={onSubmit} color=\"primary\" modalTitle=\"Ajouter un element\" buttonTitle=\"+Ajouter\"></PopupForm>{' '}\n\t\t\t\t\t\t\t</div></>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{actions.includes(\"modify\")\n\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" size=\"lg\" onClick={modifyItems}>Modifier</Button>{' '}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{actions.includes(\"delete\")\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button variant=\"outline-danger\" size=\"lg\"onClick={handleShow}>Supprimer</Button>\n\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>Supprimer</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>{alertDelete}</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={handleClose}>\n\t\t\t\t\t\t\t\t\tAnnuler\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={deleteItems}>\n\t\t\t\t\t\t\t\t\tConfirmer\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<BootstrapTable\n\t\t\t\t\t\t{ ...props.baseProps }\n\t\t\t\t\t\tpagination={ paginationFactory() }\n\t\t\t\t\t\tfilter={ filterFactory() }\n\t\t\t\t\t\tselectRow={ selectRow }\n\t\t\t\t\t\tcellEdit={ cellEditFactory(cellEdit)}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrintComponent componentToPrint={inputList} printButton={printButton}/>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</ToolkitProvider>\n\n\t\t</Container>\n\t\t{props.crumbs_list\n\t\t\t? <Breadcrumbs crumbs ={props.crumbs_list} invertedText={false} ></Breadcrumbs>\n\t\t\t: <></>\n\t\t}\n\t\t\n\t\t</>\n\t);\n}\nTable.propTypes = {\n\t\tadditionalProperties: PropTypes.array,\n\t\trequiredFields: PropTypes.array,\n\t\tcustomFormats: PropTypes.array,\n\t\ttogglecolumns: PropTypes.array,\n\t\ttitle: PropTypes.string,\n\t\tdata: PropTypes.array,\n\t\tcolumns: PropTypes.array,\n\t\tschema: PropTypes.array,\n\t\tactions: PropTypes.array,\n\t\tcrumbs_list: PropTypes.array,\n\t\tsearchProps: PropTypes.any,\n\t\tcolumnToggleProps: PropTypes.any,\n\t\tonColumnToggle: PropTypes.any,\n\t\ttoggles: PropTypes.any,\n\t\tbaseProps: PropTypes.any,\n\t\taddItems: PropTypes.any,\n\t\tmodifyItems: PropTypes.any,\n\t\tonSubmitFunction : PropTypes.string,\n\t\tdeleteItems: PropTypes.any,\n};\n\n\nexport default Table;\n\n\n\n","import Table from '../table/Table';\nimport  customerData  from '../data/orders.json';\nimport  plans  from '../data/plans.json';\nimport {getToken, getCustomerslist, getUserIds,getOrderslist,getUserPlan, createPdf}  from '../../api/Common';\nimport {useHistory} from \"react-router-dom\";\nfunction Orders() {\n\tconst orders = JSON.parse(getOrderslist())\n\tconst customers = JSON.parse(getCustomerslist())\n\tconst plan = getUserPlan()\n\tlet history = useHistory();\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n\tlet list = []\n\tfor (let i in orders){\n\t\tif(orders[i][\"memory\"]==\"1\"){\n\t\t\tlist.push(orders[i])\n\t\t\tlist[i][\"price_delivery\"]=(plans[plan][\"price\"]+((list[i][\"weight_g\"]>10200)?(Math.ceil((list[i][\"weight_g\"]-10200)/1000) * plans[plan][\"extra\"]):\"\"))\n\t\t}\n\n\t}\n\tlet userDescription = []\n\tfor (let i in customers){\n\t\tuserDescription.push(customers[i].firstname + \" \" +customers[i].firstname+ \": \" + customers[i].id)\n\n\t}\n\tconst createReciept = (data)=>{\n\t\tcreateReciept()\n\t}\n\tconst userIds = getUserIds();\n\tconsole.log(userIds)\n\tconst schemaString = {\n\t\tclient_id: {\"type\": \"string\", \"title\": \"Numéro du client\", \"enum\": userIds, \"enumNames\": userDescription},\n\t\taddClient: {\n\t\t\ttype: \"array\",\n\t\t\titems: {\n\t\t\t\t$ref: \"#/definitions/Metric\"\n\t\t\t},\n\t\t\tmaxItems: 1,\n\t\t\ttitle: \"\"\n\t\t\t},\n\t\tweight_g: {\"type\": \"number\", \"title\": \"Poids en grammes\"},\n\t\tprice_base: {\"type\": \"number\", \"title\": \"Prix du produit\"},\n\t\tpackage_number: {\"type\": \"number\", \"title\": \"Nombre de colis\"}\n\t}\n\n\tconst definitions = {\n\t\tMetric: {\n\t\t\ttitle: \"Nouveau Client\",\n\t\t\ttype: \"object\",\n\t\t\tproperties: {\n\t\t\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\t\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\t\t\temail: {\"type\": \"string\", \"title\": \"Adresse mail\"},\n\t\t\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\t\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\t\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\t\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t\t\t},\n\t\t\trequired: [\"firstname\", \"name\", \"email\", \"postal_code\", \"state\", \"address\", \"phone\"]\n\t\t},\t\t\n\t}\n\tconst requiredFields = {\n\n\t\tprice_base: {\"type\": \"number\", \"title\": \"Prix du produit\"},\n\t\tpackage_number: {\"type\": \"number\", \"title\": \"Nombre de colis\"},\n\n\t}\n\treturn(\n\t\t<>\n\t\t<Table data={list} schema={schemaString} togglecolumns={customerData[\"togglecolumns\"]} requiredFields ={requiredFields} additionalProperties={definitions} customFormats={{}}  onSubmitFunction=\"orders\" actions={customerData[\"actions\"]}  columns={customerData[\"columns\"]} title={customerData[\"title\"]} crumbs_list={customerData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Orders;\n\n\n\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { getUser, getToken } from '../../api/Common';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport  data  from '../data/table.json';\nfunction Notifications() {\n  const user = getUser();\n  let history = useHistory();\n  // handle click event of logout button\n  if (!getToken()){\n\thistory.push(\"/login\")\n  }\n  const products = data\n  const columns = [\n\t{\n\t\tdataField: 'order_id',\n\t\ttext: 'Numéro de commande'\n\t}, \n\t{\n\t\tdataField: 'package_id',\n\t\ttext: 'Numéro du colis'\n\t}, \n\t{\n\t\tdataField: 'weight_g',\n\t\ttext: 'Poids'\n\t},\n\t{\n\t\tdataField: 'name',\n\t\ttext: 'Nom du client'\n\t}, \n\t{\n\t\tdataField: 'email',\n\t\ttext: 'Adresse mail'\n\t},\n\n\t{\n\t\tdataField: 'state',\n\t\ttext: 'État'\n\t},\n\t{\n\t\tdataField: 'postal_code',\n\t\ttext: 'Code postale'\n\t}, \n\t{\n\t\tdataField: 'price_base',\n\t\ttext: 'Prix du produit'\n\t}, \n\t{\n\t\tdataField: 'price_delivery',\n\t\ttext: 'Prix de livraison'\n\t}, \n\t{\n\t\tdataField: 'status',\n\t\ttext: 'statut'\n\t}\n\n\n];\n  return (\n    <BootstrapTable keyField='id' className='bootstrap-data-table' data={ products } columns={ columns } pagination={ paginationFactory() } />\n  );\n}\nexport default Notifications;\n\n\n\n","import Table from '../table/Table';\nimport  customerData  from '../data/customers.json';\nimport {getCustomerslist,getOrderslist, createPdf}  from '../../api/Common';\nfunction Customers() {\n\tconst customers = JSON.parse(getCustomerslist())\n\tconst orders = JSON.parse(getOrderslist())\n\tconsole.log(customers)\n\tlet list = []\n\tfor (let i in customers){\n\t\tif(customers[i][\"memory\"]==\"1\"){\n\t\t\tlet total_orders = 0\n\t\t\tlet current_orders = 0\n\t\t\tfor (let j in orders){\n\t\t\t\tif(orders[j][\"client_id\"]==customers[i][\"id\"]){\n\t\t\t\t\ttotal_orders = total_orders+1\n\t\t\t\t\tif(customers[i][\"status\"]!=\"terminé\"){\n\t\t\t\t\t\tcurrent_orders = current_orders +1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcustomers[i][\"total_orders\"] = total_orders\n\t\t\tcustomers[i][\"ongoing_orders\"] = current_orders\n\t\t\tlist.push(customers[i])\n\t\t}\n\t}\n\n\tconst schemaString = {\n\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\temail: {\"type\": \"string\", \"title\": \"Adresse mail\"},\n\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t}\n\tconst requiredFields = schemaString\n\tconst customFormats = {\n\t\t'phone-tn': /^[0-9]{8}$/\n\t};\n\treturn(\n\t\t<>\n\t\t<Table data={list} schema={schemaString} togglecolumns={customerData[\"togglecolumns\"]}  requiredFields={requiredFields} customFormats={customFormats} onSubmitFunction=\"customers\" actions={customerData[\"actions\"]}  columns={customerData[\"columns\"]} title={customerData[\"title\"]} crumbs_list={customerData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Customers;\n","import Table from '../table/Table';\nimport\tbillsData\tfrom '../data/bills.json';\nimport  plans  from '../data/plans.json';\nimport {getCustomerslist,getOrderslist, createPdf,getUserPlan}\tfrom '../../api/Common';\nfunction Bills() {\n\tconst orders = JSON.parse(getOrderslist())\n\tlet data = []\n\tlet list = []\n\tconst plan = getUserPlan()\n\tlet initProperties = [\"delivered\",\"awaiting_pickup\",\"in_delivery\",\"postponed\",\"in_storage\",\"awaiting_return\",\"in_storage_to_return\",\"in_storage_to_return\",\n\t\"return_postponed\",\"return_pickup_postponed\",\"returned\",\"package_number\",\"total_price\",\"total_weight\",\"price_delivery\",\"total_packages\",\"payed\"]\n\tconst dataMap = async () =>{\n\t\tPromise.all(orders.map(item => { \n\t\t\tif(item[\"memory\"]==\"1\"){\n\t\t\t\tif(!list[item[\"order_id\"]]){\n\t\t\t\tlist[item[\"order_id\"]]= []\n\t\t\t\tlist[item[\"order_id\"]][\"order_id\"] = item[\"order_id\"]\n\t\t\t\tinitProperties.forEach(element => {\n\t\t\t\t\tlist[item[\"order_id\"]][element] = 0\n\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(item[\"order_id\"]==list[item[\"order_id\"]][\"order_id\"]){\n\t\t\n\t\t\t\tswitch (item[\"status\"]) {\n\t\t\t\t\tcase \"livré\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].delivered = list[list[item[\"order_id\"]]].delivered + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en attente d'enlèvement\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].awaiting_pickup = list[item[\"order_id\"]].awaiting_pickup + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en cours de livraison\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_delivery = list[item[\"order_id\"]].in_delivery + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Livraison reportée\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].postponed = list[item[\"order_id\"]].postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en entrepôt\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_storage = list[item[\"order_id\"]].in_storage + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en attente de retour\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].awaiting_return = list[item[\"order_id\"]].awaiting_return + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en entrepôt (retour)\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_storage_to_return = list[item[\"order_id\"]].in_storage_to_return + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"retour reporté\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].return_postponed = list[item[\"order_id\"]].return_postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"enlèvement reporté (retour)\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].return_pickup_postponed = list[item[\"order_id\"]].return_pickup_postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"retourné\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].returned = list[item[\"order_id\"]].returned + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"payé\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].payed = list[item[\"order_id\"]].payed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Status not recognized\");\n\t\t\t\t}\n\t\t\t\titem[\"price_delivery\"]=(plans[plan][\"price\"]+((item[\"weight_g\"]>10200)?(Math.ceil((item[\"weight_g\"]-10200)/1000) * plans[plan][\"extra\"]):\"\"))\n\t\t\t\tlist[item[\"order_id\"]].total_packages = list[item[\"order_id\"]].total_packages + 1\n\t\t\t\tlist[item[\"order_id\"]].total_weight = Number(item[\"weight_g\"]) + list[item[\"order_id\"]].total_weight\n\t\t\t\tlist[item[\"order_id\"]].total_price = Number(item[\"price_base\"]) + list[item[\"order_id\"]].total_price\n\t\t\t\tlist[item[\"order_id\"]].price_delivery = Number(item[\"price_base\"]) + list[item[\"order_id\"]].price_delivery\n\t\t\t\tlist[item[\"order_id\"]].package_number = Number(item[\"package_number\"]) + list[item[\"order_id\"]].package_number\n\t\t\t\t}\n\t\t\t}\n\t\t})).then((ret)=>{\n\t\t\tconsole.log(\"end of promises\", orders)\n\t\t\tconsole.log(\"end of promises\", ret)\n\t\t\tconsole.log(\"end of promises\", list)\n\t\t\treturn true\n\t\t})\n\t}\n\tdataMap()\n\tfor (let k in list){\n\t\tdata.push(list[k])\n\t\tconsole.log(data)\n\t}\n\n\tconsole.log(data)\n\treturn(\n\t\t<>\n\t\t<Table data={data} actions={billsData[\"actions\"]} togglecolumns={billsData[\"togglecolumns\"]} columns={billsData[\"columns\"]} title={billsData[\"title\"]} crumbs_list={billsData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Bills;\n","function ContactUs() {\n    return (\n        <div className= \"ContactUs\">\n\n\t\t</div>\n    );\n}\n\nexport default ContactUs;\n","function Tracking() {\n    return (\n        <div className= \"Tracking\">\n\n\t\t</div>\n    );\n}\n\nexport default Tracking;\n","\nimport { Helmet } from \"react-helmet\";\nimport { useHistory } from \"react-router-dom\";\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession , getToken} from '../../api/Common';\n\nfunction Login() {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n  let history = useHistory();\n  if (getToken()){\n\thistory.push(\"/dashboard\")\n  }\n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    \n    axios.post('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/user', { \"query\": \"0\", \"username\": username.value, \"password\": password.value }).then(response => {\n      if(response.data.statusCode === 200) {\n        setUserSession(response.data.body);\n\t\thistory.go(\"/dashboard\")\n      }else{\n        setLoading(false);\n        setError(\"Votre nom d'utilisateur ou adresse mail est incorrecte\");\n      }\n\n    }).catch(error => {\n      setLoading(false);\n      if (error) {setError(error);\n      }\n      else setError(\"Something went wrong. Please try again later.\");\n    });\n  }\n    const css = `\n        .App {\n            background: url('https://calirextn.com/assets/images/loading-background.svg');\n            background-position: top center;\n            background-size: cover;\n            background-repeat: no-repeat;\n        }\n    `\n    return (\n        <div className= \"LoginForm\">\n            <Helmet>\n                <style>{css}</style>\n            </Helmet>\n            <div className=\"auth-wrapper p-5\">\n                <div className=\"auth-inner\"> \n                    <form>\n                        <h3>Connexion</h3>\n\n                        <div className=\"form-group\">\n                            <label>Adresse mail</label>\n                            <input type=\"email\" {...username} autoComplete=\"new-username\"  className=\"form-control\" placeholder=\"Enter email\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Mot de passe</label>\n                            <input type=\"password\" {...password} autoComplete=\"new-password\" className=\"form-control\" placeholder=\"Enter password\" />\n                        </div>\n\t\t\t\t\t\t{error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n                        {/* <div className=\"form-group\">\n                            <div className=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                            </div>\n                        </div>\n\t\t\t\t\t\t*/}\n                        <button type=\"button\" className=\"btn btn-primary btn-block\"  value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading}>Se connecter</button>\n                        {/* <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>  */}\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nconst useFormInput = initialValue => {\n\tconst [value, setValue] = useState(initialValue);\n\tconst handleChange = e => {\n\t\tsetValue(e.target.value);\n\t}\n\treturn {\n\t\tvalue,\n\t\tonChange: handleChange\n\t}\n  }\n  \n\nexport default  Login;\n","import React from 'react';\nimport { Card, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { getUser, removeUserSession, getToken } from '../../api/Common';\nimport './Dashboard.scss';\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport Table from '../table/Table';\n\nfunction Dashboard() {\n  const user = getUser();\n  const crumbs_list = [[\"/\", \"Accueil\"], [\"/Dashboard\", \"Tableau de bord\"]]\n  let history = useHistory();\n  // handle click event of logout button\n  if (!getToken()){\n\thistory.push(\"/login\")\n  }\n  const handleLogout = () => {\n    removeUserSession();\n\thistory.go(\"/login\")\n  }\n  const css = `\n      .App {\n          background: url('https://calirextn.com/assets/images/loading-background.svg');\n          background-position: bottom right;\n          background-size: cover;\n          background-repeat: no-repeat;\n      }\n  `\n  return (\n    <>\n      <Helmet>\n          <style>{css}</style>\n      </Helmet>\n      <div className=\"container p-4 container-sm\">\n        <h2 className=\" text-center text-white p-4\">Bienvenue {user}</h2>\n        <div className=\"row justify-content-center\">\n          <Col md={4}>\n            <Card\n            bg={'primary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/customers' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Clients\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col>\n          <Col md={4}>\n            <Card\n            bg={'secondary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/orders' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Commandes\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col>\n        </div>\n        <div className=\"row justify-content-center\">\n          {/* <Col md={4} >\n            <Card\n            bg={'secondary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/notifications' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Alertes\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col> */}\n          <Col md={4} className='order-sm-last order-first'>\n            <Card\n            bg={'primary'}\n            text={'white'}\n            style={{ width: '100%' , height : '10rem'}}\n            className=\"mb-2 popout-card\"\n          >\n            <Card.Body\n            style={{display: 'flex' , justifyContent: 'center', alignItems: 'center'}}\n            >\n              <Card.Text>\n                <a href='/bills' className='is-size-15 stretched-link'\n\n                style={{ textDecoration: 'unset' , color : 'white'}}\n                >\n                  Mes Factures\n                </a>\n                \n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </Col>\n        </div> \n      </div>\n      <Breadcrumbs crumbs ={crumbs_list} invertedText={true} ></Breadcrumbs>\n    </>\n  );\n}\n\n\nexport default Dashboard;\n","\nimport { Helmet } from \"react-helmet\";\n\nfunction Signup() {\n    const css = `\n        .App {\n            background: url('https://calirextn.com/assets/images/loading-background.svg');\n            background-position: top center;\n            background-size: cover;\n            background-repeat: no-repeat;\n        }\n    `\n    return (\n        <div className= \"SignupForm\">\n            <Helmet>\n                <style>{css}</style>\n            </Helmet>\n            <div className=\"auth-wrapper p-5\">\n                <div className=\"auth-inner\"> \n                    <form>\n                        <h3>Sign Up</h3>\n\n                        <div className=\"form-group\">\n                            <label>First name</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Last name</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Email address</label>\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                        <p className=\"forgot-password text-right\">\n                            Already registered <a href=\"/login\">sign in?</a>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;\n","import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport  data  from '../data/data.json';\nfunction UserForm() {\n  return (\n    <div className=\"UserForm\">\n      <h1>New User form</h1>\n      <input name=\"firstname\" onChange={(event)=>{\n        this.setState({ user: { ...this.state.user, firstname: event.target.value} });\n      }}>\n      </input>\n      <input name=\"lastname\" onChange={(event)=>{\n        this.setState({ user: { ...this.state.user, lastname: event.target.value} });\n        }}>\n      </input>\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            {data.text}\n          </Card.Text>\n          <Button variant=\"primary\">Go somewhere</Button>\n        </Card.Body>\n      </Card>\n    </div>\n    \n  );\n}\nexport default UserForm;\n","import './App.scss';\nimport Home from './components/home/Home';\nimport Header from './components/header/Header';\nimport HeaderOut from './components/header/HeaderLoggedOut';\nimport Footer from './components/footer/Footer';\nimport Prices from './components/prices/Prices';\nimport Profile from './components/profile/Profile';\nimport Orders from './components/orders/Orders';\nimport Notifications from './components/notifications/Notifications';\nimport Customers from './components/customers/Customers';\nimport Bills from './components/bills/Bills';\nimport ContactUs from './components/contactus/ContactUs';\nimport Tracking from './components/tracking/Tracking';\nimport Login from './components/login/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Signup from './components/signup/Signup';\nimport UserForm from './components/userform/UserForm';\nimport React, { useState, useEffect } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport axios from 'axios';\nimport { getToken, removeUserSession, setUserSession } from './api/Common';\nfunction App() {\n\tconst [authLoading, setAuthLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tconst token = getToken();\n\t\tif (!token) {\n\t\treturn;\n\t\t}\n\t\taxios.get(`https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/user?operation=2&&authorizationToken=${token}`).then(response => {\n\t\tif(response.data.statusCode === 200) {\n\t\t\tsetUserSession(response.data.body);\n\t\t\tsetAuthLoading(false);\n\t\t}else{\t\n\t\t\tremoveUserSession();\n\t\t\tsetAuthLoading(false);\n\t\t}\n\t\t\n\t\t}).catch(error => {\n\t\tremoveUserSession();\n\t\tsetAuthLoading(false);\n\t\t});\n\t}, []);\n\tlet header = <></>\n\tif(getToken()){\n\n\t\theader = <Header bg=\"secondary\"/>\n\t}else{\n\t\theader = <HeaderOut bg=\"secondary\"/>\n\t}\n\tif (authLoading && getToken()) {\n\t\treturn  <> \n\t\t\t\t\t\n\t\t\t\t\t<div className=\"pageloader\">  \n\t\t\t\t\t<Header/>\n\t\t\t\t\t<div className=\"pageloader-content\">\n\t\t\t\t\t\t<Spinner animation=\"grow\" size=\"sm\" /><Spinner animation=\"grow\" />\n\t\t\t\t\t\t<span className=\"is-size-24 text-white\">&nbsp;Chargement...</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</>\n\t}\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t{header}\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Login/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/signup\">\n\t\t\t\t\t\t<Signup/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/tracking\">\n\t\t\t\t\t\t<Tracking />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/pricing\">\n\t\t\t\t\t\t<Prices />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/dashboard\">\n\t\t\t\t\t\t<Dashboard/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t\t<Profile/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/customers\">\n\t\t\t\t\t\t<Customers/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/bills\">\n\t\t\t\t\t\t<Bills/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/notifications\">\n\t\t\t\t\t\t<Notifications />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/orders\">\n\t\t\t\t\t\t<Orders />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/contact-us\">\n\t\t\t\t\t\t<ContactUs />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t\t<Footer/>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}