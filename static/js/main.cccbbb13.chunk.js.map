{
  "version": 3,
  "sources": [
    "components/slider/Slider.js",
    "components/video/Video.js",
    "components/cards/Cards.js",
    "components/introCard/IntroCard.js",
    "components/map/Map.js",
    "components/home/Home.js",
    "components/header/HeaderLoggedOut.js",
    "components/footer/Footer.js",
    "components/prices/Prices.js",
    "api/Common.js",
    "components/profile/Profile.js",
    "components/breadcrumbs/Breadcrumbs.js",
    "api/DataManager.js",
    "components/popupform/PopupForm.js",
    "components/printComponent/PrintComponent.js",
    "components/table/Table.js",
    "components/orders/Orders.js",
    "components/notifications/Notifications.js",
    "components/customers/Customers.js",
    "components/bills/Bills.js",
    "components/contactus/ContactUs.js",
    "components/tracking/Tracking.js",
    "components/dashboard/Dashboard.js",
    "App.js",
    "serviceWorkerRegistration.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "Slider",
    "Video",
    "embedId",
    "className",
    "src",
    "frameBorder",
    "allow",
    "allowFullScreen",
    "Cards",
    "props",
    "card",
    "type",
    "Card",
    "Body",
    "Row",
    "Col",
    "md",
    "Text",
    "text_size",
    "title",
    "text",
    "Img",
    "loading",
    "alt",
    "Container",
    "lg",
    "IntroCard",
    "imgStyle",
    "padding",
    "hrStyle",
    "width",
    "Map",
    "style",
    "subtitle",
    "rel",
    "target",
    "href",
    "Home",
    "cards_data",
    "require",
    "cards",
    "card_item",
    "push",
    "HeaderOut",
    "loggedOut",
    "Nav",
    "Link",
    "Navbar",
    "collapseOnSelect",
    "expand",
    "bg",
    "variant",
    "Brand",
    "height",
    "Toggle",
    "Collapse",
    "id",
    "Footer",
    "Prices",
    "table_data",
    "useState",
    "show",
    "setShow",
    "handleClose",
    "handleShow",
    "criterias",
    "criterea",
    "criterias_item",
    "xmlns",
    "fill",
    "viewBox",
    "d",
    "promo",
    "Title",
    "dangerouslySetInnerHTML",
    "__html",
    "name",
    "quantity",
    "price",
    "onClick",
    "Helmet",
    "classNameName",
    "Modal",
    "onHide",
    "Header",
    "closeButton",
    "Button",
    "userAttributes",
    "getToken",
    "sessionStorage",
    "getItem",
    "removeUserSession",
    "removeItem",
    "i",
    "length",
    "setOrdersList",
    "token",
    "Promise",
    "resolve",
    "reject",
    "axios",
    "get",
    "replace",
    "then",
    "response",
    "data",
    "statusCode",
    "body",
    "catch",
    "error",
    "getOrders",
    "list",
    "console",
    "log",
    "setItem",
    "JSON",
    "stringify",
    "Items",
    "setCustomersList",
    "getCustomers",
    "updateOrderList",
    "rawdata",
    "post",
    "setOrders",
    "alert",
    "updateCustomersList",
    "setCustomers",
    "getOrderslist",
    "parse",
    "items",
    "memory",
    "getCustomerslist",
    "getUserPlan",
    "Profile",
    "history",
    "useHistory",
    "placeholder",
    "value",
    "textAlign",
    "size",
    "Breadcrumbs",
    "breadcrumbs",
    "content",
    "bcscript",
    "crumbs_list",
    "index",
    "crumbs",
    "crumb",
    "itemListElement",
    "crumb_item",
    "Breadcrumb",
    "Item",
    "invertedText",
    "active",
    "script_content",
    "CryptoJS",
    "QRCode",
    "userInfo",
    "slice",
    "getUserSession",
    "submitCustomer",
    "formData",
    "e",
    "customersList",
    "dataTransfer",
    "userExists",
    "Date",
    "now",
    "Object",
    "keys",
    "map",
    "key",
    "SaveData",
    "products",
    "onSubmit",
    "forEach",
    "element",
    "PopupForm",
    "onSubmitFunction",
    "handleSave",
    "ordersList",
    "schema",
    "required",
    "requiredFields",
    "properties",
    "definitions",
    "additionalProperties",
    "newUserTransfer",
    "transfer",
    "date",
    "Clientorder_exists",
    "order_exists",
    "addClient",
    "userTransferObject",
    "oldData",
    "local_Clientorder_exists",
    "parseInt",
    "toISOString",
    "split",
    "submitOrder",
    "document",
    "getElementById",
    "reset",
    "color",
    "buttonTitle",
    "modalTitle",
    "PrintComponent",
    "componentRef",
    "useRef",
    "trigger",
    "printButton",
    "ref",
    "el",
    "media",
    "componentToPrint",
    "Table",
    "SearchBar",
    "Search",
    "ColumnToggle",
    "ToggleList",
    "confirmDelete",
    "customFormats",
    "modifiedItems",
    "columns",
    "custoColumns",
    "togglecolumns",
    "inputList",
    "setInputList",
    "selectedItems",
    "setSelectedItems",
    "setPrintButton",
    "alertDelete",
    "setAlertDelete",
    "filter",
    "textFilter",
    "generatePdf",
    "newImputList",
    "nb_slip",
    "global_price",
    "global_weight",
    "global_delivery",
    "global_total",
    "order",
    "global_packages",
    "today",
    "select",
    "weight",
    "nb_colis",
    "qrcode",
    "AES",
    "encrypt",
    "toString",
    "delivery_price",
    "custom_delivery_price",
    "product_price",
    "isNaN",
    "Number",
    "total_price",
    "client",
    "address",
    "number",
    "email",
    "j",
    "num_colis",
    "pageBreak",
    "Input",
    "pageBreakBefore",
    "scope",
    "colSpan",
    "Bill",
    "generateDeliverySlip",
    "generateBillPdf",
    "raw_product_price",
    "toFixed",
    "tva_product_price",
    "raw_delivery_price",
    "tva_delivery_price",
    "raw_custom_delivery_price",
    "tva_custom_delivery_price",
    "raw_total_price",
    "tva_total_price",
    "generateBill",
    "handleMultipleOnSelect",
    "row",
    "a",
    "item",
    "handleOnSelectAll",
    "isSelect",
    "rows",
    "all",
    "ret",
    "concat",
    "includes",
    "modifyItems",
    "warning",
    "msg",
    "deleteItems",
    "CustomToggleList",
    "onColumnToggle",
    "toggles",
    "flexDirection",
    "column",
    "toggle",
    "dataField",
    "maxWidth",
    "marginRight",
    "borderRadius",
    "selectRow",
    "mode",
    "clickToSelect",
    "clickToEdit",
    "onSelect",
    "onSelectAll",
    "cellEdit",
    "beforeSaveCell",
    "oldValue",
    "newValue",
    "done",
    "async",
    "actions",
    "searchloop",
    "icon",
    "faSearch",
    "titleIcon",
    "faClipboardList",
    "modalSchema",
    "test",
    "columnToggleProps",
    "bootstrap4",
    "keyField",
    "columnToggle",
    "search",
    "searchProps",
    "baseProps",
    "pagination",
    "paginationFactory",
    "filterFactory",
    "cellEditFactory",
    "Orders",
    "orders",
    "customers",
    "plan",
    "plans",
    "Math",
    "ceil",
    "customer",
    "find",
    "client_id",
    "state",
    "client_name",
    "firstname",
    "postal_code",
    "userDescription",
    "userIds",
    "users",
    "ids",
    "getUserIds",
    "schemaString",
    "$ref",
    "maxItems",
    "weight_g",
    "price_base",
    "package_number",
    "customerData",
    "Metric",
    "phone",
    "format",
    "Notifications",
    "Customers",
    "total_orders",
    "current_orders",
    "Bills",
    "initProperties",
    "dataMap",
    "delivered",
    "awaiting_pickup",
    "in_delivery",
    "postponed",
    "in_storage",
    "awaiting_return",
    "in_storage_to_return",
    "return_postponed",
    "return_pickup_postponed",
    "returned",
    "payed",
    "total_packages",
    "total_weight",
    "base_price_delivery",
    "k",
    "billsData",
    "ContactUs",
    "Tracking",
    "Dashboard",
    "ChartJS",
    "register",
    "RadialLinearScale",
    "ArcElement",
    "Tooltip",
    "Legend",
    "labels",
    "datasets",
    "label",
    "backgroundColor",
    "borderWidth",
    "App",
    "setAuthLoading",
    "useEffect",
    "user",
    "setUserSession",
    "header",
    "path",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister",
    "message"
  ],
  "mappings": "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",
  "file": "static/js/main.cccbbb13.chunk.js",
  "sourcesContent": [
    "import Carousel from 'react-bootstrap/Carousel'\nimport './Slider.scss';\nimport PropTypes from \"prop-types\";\nfunction Slider(props) {    \n    const items = [];\n    for (let item of props.slider_data.sliders) {\n        const bgStyle = {\n            background: \" linear-gradient( rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5) ), \"+item.style\n        };\n        const carousel_item = (\n            <Carousel.Item className={item.class} style={bgStyle}>\n                <Carousel.Caption>\n                    <h1>{item.title}</h1>\n                    <p>{item.subtitle}</p>\n                </Carousel.Caption>\n            </Carousel.Item>\n      );\n      items.push(carousel_item);\n    }\n    return (\n        <Carousel variant=\"light\" fade className={props.type}>\n            {items}\n        </Carousel>\n\n        );\n}\n\nSlider.propTypes = {\n    type: PropTypes.array,\n    slider_data: PropTypes.object,\n};\n\nexport default Slider;",
    "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Video.scss';\nconst Video = ({ embedId }) => (\n\t<div className=\"video-responsive\">\n\t\t<iframe\n\t\tsrc={`https://www.youtube.com/embed/${embedId}`}\n\t\tframeBorder=\"0\" \n\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n\t\tallowFullScreen\n\t\t/>\n\t</div>\n);\n\nVideo.propTypes = {\n\tembedId: PropTypes.string.isRequired\n};\n\nexport default Video;\n",
    "\nimport { Container, Row, Card, Col } from \"react-bootstrap\";\nimport './Cards.scss';\nimport Video from '../video/Video';\nimport PropTypes from \"prop-types\";\n\n function Cards(props) {\n    let card = <></>;\n\tconst hrStyle ={\n\t\twidth: \"50%\",\n\t\t\"display\" : \"inline-block\"\n\t}\n    if (props.type === 'video'){\n\t\tcard = (\n            <Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Video embedId={props.src} /> \n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n      );\n\t}\n\tif (props.type === 'card-img-left'){\n\t\tcard = (\n\t\t\t<Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Card.Text className={props.text_size}> \n\t\t\t\t\t\t\t\t<p className=\"is-size-20 is-bold\">{props.title}</p>\n\t\t\t\t\t\t\t\t<p className=\"is-size-13\">{props.text}</p>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Card.Img loading=\"lazy\"  src={props.src} alt={props.alt}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n\t\t) \n\t}\n\tif (props.type === 'card-img-right'){\n\t\tcard = (\n\t\t\t<Card className={props.type}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<Card.Img  loading=\"lazy\"  src={props.src} alt={props.alt}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t\t<Card.Text className={props.text_size}>\n\t\t\t\t\t\t\t<p className=\"is-size-20 is-bold\">{props.title}</p>\n\t\t\t\t\t\t\t\t<p className=\"is-size-13\">{props.text}</p>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\t\n\t\t) \n\t}\n\tif (props.type === 'jumbotron'){\n\t\tcard=(\n\t\t\t<>\n\t\t\t<h2 className=\"has-text-centered is-size-24 is-bold\">Apprenez à nous connaître?</h2>\n\t\t\t{/*<div className=\"jumbotron jumbotron-fluid alert alert-primary\">\n\t\t\t\t\n\t\t\t<p className=\"lead jumbottron-lead is-marginless\">\n\t\t\t\t<Row>\n\t\t\t\t<Col md={1}></Col>\n\t\t\t\t<Col md={8}>\n\t\t\t\t<h1 className=\"display-4 is-size-18 is-bold\">Envie de tarifs personnalisées?</h1>\n\t\t\t\t<p>Sélectionnez un parmi nos tarifs en promotion qui s&#39;adaptent à vos besoins quelle que soit la taille de votre commerce. <b>Commencez vos économies dès maintenant!</b></p>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={2}>\n\t\t\t\t<a className=\"btn btn-primary btn-lg jumbotron-btn\" href=\"/pricing\" role=\"button\">Tarifs</a></Col>\n\t\t\t\t<Col md={1}></Col>\n\t\t\t\t</Row>\n\t\t\t</p>\n\t\t\t</div>*/}\n\t\t\t</>\n\t\t)\n\t}\n\treturn (\n\t<Container lg className=\"card-container\" >\n\t\t{card}\n\t</Container>\n\t);\n}\n\nCards.propTypes = {\n\ttype: PropTypes.string,\n\ttext_size : PropTypes.string,\n\ttitle: PropTypes.string,\n\ttext: PropTypes.string,\n\tsrc: PropTypes.string,\n\talt: PropTypes.string\n  };\nexport default Cards\n",
    "import { Col, Row } from \"react-bootstrap\";\nimport './IntroCard.scss';\nfunction IntroCard() {\n    return (\n        <> \n\t\t\t<div className=\"bg-image p-5  mb-5 text-white align-items-center d-flex\">\n\t\t\t\t<Col md={6} className=\"cover-text-bloc has-text-centered has-text-left-touch\">\n\t\t\t\t\t\t<h1 className=\"is-size-30 is-size-15-mobile is-white\">\n\t\t\t\t\t\t{'On s\\'engage '}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{'à améliorer'}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{'votre expérience'}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t{/* <a type=\"button\" href=\"/tracking\" className=\"is-size-15 btn btn-primary\"> Suivre un colis</a> */}\n\t\t\t\t</Col>\n\t\t\t\t<img src=\"https://calirextn.com/assets/images/truck.svg\" className=\"cover-icon is-hidden-touch\"/>\n\t\t\t\t<img src='https://calirextn.com/assets/images/building-shadow.webp' className=\"cover-image is-hidden-touch\"/>\n\t\t\t</div>\n\t\t\t\n        </>  \n    );\n}\nexport default IntroCard;\n",
    "import { Container, Row } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nconst imgStyle = {\n\tpadding: \" 2rem \"\n};\nconst hrStyle ={\n\twidth: \"50%\",\n\t\"display\" : \"inline-block\"\n}\nconst Map = (props) => (\n\t<Container className=\"has-text-centered\" style={imgStyle}>\n\t\t<hr  style={hrStyle}/>\n\t\t<Row>\n\t\t\t<p className=\"is-size-24 is-bold\">{props.title}</p>\n\t\t\t<p className=\"is-size-15\">{props.subtitle}</p>\n\t\t</Row>\n\t\t<Row>\n\t\t<a data-expand-link className=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/maps/place/Calirex+Tunisie/@36.7643632,10.0340955,15z/data=!4m2!3m1!1s0x0:0xe8edc1e22de4a228?sa=X&ved=2ahUKEwjgvoCwnJvzAhUkBGMBHX4YCpIQ_BJ6BAhJEAU\">\n\n\t\t\t<img data-expand-target loading=\"lazy\" className=\"standalone-img\" src={props.src} alt={props.alt}></img></a>\n\t\t</Row>\n\t</Container>\n\t)\n\tMap.propTypes = {\n\t\ttitle: PropTypes.string,\n\t\tsubtitle: PropTypes.string,\n\t\tsrc: PropTypes.string,\n\t\talt: PropTypes.string\n\t};\nexport default Map;\n",
    "import Slider from '../slider/Slider';\nimport Cards from '../cards/Cards';\n\nimport { Container } from \"react-bootstrap\";\nimport IntroCard from '../introCard/IntroCard';\nimport Map from '../map/Map';\nimport './Home.scss';\n\n\nfunction Home() {\n\tconst cards_data = require('../data/cards.json'); \n\tconst map_title = \"Vous pouvez nous retrouver à cette adresse\";\n\tconst map_subtitle = \"7 avenue habib bourguiba Mornaguia, Manouba, 1110 Tunisie\";\n\tconst card_img = \"https://calirextn.com/assets/images/calirex-tunisie-geolocatisation.jpg\";\n    const cards = [];\n    for (let card of cards_data.cards) {\n\t\tconst card_item = (\n\t\t\t<Cards type={card.type} title={card.title} src={card.src} text_size={card.text_size} text={card.text} alt={(card.alt) ? card.alt : ''}></Cards>\n\t\t);\n      cards.push(card_item);\n    }\n    return (\n        <> \n\t\t\t<IntroCard/>\n\t\t\t{cards}\n\t\t\t<Map title={map_title} subtitle={map_subtitle} src={card_img} alt=\"Calirex Tunisie address\" />\n\t\t\t<div className='container'>\n\t\t\t</div>\n        </>  \n    );\n}\nexport default Home;\n",
    "import {Navbar, Container, Nav, NavDropdown} from 'react-bootstrap'\nimport PropTypes from \"prop-types\";\nimport './Header.scss';\n\nfunction HeaderOut(props) {\n\tconst loggedOut = <Nav><Nav.Link href=\"https://delivery.calirextn.com/\">Connexion</Nav.Link>{/*<Nav.Link href=\"https://delivery.calirextn.com/\">S&#39;inscrire</Nav.Link>*/}</Nav>\n\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"lg\" bg={props.bg} variant=\"dark\">\n        <Container className=\"page-header\" >\n        <Navbar.Brand href=\"/\">\n                <img\n                alt=\"\"\n                src=\"https://calirextn.com/assets/images/bare-logo-ctn.svg\"\n                width=\"70\"\n                height=\"70\"\n                className=\"d-inline-block align-top\"\n                />{' '}\n            </Navbar.Brand>\n        <Navbar.Brand  className=\"mea-text\" href=\"/\">Calirex Tunisie</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\n            <Nav className=\"me-auto\">\n            <Nav.Link href=\"https://delivery.calirextn.com/\">S&#39;enregistrer</Nav.Link>\n\t\t\t{/* <Nav.Link href=\"/tracking\">Suivre un colis</Nav.Link> */}\n            </Nav>\n\n\t\t\t{loggedOut}\n            \n        </Navbar.Collapse>\n        </Container>\n        </Navbar>      \n        </>  \n    );\n}\n\nHeaderOut.propTypes = {\n    bg: PropTypes.array\n};\n\nexport default HeaderOut;\n",
    "\nimport { FaRegEnvelope, FaFacebookSquare ,FaTwitterSquare, FaLinkedin,FaInstagram, FaMapMarkerAlt,FaPhoneSquareAlt} from \"react-icons/fa\";\nimport './Footer.scss';\nconst Footer = () => <footer className=\"footer\">\n    <div className=\"footer-center col-md-4 col-sm-6\">\n    <p className=\"about\">\n        <span> Qui sommes nous?</span> Entreprise de livraison à domicile qui s&lsquo;adapte à vos besoins. Livrer plus rapidement à vos clients et finalisez vos transactions.\n    </p>\n    <div className=\"icons\">\n        \n        <a href=\"https://pages.facebook.com/CalirexTunisie\"><FaFacebookSquare className=\"ct-icon\"/></a>\n        <a href=\"https://twitter.com/CalirexTunisie\"><FaTwitterSquare className=\"ct-icon\"/></a>\n        <a href=\"https://linkedin.com/company/calirex-tunisie\"><FaLinkedin className=\"ct-icon\"/></a>\n        <a href=\"https://www.instagram.com/calirex.tunisie\"><FaInstagram className=\"ct-icon\"/></a>\n    </div>\n    </div>\n    <div className=\"footer-center\">\n    <div>\n        <a><FaMapMarkerAlt className=\"ct-icon\"/>\n        <p><span> 7 avenue habib bourguiba, Mornaguia</span> Manouba, Tunisie</p></a>\n    </div>\n    <div>\n        <FaPhoneSquareAlt className=\"ct-icon\"/>\n        <p> (+216) 29 331 715</p>\n    </div>\n    <div>\n        <FaRegEnvelope className=\"ct-icon\"/>\n        <p><a href=\"#\"> contact@calirextn.com</a></p>\n    </div>\n    </div>\n    <div className=\"footer-right\">\n    <h2 className=\"mea-text\"> Calirex <span>Tunisie</span></h2>\n    <p className=\"menu\">\n        <a href=\"/\"> Accueil</a> |\n        <a href=\"/pricing\"> Tarifs</a> |\n        <a href=\"/carrieres\"> Carrières</a> |\n        {/* <a href=\"/tracking\"> Suivre un colis</a> */}\n    </p>\n    <p className=\"name\"> Calirex Tunisie &copy; 2021</p>\n    </div>\n\t<div className=\"footer-bottom\">\n\t\tCopyright © 2021 calirex tunisie. Tous droits réservés.\n\t</div>\n    </footer>\n\nexport default Footer\n",
    "import React, {useState } from \"react\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\nimport './Prices.scss';\n\nfunction Prices() {   \n\tlet table_data = require('../data/prices.json'); \n\tlet title = \"Choisissez l'offre qui vous convient\";\n  const [show, setShow] = useState(false);\n  const css = `\n      .App {\n          background: url('https://calirextn.com/assets/images/loading-background.svg');\n          background-position: bottom right;\n          background-size: cover;\n          background-repeat: no-repeat;\n      }\n  `\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const cards = [];\n    for (let card of table_data.cards) {\n      const criterias = []\n      \n      for (let criterea of card.criterias) {\n      const criterias_item = (\n        <li className=\"list-group-item price-card-bullet\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check text-primary\" viewBox=\"0 0 16 16\">\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\n          </svg> {criterea}\n        </li>\n      )\n      criterias.push(criterias_item);\n      }\n\t\tconst card_item = (\n\n        <div className=\"col-lg-4 col-md-12 mb-4\">\n          <Card className=\"popout-card h-100 shadow-lg pricing-card\">\n            <Card.Body>\n              <span className=\"badge text-primary badge-card is-size-13\">{card.promo}</span>\n              <div className=\"text-center p-3\">\n                <br/>\n                <Card.Title className=\"is-size-20 text-primary text-center price-card-title\" dangerouslySetInnerHTML={{__html: card.name}}></Card.Title>\n                <br/>\n                <small className=\"text-tertiary is-size-11\">{card.quantity}</small>\n                <br/><br/>\n                <span className=\"h1\">{card.price}</span><sup>TND</sup>/colis\n                <br/><br/>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                {criterias}\n              </ul>\n            </Card.Body>\n            <Card.Footer className=\" text-center price-card-footer\">\n              <button className=\"btn btn-primary btn-card btn-lg\" onClick={handleShow}>Selectionner</button>\n            </Card.Footer>\n          </Card>\n        </div>\n\t\t);\n      cards.push(card_item);\n    }\n    return (\n        <> \n          <Helmet>\n              <style>{css}</style>\n          </Helmet>\n          <div classNameName= \"Prices\">\n            <div className=\"container-fluid price-cards-container\" >\n              <div className=\"container p-4\">\n                <h2 className=\" text-center text-white p-4\">{title}</h2>\n                <div className=\"row\">\n                  {cards}\n                </div>    \n              </div>\n            </div>\n          </div>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Modal heading</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Woohoo, you&#39;re reading this text in a modal!</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose}>\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>  \n    );\n}\n\n\nexport default Prices;\n",
    "// return the user data from the session storage\nimport axios from 'axios';\nexport const getOrders = (token, resolve, reject) => {\n    axios.get('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/orders?pathvar='+token.replace(/\\W/g, '-')+'orders').then(response => {\n        if(response.data.statusCode === 200) {\n            resolve(response.data.body)\n            return(response.data.body)\n        }else{\n         \n            resolve(0)\n            return 0\n        }\n    }).catch(error => {\n        resolve(0)\n        return 0\n    });\n}\nexport const getCustomers = (token, resolve, reject) => {\n  axios.get('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/customers?pathvar='+token.replace(/\\W/g, '-')+'customers').then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const setOrders = (data, resolve, reject) => {\n  axios.post('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/orders',data).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\nexport const setCustomers = (data, resolve, reject) => {\n  console.log('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/customers',data)\n  axios.post('https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/customers',data).then(response => {\n      if(response.data.statusCode === 200) {\n          resolve(response.data.body)\n          return(response.data.body)\n      }else{\n       \n          resolve(0)\n          return 0\n      }\n  }).catch(error => {\n      resolve(0)\n      return 0\n  });\n}\n\nconst userAttributes = [\"phonenumber\", \"companyname\", \"landline\", \"plan\", \"address\", \"postalcode\", \"email\", \"country\", \"state\", \"city\", \"lastname\", \"countrycode\", \"firstname\", \"id\"]\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('firstname');\n  \n  if (userStr) return userStr;\n  else return null;\n}\n\n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token')\n  sessionStorage.removeItem('orders')\n  sessionStorage.removeItem('customers')\n  for (let i = 0; i < userAttributes.length; i++){\n    sessionStorage.removeItem(userAttributes[i])\n  }\n}\nexport const getUserIds = () =>{\n  const users = JSON.parse(sessionStorage.getItem(\"customers\"))\n  let ids = []\n  for (let i=0; i<users.length; i++){\n    if(users[i].memory==1){\n      ids.push(users[i].id)\n    }\n  }\n  return ids\n}\n// set user session\nexport const setUserSession = (user) => {\n  sessionStorage.setItem('token', user.id);\n  for (let i = 0; i < userAttributes.length; i++){\n    sessionStorage.setItem(userAttributes[i], user[userAttributes[i]]);\n  }\n  setOrdersList(user.id)\n  setCustomersList(user.id)\n}\nexport const setOrdersList = (token) => {\n  new Promise((resolve,reject) => {\n    getOrders(token, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      console.log(list)\n      sessionStorage.setItem('orders', JSON.stringify(list.Items));\n    }\n    else{\n      sessionStorage.setItem('orders', '[]');\n    }\n    \n  })\n  \n  \n}\nexport const setCustomersList = (token) => {\n  new Promise((resolve,reject) => {\n    getCustomers(token, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      console.log(\"here\")\n      console.log(list)\n      sessionStorage.setItem('customers', JSON.stringify(list.Items));\n    }\n    else{\n      console.log(\"empty\")\n      sessionStorage.setItem('customers', '[]');\n    }\n    \n  })\n  \n  \n}\nexport const updateOrderList = (token,rawdata) => {\n  console.log(rawdata)\n  new Promise((resolve,reject) => {\n    setOrders(rawdata, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      setOrdersList(token)\n      console.log(list)\n    }\n    else{\n      alert(\"Une erreur est survenue. Veuillez réessayer ultérieurement.\")\n    }\n    \n  })\n  \n  \n}\nexport const updateCustomersList = (token,rawdata) => {\n  new Promise((resolve,reject) => {\n    setCustomers(rawdata, resolve, reject)\n  }).then((list) =>{\n    if(list){\n      setCustomersList(token)\n    }\n    else{\n      alert(\"Une erreur est survenue. Veuillez réessayer ultérieurement.\")\n    }\n    \n  })\n  \n  \n}\nexport const getOrderslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"orders\"))\n  let items = []\n  for (let i=0; i<list.length; i++){\n    if(list[i].memory==1){\n      items.push(list[i])\n    }\n  }\n    return (JSON.stringify(items))\n}\nexport const getCustomerslist = () => {\n  const list = JSON.parse(sessionStorage.getItem(\"customers\"))\n  let items = []\n  for (let i=0; i<list.length; i++){\n    if(list[i].memory==1){\n      items.push(list[i])\n    }\n  }\n    return (JSON.stringify(items))\n}\nexport const getUserPlan = () => {\n  return (sessionStorage.getItem(\"plan\"))\n}\n\nexport const getUserSession = () => {\n  const userInfo = []\n  for (let i = 0; i < userAttributes.length-1; i++){\n    if(!sessionStorage.getItem(userAttributes[i])){\n      return null\n    }\n    userInfo.push(sessionStorage.getItem(userAttributes[i]))\n    \n  }\n  const retVal = [userAttributes.slice(0, 13),userInfo]\n  return retVal\n}",
    "\nimport {getToken} from '../../api/Common';\nimport {useHistory} from \"react-router-dom\";\nimport {Button} from 'react-bootstrap';\nfunction Profile() {\n\tlet history = useHistory();\n\t// handle click event of logout button\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n    //const userInfo = getUserSession()\n    //console.log(userInfo)\n\treturn(\n        <div className=\"container rounded bg-white mt-5 mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-3 border-right\">\n                    <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\n                        <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\n                    </div>\n                </div>\n                <div className=\"col-md-5 border-right\">\n                    <div className=\"p-3 py-5\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                            <h4 className=\"text-right\">Profile Settings</h4>\n                        </div>\n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-6\"><label className=\"labels\">Nom</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"first name\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-6\"><label className=\"labels\">Prénom</label>\n                                <input type=\"text\" className=\"form-control\" value=\"\" placeholder=\"surname\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Adresse mail</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Société</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Programme</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter email id\" value=\"\"/>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-12\"><label className=\"labels\">Numéro de téléphone</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter phone number\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Adresse</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 1\" value=\"\"/>\n\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Complément d&#39;adresse</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n\n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Code postal</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n                                \n                            </div>\n                            <div className=\"col-md-12\">\n                                <label className=\"labels\">Ville</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"enter address line 2\" value=\"\"/>\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <label className=\"labels\">Pays</label>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"country\" value=\"\"/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <label className=\"labels\">État</label>\n                                <input type=\"text\" className=\"form-control\" value=\"\" placeholder=\"state\"/>\n                            </div>\n                        </div>\n                        <div className=\"mt-5 text-center\">\n                            <button className=\"btn btn-primary profile-button\" type=\"button\">Sauvegarder</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"p-3 py-5\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 text-right\"\n                                style={{ textAlign: 'end'}}\n                            >\n                                <Button variant=\"primary\" size=\"lg\">Modifier</Button>\n                            </div>\n                            <div className=\"col-md-6\"\n                                style={{ textAlign: 'start'}}\n                            >\n                                <Button variant=\"danger\" size=\"lg\">Supprimer</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\t);\n}\n\nexport default Profile;\n\n\n\n\n\n\n",
    "import Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport PropTypes from \"prop-types\";\nimport { Container } from 'react-bootstrap';\n\n function Breadcrumbs(props) {\n    let breadcrumbs = <></>;\n\tconst content = [];\n\n\tlet bcscript = {\n\t\t\"@context\": \"https://schema.org\",\n\t\t\"@type\": \"BreadcrumbList\",\n\t\t\"itemListElement\": []\n\t}\n\tlet crumbs_list = \n\t\t{\n\t\t\t\"@type\": \"ListItem\",\n\t\t\t\"position\": 0,\n\t\t\t\"name\": \"\",\n\t\t\t\"item\": \"\"\n\t\t}\n\t\t\n\t\tfor (let index = 0 ; index <  props.crumbs.length; index++ ) {\n\t\t\tconst crumb = props.crumbs[index]\n\t\t\tcrumbs_list[\"position\"] = index\n\t\t\tcrumbs_list[\"name\"] = crumb[1]\n\t\t\tcrumbs_list[\"item\"] = \"https://www.calirextn.com\" + crumb[0]\n\t\t\tbcscript.itemListElement.push(crumbs_list);\n\t\t\tconst crumb_item = (\t\t\t\n\t\t\t\t<Breadcrumb.Item className={props.invertedText ? \"is-white\" : false } active={index === props.crumbs.length-1 ? true : false } href={crumbs_list[\"item\"]}>\n\t\t\t\t\t{crumbs_list[\"name\"]}\n\t\t\t\t</Breadcrumb.Item>\n\n\t\t\t);\n\t\t\tcontent.push(crumb_item);\n\t\t\t\n\t\t}\n\t\tconst script_content = JSON.stringify(bcscript)\n\t\tconsole.log(script_content)\n\t\tbreadcrumbs = (\n\t\t\t<>\n\t\t\t<Container>\n\t\t\t<Breadcrumb>\n\t\t\t\t{content}\n\t\t\t</Breadcrumb>\n\t\t\t</Container>\n\t\t\t</>\n\t\t) \n\t\n\n\treturn (\n\t\t<>\n\t\t\t{breadcrumbs}\n\t\t\t<script type=\"application/ld+json\" dangerouslySetInnerHTML={{__html: script_content}}></script>\n\t\t</>\n\t);\n}\n\nBreadcrumbs.propTypes = {\n\tcrumbs: PropTypes.array,\n\tinvertedText : PropTypes.string\n  };\nexport default Breadcrumbs\n\n\n\n\n\n\n\n",
    "\nimport {getToken,updateOrderList,updateCustomersList, getUserSession} from './Common';\nconst CryptoJS = require(\"crypto-js\");\nconst QRCode = require('qrcode.react');\nconst token = getToken()\nconst userInfo = getUserSession()\n\nexport const submitOrder = (formData, e, ordersList, dataTransfer, newUserTransfer, customersList) =>{ \n    const date = new Date()\n    formData[\"delivery_date\"] = \"\"\n    formData[\"return_date\"] = \"\"\n    formData[\"memory\"] = 1\n    formData[\"TableName\"] = token+\"orders\"\n    formData[\"status\"] = \"en attente d'enlèvement\"\n    formData[\"address\"] = \"0\"\n\n    let Clientorder_exists = 0\n    let order_exists = 0\n    if((!formData[\"client_id\"])&&(formData.addClient)){\n      newUserTransfer= submitCustomer (formData.addClient[0], e, customersList,newUserTransfer)\n      let userTransferObject = JSON.parse(newUserTransfer)\n      formData[\"client_id\"] = userTransferObject.id\n\n      console.log(formData)\n      console.log(typeof(formData) )\n    }\n    const oldData = JSON.parse(\"[\"+dataTransfer+\"]\")\n    let local_Clientorder_exists = false\n    for(let i=0; i<oldData.length;i++){\n\n        if(oldData[i][\"client_id\"]===formData[\"client_id\"]){\n          local_Clientorder_exists = 1\n          oldData[i][\"package_number\"] = parseInt(oldData[i][\"package_number\"]) + parseInt(formData[\"package_number\"])\n          oldData[i][\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(oldData[i][\"weight_g\"])\n          oldData[i][\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(oldData[i][\"price_base\"])\n        }\n         \n    }\n    console.log(oldData.length)\n    console.log(ordersList.length)\n\n    for(let i=0; i<ordersList.length;i++){\n      console.log(formData)\n\n      if(ordersList[i][\"status\"]===\"en attente d'enlèvement\"){\n        order_exists = i+1\n        formData[\"id\"] = ordersList[i][\"id\"]\n        if(ordersList[i][\"client_id\"]===formData[\"client_id\"]){\n          Clientorder_exists = i+1\n        }\n      }\n\n      if(i===ordersList.length-1){\n        \n        if (oldData.length===0){\n          if(order_exists){\n            formData[\"order_id\"] = ordersList[order_exists-1][\"order_id\"]\n            console.log(' formData[\"order_id\"]')\n            console.log( formData[\"order_id\"])\n          }else{\n            formData[\"order_id\"] = \"CTO-\"+ Date.now()\n            console.log(\" order doesn't exist\")\n          }\n          if (Clientorder_exists){\n            console.log(\"client order exist\")\n            formData[\"id\"] = ordersList[Clientorder_exists-1][\"id\"]\n            formData[\"package_number\"] = parseInt(ordersList[Clientorder_exists-1][\"package_number\"]) + parseInt(formData[\"package_number\"])\n            formData[\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(ordersList[Clientorder_exists-1][\"weight_g\"])\n            formData[\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(ordersList[Clientorder_exists-1][\"price_base\"])\n            formData[\"creation_date\"] = ordersList[Clientorder_exists-1][\"creation_date\"]\n          }else{\n            formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n            formData[\"id\"] = \"CTP-\"+ Date.now()\n          }\n\n          dataTransfer =JSON.stringify(formData)\n        }else{\n          if (local_Clientorder_exists){\n            dataTransfer = JSON.stringify(oldData)\n          }else{\n            if (Clientorder_exists){\n              formData[\"order_id\"] = ordersList[order_exists][\"order_id\"]\n              formData[\"id\"] = ordersList[Clientorder_exists-1][\"id\"]\n              formData[\"package_number\"] = parseInt(ordersList[Clientorder_exists-1][\"package_number\"]) + parseInt(formData[\"package_number\"])\n              formData[\"weight_g\"] = parseInt(formData[\"weight_g\"]) + parseInt(ordersList[Clientorder_exists-1][\"weight_g\"])\n              formData[\"price_base\"] = parseInt(formData[\"price_base\"]) + parseInt(ordersList[Clientorder_exists-1][\"price_base\"])\n              formData[\"creation_date\"] = ordersList[Clientorder_exists-1][\"creation_date\"]\n            }else{\n              formData[\"order_id\"] = oldData[0][\"order_id\"]\n              formData[\"id\"] = \"CTP-\"+ Date.now()\n              formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n              \n            }\n            dataTransfer =dataTransfer +\",\"+ JSON.stringify(formData)\n          }\n        }\n\n\n      }\n    }\n    if (ordersList.length === 0){\n      if (local_Clientorder_exists){\n        dataTransfer = JSON.stringify(oldData)\n      }else{\n        formData[\"id\"] = \"CTP-\"+ Date.now()\n        formData[\"creation_date\"] = date.toISOString().split('T')[0].replace(/-/g,'/');\n        if (oldData.length===0){\n          formData[\"order_id\"] = \"CTO-\"+ Date.now()\n          dataTransfer =JSON.stringify(formData)\n        }else{\n          formData[\"order_id\"] = oldData[0][\"order_id\"]\n          dataTransfer =dataTransfer +\",\"+ JSON.stringify(formData)\n        }\n      }\n    }\n    return [dataTransfer,newUserTransfer]\n    \n  }\nexport  const submitCustomer = (formData, e, customersList,dataTransfer) =>{ \n    formData[\"memory\"] = 1\n    formData[\"TableName\"] = token+\"customers\"\n    formData[\"country_code\"] = \"+216\"\n    console.log(formData)\n    console.log(customersList)\n    let userExists = false\n    for(let i=0; i<customersList.length;i++){\n      if(customersList[i][\"email\"]===formData[\"memory\"] ){\n        userExists = i\n        alert(\"Ce client a déjà été créé\")\n      }\n    }\n    if(!userExists){\n      formData[\"id\"] =  \"CTCID-\"+ Date.now()\n      console.log(formData[0])\n      console.log(dataTransfer)\n      dataTransfer =dataTransfer +(dataTransfer===\"\" ?\"\":\",\") + JSON.stringify(formData)\n      console.log(JSON.stringify(formData))\n      \n    }\n    Object.keys(formData).map(function(key, index) {\n      formData[key] = \"\";\n    });\n    console.log(e)\n    console.log(dataTransfer)\n    return dataTransfer\n  }\n\n  export const generateBill = (selectedItems,products, inputList, setInputList,customersList)=>{\n\n    console.log(\"userInfo[0]\")\n    console.log(userInfo)\n    let newImputList = []\n    console.log(products)\n    for (let select of selectedItems) {\n        let date = new Date() \n        let today = date.toISOString().split('T')[0].replace(/-/g,'/');\n        let weight =  products[select-1][\"total_weight\"]\n        let order =  products[select-1][\"order_id\"]\n        let nb_colis = products[select-1][\"package_number\"]\n        let text = token + products[select-1][\"id\"]+ products[select-1][\"order_id\"]\n        let ciphertext = CryptoJS.AES.encrypt(text, '-tracking-number-').toString();\n        let raw_product_price = (products[select-1][\"total_price\"]*0.93).toFixed(3)\n        let tva_product_price = (products[select-1][\"total_price\"]*0.07).toFixed(3)\n        let product_price = products[select-1][\"total_price\"]\n        let raw_delivery_price = ((products[select-1][\"price_delivery\"])*0.93).toFixed(3)\n        let tva_delivery_price = ((products[select-1][\"price_delivery\"])*0.07).toFixed(3)\n        let delivery_price = (products[select-1][\"price_delivery\"])\n        let raw_custom_delivery_price = ((products[select-1][\"delivery_price\"])*0.93).toFixed(3)\n        let tva_custom_delivery_price = ((products[select-1][\"delivery_price\"])*0.07).toFixed(3)\n        let custom_delivery_price = (products[select-1][\"delivery_price\"])\n        let raw_total_price = Number(raw_product_price) + Number((!isNaN(raw_delivery_price))? raw_delivery_price : 0) + Number((!isNaN(raw_custom_delivery_price))? raw_custom_delivery_price : 0) \n        let tva_total_price = Number(tva_product_price) + Number((!isNaN(tva_delivery_price))? tva_delivery_price : 0) + Number((!isNaN(tva_custom_delivery_price))? tva_custom_delivery_price : 0) \n        let total_price = product_price + Number((!isNaN(delivery_price))? delivery_price : 0) + Number((!isNaN(custom_delivery_price))? custom_delivery_price : 0) \n        //log encrypted data\n            let Input = () => {\n                return <>\n                        <div className=\"page-break\" />\n                        <table className=\"table table-bordered has-background-white\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">\n\n                                <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                            </th>\n                            <th scope=\"col\">\n                                <p className='is-size-9'>Societé de livraison: <u>Calirex Tunisie</u>\n                                <br/><u>Site Web: </u>https://www.calirextn.com/\n                                <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                                <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                                <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                            </th>\n                            <th>\n                              Date: {today}\n                              <br/>\n                              Manifest {order}\n                            </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <td colSpan={2}> <b>Société: {userInfo[1][1]}</b>\n                                <br/>Adresse: {userInfo[1][4]}, {userInfo[1][9]}, {userInfo[1][8]}, {userInfo[1][7]}\n                                <br/>Numéro de téléphone: ({userInfo[1][11]}) {userInfo[1][2]}\n                            </td>\n                            <td>\n\n                            </td>\n                            </tr>\n\n                            <tr>\n                            <td><u>Prix du produit:</u> {product_price} \n                              <br/>prix(HT): {raw_product_price} TND\n                                <br/>TVA(7%): {tva_product_price} TND\n                                <br/>prix(TTC): {product_price} TND\n                                <br/>\n                                    <b>Prix de la livraison:</b>\n                                <br/>prix(HT): {raw_delivery_price} TND\n                                <br/>TVA(7%): {tva_delivery_price} TND\n                                <br/>prix(TTC): {delivery_price} TND\n                                <br/>\n                                  \n                                <b>Total à payer:</b>\n                                <br/>prix(HT): {raw_total_price} TND\n                                <br/>TVA(7%): {tva_total_price} TND\n                                <br/>prix(TTC): {total_price} TND\n                                <br/><u>Poids:</u> {weight} grammes\n                                <br/><u>Nombre de colis:</u> {nb_colis}\n                            </td>\n                            <td>\n                                Signature Calirex Tunisie: \n                            </td>\n                            <td>\n                                Signature {userInfo[1][1]} \n                            </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>;\n            };\n\n            newImputList.push(<Input />)\n        \n    }\n    setInputList(newImputList);\n}\nexport const generateDeliverySlip = (selectedItems,products, inputList, setInputList,customersList)=>{\n    if(selectedItems.length>0){\n      console.log(\"userInfo[0]\")\n      console.log(userInfo[0])\n      let newImputList = []\n      let nb_slip =1\n      let global_price =0\n      let global_weight =0\n      let global_delivery =0\n      let global_total =0\n      let order =products[selectedItems[0]-1]['order_id']\n      let global_packages =0\n      let date = new Date() \n      let today = date.toISOString().split('T')[0].replace(/-/g,'/');\n\n      for (let select of selectedItems) {\n        let weight =  products[select-1][\"weight_g\"]\n        let nb_colis = products[select-1][\"package_number\"]\n        let text = token + products[select-1][\"id\"]+ products[select-1][\"order_id\"]\n        let ciphertext = CryptoJS.AES.encrypt(text, '-tracking-number-').toString();\n        let qrcode = \"https://calirextn.com/tracking?tracking_number=\"+ciphertext\n        //let raw_delivery_price = ((products[select-1][\"price_delivery\"])*0.93).toFixed(3)\n        //let tva_delivery_price = ((products[select-1][\"price_delivery\"])*0.07).toFixed(3)\n        let delivery_price = (products[select-1][\"base_price_delivery\"])\n        //let raw_custom_delivery_price = ((products[select-1][\"delivery_price\"])*0.93).toFixed(3)\n        //let tva_custom_delivery_price = ((products[select-1][\"delivery_price\"])*0.07).toFixed(3)\n        let custom_delivery_price = (products[select-1][\"delivery_price\"])\n        //let raw_product_price = (products[select-1][\"price_base\"]*0.93).toFixed(3)\n        //let tva_product_price = (products[select-1][\"price_base\"]*0.07).toFixed(3)\n        let product_price = products[select-1][\"price_base\"] - ((!isNaN(custom_delivery_price))? Number((!isNaN(delivery_price))? delivery_price : 0):0)\n        //let raw_total_price = Number(raw_product_price) + Number((!isNaN(raw_delivery_price))? raw_delivery_price : 0) + Number((!isNaN(raw_custom_delivery_price))? raw_custom_delivery_price : 0) \n        //let tva_total_price = Number(tva_product_price) + Number((!isNaN(tva_delivery_price))? tva_delivery_price : 0) + Number((!isNaN(tva_custom_delivery_price))? tva_custom_delivery_price : 0) \n        let total_price = Number(product_price) + Number((!isNaN(delivery_price))? delivery_price : 0) + Number((!isNaN(custom_delivery_price))? custom_delivery_price : 0) \n        let client\n        let address\n        let number\n        let email\n        console.log(customersList)\n        for(let j=0; j<customersList.length; j++){\n            console.log(customersList[j][\"id\"])\n            if(customersList[j][\"id\"]==products[select-1][\"client_id\"]){\n                client = customersList[j][\"firstname\"] + \" \" + customersList[j][\"name\"]\n                address = customersList[j][\"address\"] + \", \"+customersList[j][\"state\"] + \", \"+customersList[j][\"postal_code\"] \n                number = customersList[j][\"country_code\"] + \" \" + customersList[j][\"phone\"]\n                email = customersList[j][\"email\"]\n            }\n        }\n        //log encrypted data\n        global_packages= global_packages + Number(nb_colis)\n        global_total= global_total + Number(total_price)\n        global_delivery= global_delivery + Number(delivery_price)\n        global_weight= global_weight + (weight?Number(weight):0)\n        global_price= global_price + Number(product_price) + Number((!isNaN(custom_delivery_price))? custom_delivery_price : 0) \n        for(let num_colis=1; num_colis<=nb_colis; num_colis++){\n            let is_even = ((nb_slip % 2)<1)\n            let pageBreak = is_even\n            let Input = () => {\n                return <>\n                  {pageBreak\n                    ?<p style={{pageBreakBefore: 'always'}}></p>\n                    :<></>\n                  }\n                        <table className=\"table table-bordered has-background-white\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">\n\n                                <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                            </th>\n                            <th scope=\"col\">\n                                <p className='is-size-9'>Calirex Tunisie\n                                <br/><u>Site Web: </u>https://www.calirextn.com/\n                                <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                                <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                                <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                            </th>\n                            <th scope=\"col\"><QRCode value={qrcode} /></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <td colSpan={2}><b>Destinataire</b>\n                                <br/>Nom: {client}\n                                <br/>Adresse: {address}\n                                <br/>tél: {number}\n                                <br/>e-mail: {email}\n                            </td>\n                            <td> <b>Expéditeur</b>\n                                <br/>Société: {userInfo[1][1]}\n                                <br/>Adresse: {userInfo[1][4]}, {userInfo[1][9]}, {userInfo[1][8]}, {userInfo[1][7]}\n                                <br/>tél: ({userInfo[1][11]}) {userInfo[1][2]}\n                            </td>\n                            </tr>\n\n                            <tr>\n                            <td colSpan={2}>                               \n                                <u>Total à payer:</u>\n                                <br/>prix(TTC): {total_price} TND\n                                    \n                            </td>\n                            <td>\n                              <u>Poids:</u> {weight} grammes\n                              <br/><u>Nombre de colis:</u> {num_colis}/{nb_colis}\n                            </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>;\n            };\n\n            newImputList.push(<Input />)\n            nb_slip++\n            \n        }\n      }\n      let Bill = () => {\n          return <>\n                  \n                  <p style={{pageBreakBefore: 'always'}} className=\"has-text-centered is-bold is-size-18\">Manifest</p>\n                  <div className=\"page-break\" />\n                  <table className=\"table table-bordered has-background-white\">\n                  <thead>\n                      <tr>\n                      <th scope=\"col\">\n\n                          <img alt=\"\" src=\"https://calirextn.com/assets/images/logo-ct.svg\" width=\"130px\" />\n                      </th>\n                      <th scope=\"col\">\n                          <p className='is-size-9'>Societé de livraison: <u>Calirex Tunisie</u>\n                          <br/><u>Site Web: </u>https://www.calirextn.com/\n                          <br/><u>Adresse: </u>7 Avenue habib bourguiba, Mornaguia,<br/> Manouba 1110, Tunisie\n                          <br/><u>Numéro de téléphone: </u> (+216) 50 873 992\n                          <br/><u>Matricule fiscal: </u>1726761/C</p>\n\n                      </th>\n                      <th>\n                        Date: {today}\n                        <br/>\n                        Manifest {order}\n                      </th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr>\n                      <td colSpan={2}> <b>Société: {userInfo[1][1]}</b>\n                          <br/>Adresse: {userInfo[1][4]}, {userInfo[1][9]}, {userInfo[1][8]}, {userInfo[1][7]}\n                          <br/>Numéro de téléphone: ({userInfo[1][11]}) {userInfo[1][2]}\n                      </td>\n                      <td>\n\n                      </td>\n                      </tr>\n\n                      <tr>\n                      <td><u><b>Prix du produit:</b> </u>\n                          {global_price} TND\n                          <br/>\n                              <b>Prix de la livraison:</b>{global_delivery} TND\n                          <br/>\n                            \n                          <b>Total à payer:</b> {global_total} TND\n                          <br/><u>Poids:</u> {global_weight} grammes\n                          <br/><u>Nombre de colis:</u> {global_packages}\n                      </td>\n                      <td>\n                          Signature Calirex Tunisie: \n                      </td>\n                      <td>\n                          Signature {userInfo[1][1]} \n                      </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </>;\n      };\n      newImputList.push(<Bill />)\n      setInputList(newImputList);\n    }\n}\n\nexport \tconst SaveData= (items,products,onSubmit) =>{\n    let data = []\n    items.forEach(element => {\n        console.log(element)\n        data.push(products[element-1])\n        if (onSubmit=== \"orders\"){\n            data[data.length-1][\"TableName\"] = token+\"orders\"\n        }\n        if (onSubmit === \"customers\"){\n            data[data.length-1][\"TableName\"] = token+\"customers\"\n        }\n    });\n    const dataTransfer = JSON.stringify(data)\n    if (onSubmit === \"orders\"){\n        console.log(items)\n        console.log(products)\n        console.log(data)\n        updateOrderList(token, '{\"data\":'+dataTransfer+'}' )\n    }\n    if (onSubmit === \"customers\"){\n        updateCustomersList(token, '{\"data\":'+dataTransfer+'}' )\n    }\n}",
    "import React, {useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport {submitOrder,submitCustomer} from '../../api/DataManager';\nimport {getToken, getCustomerslist, getOrderslist, updateOrderList , updateCustomersList}  from '../../api/Common';\nimport Form from \"@rjsf/core\";\nfunction PopupForm(props) {   \n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setShow(false);\n  }\n  const orderHandleSave = () => {\n    updateOrderList(token, '{\"data\":['+dataTransfer+']}' )\n    if(newUserTransfer!=\"\"){\n      updateCustomersList(token, '{\"data\":['+newUserTransfer+']}' )\n    }\n    setShow(false);\n  }\n  const customerHandleSave = () => {\n    updateCustomersList(token, '{\"data\":['+dataTransfer+']}' )\n    setShow(false);\n  }\n  console.log(\"props.onSubmitFunction\" )\n  console.log(props.onSubmitFunction )\n\n  const customersList = JSON.parse(getCustomerslist())\n  const ordersList = JSON.parse(getOrderslist())\n  const token = getToken()\n  const handleShow = () => setShow(true);\n  const schema = {\n    title: \"Veuillez remplir le formulaire\",\n    type: \"object\",\n    required: Object.keys(props.requiredFields),\n    properties: props.schema,\n    definitions: props.additionalProperties\n  }\n  const uiSchema = {\n    \"ui:options\":  {\n      \"expandable\": true\n    }\n  };\n  let dataTransfer = \"\"\n  let newUserTransfer = \"\"\n  const onSubmitOrder = ({formData}, e) =>{ \n    let transfer = submitOrder(formData, e, ordersList, dataTransfer, newUserTransfer, customersList)\n    newUserTransfer = transfer[1]\n    dataTransfer = transfer[0]\n  }\n  const onSubmitCustomer = ({formData}, e) =>{ \n    dataTransfer = submitCustomer (formData, e, customersList,dataTransfer)\n    document.getElementById(\"submit-form\").reset();\n  }\n  let onSubmit\n  let handleSave\n  if (props.onSubmitFunction === \"orders\"){\n    onSubmit = onSubmitOrder\n    handleSave = orderHandleSave\n  }\n  if (props.onSubmitFunction === \"customers\"){\n    onSubmit = onSubmitCustomer\n    handleSave = customerHandleSave\n  }\n    return (\n        <> \n          <Button variant={props.color} className=\" btn-card btn-lg\" onClick={handleShow}>{props.buttonTitle}</Button>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>{props.modalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> \n            <Form schema={schema} formData={\"\"} onSubmit={onSubmit} id=\"submit-form\">\n            <Button variant=\"secondary\" type=\"submit\" >\n                Confirmer et ajouter\n              </Button>\n              </Form>\n\n        </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={handleSave}>\n                Sauvgarder\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>  \n    );\n}\nPopupForm.propTypes = {\n  modalTitle: PropTypes.string,\n  onSubmitFunction: PropTypes.string,\n  schema: PropTypes.array,\n  requiredFields: PropTypes.array,\n  additionalProperties: PropTypes.array,\n  color: PropTypes.string,\n  buttonTitle: PropTypes.string\n};\n\nexport default PopupForm;\n",
    "import React, { useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport PropTypes from \"prop-types\";\nexport default function PrintComponent(props) {\n  let componentRef = useRef();\n\n  return (\n    <>\n      <div >\n        {/* button to trigger printing of target component */}\n        <ReactToPrint\n          trigger={() => <div className=\"p-3\"><Button className={props.printButton? \"\":\"is-hidden\"}>Imprimer</Button></div>}\n          content={() => componentRef}\n        />\n\n        {/* component to be printed */}\n        <div className=\"to-print\" ref={(el) => (componentRef = el)} >\n          <style type=\"text/css\" media=\"print\">{\"@page { size: A4 ; pageBreakBefore: 'always'}\"}</style>\n          {props.componentToPrint}\n        </div>\n      </div>\n    </>\n  );\n}\n\nPrintComponent.propTypes = {\n    componentToPrint: PropTypes.any,\n    printButton: PropTypes.any\n  };\n  ",
    "import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faClipboardList } from '@fortawesome/free-solid-svg-icons'\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport PopupForm from '../popupform/PopupForm';\nimport {Helmet} from \"react-helmet\";\nimport {Container, Button,Modal} from 'react-bootstrap';\nimport {getToken,getCustomerslist} from '../../api/Common';\nimport {generateDeliverySlip,SaveData,generateBill} from '../../api/DataManager';\nimport PrintComponent from '../../components/printComponent/PrintComponent';\nimport {useHistory} from \"react-router-dom\";\n\nfunction Table(props) {\n\tconst { SearchBar } = Search;\n\tconst { ToggleList } = ColumnToggle;\n\tlet history = useHistory();\n\t// handle click event of logout button\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n\tconst [show, setShow] = useState(false);\n\tconst handleShow = () => {\n\t\tconfirmDelete()\n\t\tsetShow(true);\n\t}\n\tconst handleClose = () => {\n\t\tsetShow(false);\n\t\t}\n\tconst customersList = JSON.parse(getCustomerslist())\n\tconst css = `\n\t\t.App {\n\t\t\tbackground: url('https://calirextn.com/assets/images/loading-background-light.svg');\n\t\t\tbackground-position: bottom right;\n\t\t\tbackground-size: cover;\n\t\t\tbackground-repeat: no-repeat;\n\t\t}\n\t\t`\n\tconst customFormats = props.customFormats \n\tconst onSubmit = props.onSubmitFunction \n\tconst products = props.data\n\tlet modifiedItems = []\n\tconst columns = props.columns\n\tconst custoColumns = props.togglecolumns\n\tconst title = props.title\n\tconst [inputList, setInputList] = useState([]);\n\tconst [selectedItems, setSelectedItems] = useState([]);\n\tconst [printButton, setPrintButton] = useState(false);\n\tconst [alertDelete, setAlertDelete] = useState(\"Voulez-vous supprimer ces éléments\");\n\tcolumns.forEach(element => {\n\t\telement.filter=textFilter({placeholder:\"...\"})\n\t});\n\tconst generatePdf = () =>{\n\t\tconsole.log(selectedItems)\n\t\tif(selectedItems.length>0){\n\t\tgenerateDeliverySlip(selectedItems,products,inputList, setInputList,customersList)\n\t\tsetPrintButton(true)\n\t\t}\n\t} \n\tconst generateBillPdf = () =>{\n\t\tconsole.log(selectedItems)\n\t\tgenerateBill(selectedItems,products,inputList, setInputList,customersList)\n\t\tsetPrintButton(true)\n\t} \n\tconst handleOnSelect = (row, isSelect) => {\n\t\tlet item = 0\n\t\tconsole.log(row)\n\t\tconsole.log(isSelect)\n\t\tfor (let i=0; i<products.length; i++){\n\t\t\tif (products[i].id===row.id){\n\t\t\t\titem = i+1\n\t\t\t\tconsole.log(item)\n\t\t\t}\n\t\t}\n\t\tif (isSelect) {\t\t\t\n\t\t\tsetSelectedItems(selectedItems.concat(item))\n\t\t\tconsole.log(selectedItems)\n\t\t\tconsole.log('selected')\n\t\t}else{\n\t\t\tsetSelectedItems(selectedItems.filter(i => i !== item))\n\t\t}\n\t\tconsole.log(selectedItems)\n\t\treturn true; // return true or dont return to approve current select action\n\t}\n\tconst handleMultipleOnSelect = async (row) => {\n\t\tlet item = 0\n\t\tconsole.log(row)\n\t\tfor (let i=0; i<products.length; i++){\n\t\t\tif (products[i].id===row.id){\n\t\t\t\titem = i+1\n\t\t\t\tconsole.log(item)\n\t\t\t}\n\t\t}\n\t\treturn item\n\t}\n\n\tconst handleOnSelectAll = async (isSelect, rows) => {\n\t\t\tPromise.all(rows.map(async (row) => { \n\t\t\t\treturn await handleMultipleOnSelect(row)\n\t\t\t})).then((ret)=>{\n\t\t\t\tif(isSelect){\n\t\t\t\t\tsetSelectedItems(selectedItems.concat(ret))\n\t\t\t\t}else{\n\t\t\t\t\tsetSelectedItems(selectedItems.filter(i => !ret.includes(i)))\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t}\n\n\n\n\tconst modifyItems = () =>{\n\t\tSaveData (modifiedItems,products,onSubmit)\n\t}\n\tconst confirmDelete = ()=>{\n\t\tlet warning = \"\"\n\t\tlet msg = \"\"\n\t\tselectedItems.forEach(index => {\n\t\t\tif(products[index-1][\"ongoing_orders\"]==0 ||  products[index-1][\"status\"]==\"terminé\"||products[index-1][\"status\"]==\"en attente d'enlèvement\"){\n\t\t\t\tproducts[index-1][\"memory\"] = 0\n\t\t\t\tmsg = msg +(msg!=\"\"?\", \":\"\") + products[index-1][\"id\"]\n\t\t\t}else{\n\t\t\t\twarning = warning +(warning!=\"\"?\", \":\"\") + products[index-1][\"id\"]\n\t\t\t}\n\t\t\tif (warning ==\"\"){\n\t\t\t\tsetAlertDelete(alertDelete + \": \"+ msg)\n\t\t\t}else{\n\t\t\t\tsetAlertDelete(\"Ces éléments ne peuvent pas être supprimés\" + \": \"+ warning+\". Voulez-vous supprimer les éléments suivants: \"+msg)\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\n\tconst deleteItems = () =>{\n\t\tsetAlertDelete(\"Voulez-vous supprimer ces éléments\")\n\t\tconsole.log(selectedItems)\n\t\tSaveData (selectedItems,products,onSubmit)\n\t\thandleClose()\n\t}\n\n\tconst beforeSaveCell= (oldValue, newValue, row, column, done) =>{\n\t\tfor (let i=0; i<products.length;i++){\n\t\t\tif(products[i].id === row.id){\n\t\t\t\tproducts[i][column[\"dataField\"]]= newValue\n\t\t\t\tfor (let j=0; j<modifiedItems.length;j++){\n\t\t\t\t\tif(modifiedItems[j]=== (i+1)){\n\t\t\t\t\t\tconsole.log(modifiedItems)\n\t\t\t\t\t\tdone(true);\n\t\t\t\t\t\treturn { async: true };\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(modifiedItems)\n\t\t\t\t}\n\t\t\t\tmodifiedItems.push(i+1)\n\t\t\t\tconsole.log(modifiedItems)\n\t\t\t}\n\t\t}\n\t\tconsole.log(modifiedItems)\n\t\tdone(true);\n\t\treturn { async: true };\n\t}\n\tconst CustomToggleList = ({\n\n\t\tonColumnToggle,\n\t\ttoggles\n\t\t}) => (\n\t\t<div className=\"btn-group btn-group-toggle btn-group-vertical\" style={{ flexDirection: 'row' }} data-toggle=\"buttons\">\n\t\t\t{\n\t\t\tcustoColumns\n\t\t\t\t.map(column => ({\n\t\t\t\t...column,\n\t\t\t\ttoggle: toggles[column.dataField]\n\t\t\t\t}))\n\t\t\t\t.map(column => (\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ maxWidth: '200px',marginRight: '0.5rem !important',borderRadius: '0.3rem', height: '100%'}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvariant=\"outline-primary\"\n\t\t\t\t\tkey={ column.dataField }\n\t\t\t\t\tclassName={ `toggle-button ${column.toggle ? 'active' : ''}` }\n\t\t\t\t\tdata-toggle=\"button\"\n\t\t\t\t\taria-pressed={ column.toggle ? 'true' : 'false' }\n\t\t\t\t\tonClick={ () => onColumnToggle(column.dataField) }\n\t\t\t\t>\n\t\t\t\t\t{ column.text }\n\t\t\t\t</Button>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t\t);\t\n\tconst selectRow = {\n\t\tmode: 'checkbox',\n\t\tclickToSelect: true,\n\t\tclickToEdit: true,\n\t\tonSelect: handleOnSelect,\n\t\tonSelectAll: handleOnSelectAll\n\t};\n\tconst cellEdit = {\n\t\tmode: 'click',\n\t\tbeforeSaveCell\n\t};\n\tconst actions = props.actions\n\tconst searchloop = (<FontAwesomeIcon icon={faSearch} />);\n\tconst titleIcon = (<FontAwesomeIcon icon={faClipboardList} />);\n\tconst modalSchema = props.schema\n\tconst test = props.columnToggleProps\n\tconsole.log(test)\n\tconst requiredFields = props.requiredFields\n\tconst additionalProperties = props.additionalProperties\n\treturn (\n\t\t<>\n\t\t<Helmet>\n\t\t\t<style>{css}</style>\n\t\t</Helmet>\n\t\t<Container className='p-5 info-table'>\t\t\n\t\t\t<ToolkitProvider\n\t\t\t\tbootstrap4\n\t\t\t\tkeyField={columns[0][\"dataField\"]}\n\t\t\t\tclassName='bootstrap-data-table' \n\t\t\t\tdata={ products } \n\t\t\t\tcolumns={ columns } \n\t\t\t\tcolumnToggle\n\t\t\t\tplaceholder= \"\"\n\t\t\t\tsearch\n\t\t\t>\n\t\t\t{\n\t\t\t\t(props) => (\n\t\t\t\t\t\n\t\t\t\t<div\t>\n\t\t\t\t\t<h3>{titleIcon}{title}</h3>\n\t\t\t\t\t{searchloop}\n\t\t\t\t\t\n\t\t\t\t\t<SearchBar { ...props.searchProps } placeholder='Recherche ...' />\n\t\t\t\t\t<div className=\"row p-3\">\n\t\t\t\t\t\t<p className=\"is-size-11 has-text-centered\"><b>Afficher/Cacher le(s) colonne(s)</b></p>\n\t\t\t\t\t<CustomToggleList { ...props.columnToggleProps } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col p-2 has-text-centered-mobile'\n\t\t\t\t\t\tstyle={{ textAlign: 'start'}}>\n\t\t\t\t\t\t{actions.includes(\"generate\")\n\t\t\t\t\t\t\t?<><Button variant=\"outline-primary\" size=\"lg\" onClick={generatePdf}>Générer le(s) bordereau(x)</Button>{' '}</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{actions.includes(\"bill\")\n\t\t\t\t\t\t\t?<><Button variant=\"outline-primary\" size=\"lg\" onClick={generateBillPdf}>Générer le(s) facture(s)</Button>{' '}</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{actions.includes(\"add\")\n\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\n\t\t\t\t\t\t\t<PopupForm schema={modalSchema} requiredFields={requiredFields} additionalProperties={additionalProperties} customFormats={customFormats}\tonSubmitFunction={onSubmit} color=\"primary\" modalTitle=\"Ajouter un element\" buttonTitle=\"+Ajouter\"></PopupForm>{' '}\n\t\t\t\t\t\t\t</div></>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{actions.includes(\"modify\")\n\t\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" size=\"lg\" onClick={modifyItems}>Modifier</Button>{' '}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{actions.includes(\"delete\")\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<div className='col-md-auto p-2 has-text-centered-mobile'\n\t\t\t\t\t\t\tstyle={{ textAlign: 'end'}}>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button variant=\"outline-danger\" size=\"lg\"onClick={handleShow}>Supprimer</Button>\n\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>Supprimer</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>{alertDelete}</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={handleClose}>\n\t\t\t\t\t\t\t\t\tAnnuler\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={deleteItems}>\n\t\t\t\t\t\t\t\t\tConfirmer\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t:<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<BootstrapTable\n\t\t\t\t\t\t{ ...props.baseProps }\n\t\t\t\t\t\tpagination={ paginationFactory() }\n\t\t\t\t\t\tfilter={ filterFactory() }\n\t\t\t\t\t\tselectRow={ selectRow }\n\t\t\t\t\t\tcellEdit={ cellEditFactory(cellEdit)}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrintComponent componentToPrint={inputList} printButton={printButton}/>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</ToolkitProvider>\n\n\t\t</Container>\n\t\t{props.crumbs_list\n\t\t\t? <Breadcrumbs crumbs ={props.crumbs_list} invertedText={false} ></Breadcrumbs>\n\t\t\t: <></>\n\t\t}\n\t\t\n\t\t</>\n\t);\n}\nTable.propTypes = {\n\t\tadditionalProperties: PropTypes.array,\n\t\trequiredFields: PropTypes.array,\n\t\tcustomFormats: PropTypes.array,\n\t\ttogglecolumns: PropTypes.array,\n\t\ttitle: PropTypes.string,\n\t\tdata: PropTypes.array,\n\t\tcolumns: PropTypes.array,\n\t\tschema: PropTypes.array,\n\t\tactions: PropTypes.array,\n\t\tcrumbs_list: PropTypes.array,\n\t\tsearchProps: PropTypes.any,\n\t\tcolumnToggleProps: PropTypes.any,\n\t\tonColumnToggle: PropTypes.any,\n\t\ttoggles: PropTypes.any,\n\t\tbaseProps: PropTypes.any,\n\t\taddItems: PropTypes.any,\n\t\tmodifyItems: PropTypes.any,\n\t\tonSubmitFunction : PropTypes.string,\n\t\tdeleteItems: PropTypes.any,\n};\n\n\nexport default Table;\n\n\n\n",
    "import Table from '../table/Table';\nimport  customerData  from '../data/orders.json';\nimport  plans  from '../data/plans.json';\nimport {getToken, getCustomerslist, getUserIds,getOrderslist,getUserPlan}  from '../../api/Common';\nimport {useHistory} from \"react-router-dom\";\nfunction Orders() {\n\tconst orders = JSON.parse(getOrderslist())\n\tconst customers = JSON.parse(getCustomerslist())\n\tconst plan = getUserPlan()\n\tlet history = useHistory();\n\tif (!getToken()){\n\t\thistory.push(\"/login\")\n\t}\n\tlet list = []\n\tfor (let i in orders){\n\t\tif(orders[i][\"memory\"]==\"1\"){\n\t\t\tlist.push(orders[i])\n\t\t\tlist[list.length-1][\"base_price_delivery\"]=(plans[plan][\"price\"]+((list[i][\"weight_g\"]>10200)?(Math.ceil((list[i][\"weight_g\"]-10200)/1000) * plans[plan][\"extra\"]):\"\"))\n\t\t}\n\n\t}\n\tlist.map((item) => { \n\t\tlet customer = customers.find(element => (element.id ===item.client_id))\n\t\tif(customer){\n\t\t\titem.state= customer.state;\n\t\t\titem.client_name = customer.firstname + \" \" +customer.name\n\t\t\titem.postal_code= customer.postal_code;\n\t\t}\n\t})\n\tlet userDescription = []\n\tfor (let i in customers){\n\t\tuserDescription.push(customers[i].firstname + \" \" +customers[i].name+ \": \" + customers[i].id)\n\n\t}\n\tconst createReciept = (data)=>{\n\t\tcreateReciept()\n\t}\n\tlet userIds = getUserIds();\n\tuserIds = [null].concat(userIds)\n\tuserDescription = [\"Selectionnez un utilisateur\"].concat(userDescription)\n\tconsole.log(userIds)\n\tconst schemaString = {\n\t\tclient_id: {\"type\": \"string\", \"title\": \"Numéro du client\", \"enum\": userIds, \"enumNames\": userDescription},\n\t\taddClient: {\n\t\t\ttype: \"array\",\n\t\t\titems: {\n\t\t\t\t$ref: \"#/definitions/Metric\"\n\t\t\t},\n\t\t\tmaxItems: 1,\n\t\t\ttitle: \"\"\n\t\t\t},\n\t\tweight_g: {\"type\": \"number\", \"title\": \"Poids en grammes\"},\n\t\tprice_base: {\"type\": \"number\", \"title\": \"Prix du produit\"},\n\t\tdelivery_price: {\"type\": \"number\", \"title\": \"Prix de livraison personnalisé\"},\n\t\tpackage_number: {\"type\": \"number\", \"title\": \"Nombre de colis\"}\n\t}\n\n\tconst definitions = {\n\t\tMetric: {\n\t\t\ttitle: \"Nouveau Client\",\n\t\t\ttype: \"object\",\n\t\t\tproperties: {\n\t\t\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\t\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\t\t\temail: {\"type\": \"string\", \"title\": \"Adresse mail\"},\n\t\t\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\t\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\t\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\t\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t\t\t},\n\t\t\trequired: [\"firstname\", \"name\", \"postal_code\", \"state\", \"address\", \"phone\"]\n\t\t},\t\t\n\t}\n\tconst requiredFields = {\n\n\t\tprice_base: {\"type\": \"number\", \"title\": \"Prix du produit\"},\n\t\tpackage_number: {\"type\": \"number\", \"title\": \"Nombre de colis\"},\n\n\t}\n\treturn(\n\t\t<>\n\t\t<Table data={list} schema={schemaString} togglecolumns={customerData[\"togglecolumns\"]} requiredFields ={requiredFields} additionalProperties={definitions} customFormats={{}}  onSubmitFunction=\"orders\" actions={customerData[\"actions\"]}  columns={customerData[\"columns\"]} title={customerData[\"title\"]} crumbs_list={customerData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Orders;\n\n\n\n",
    "import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { getUser, getToken } from '../../api/Common';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nfunction Notifications() {\n  const user = getUser();\n  let history = useHistory();\n  // handle click event of logout button\n  if (!getToken()){\n\thistory.push(\"/login\")\n  }\n  const products = []\n  const columns = [\n\t{\n\t\tdataField: 'order_id',\n\t\ttext: 'Numéro de commande'\n\t}, \n\t{\n\t\tdataField: 'package_id',\n\t\ttext: 'Numéro du colis'\n\t}, \n\t{\n\t\tdataField: 'weight_g',\n\t\ttext: 'Poids'\n\t},\n\t{\n\t\tdataField: 'name',\n\t\ttext: 'Nom du client'\n\t}, \n\t{\n\t\tdataField: 'email',\n\t\ttext: 'Adresse mail'\n\t},\n\n\t{\n\t\tdataField: 'state',\n\t\ttext: 'État'\n\t},\n\t{\n\t\tdataField: 'postal_code',\n\t\ttext: 'Code postale'\n\t}, \n\t{\n\t\tdataField: 'price_base',\n\t\ttext: 'Prix du produit'\n\t}, \n\t{\n\t\tdataField: 'base_price_delivery',\n\t\ttext: 'Prix de livraison'\n\t}, \n\t{\n\t\tdataField: 'status',\n\t\ttext: 'statut'\n\t}\n\n\n];\n  return (\n    <BootstrapTable keyField='id' className='bootstrap-data-table' data={ products } columns={ columns } pagination={ paginationFactory() } />\n  );\n}\nexport default Notifications;\n\n\n\n",
    "import Table from '../table/Table';\nimport  customerData  from '../data/customers.json';\nimport {getCustomerslist,getOrderslist}  from '../../api/Common';\nfunction Customers() {\n\tconst customers = JSON.parse(getCustomerslist())\n\tconst orders = JSON.parse(getOrderslist())\n\tconsole.log(customers)\n\tlet list = []\n\tfor (let i in customers){\n\t\tif(customers[i][\"memory\"]==\"1\"){\n\t\t\tlet total_orders = 0\n\t\t\tlet current_orders = 0\n\t\t\tfor (let j in orders){\n\t\t\t\tif(orders[j][\"client_id\"]==customers[i][\"id\"]){\n\t\t\t\t\ttotal_orders = total_orders+1\n\t\t\t\t\tif(customers[i][\"status\"]!=\"terminé\"){\n\t\t\t\t\t\tcurrent_orders = current_orders +1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcustomers[i][\"total_orders\"] = total_orders\n\t\t\tcustomers[i][\"ongoing_orders\"] = current_orders\n\t\t\tlist.push(customers[i])\n\t\t}\n\t}\n\n\tconst schemaString = {\n\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\temail: {\"type\": \"string\", \"title\": \"Adresse mail\"},\n\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t}\n\tconst requiredFields = {\n\t\tfirstname: {\"type\": \"string\", \"title\": \"Prénom\"},\n\t\tname: {\"type\": \"string\", \"title\": \"Nom de famille\"},\n\t\tpostal_code: {\"type\": \"string\", \"title\": \"Code Postal\"},\n\t\tstate: {\"type\": \"string\", \"title\": \"État/Commune\"},\n\t\taddress: {\"type\": \"string\", \"title\": \"Adresse\"},\n\t\tphone: {\"type\": \"number\", \"title\": \"Numéro de téléphone\",format: 'phone-tn'}\n\t}\n\tconst customFormats = {\n\t\t'phone-tn': /^[0-9]{8}$/\n\t};\n\treturn(\n\t\t<>\n\t\t<Table data={list} schema={schemaString} togglecolumns={customerData[\"togglecolumns\"]}  requiredFields={requiredFields} customFormats={customFormats} onSubmitFunction=\"customers\" actions={customerData[\"actions\"]}  columns={customerData[\"columns\"]} title={customerData[\"title\"]} crumbs_list={customerData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Customers;\n",
    "import Table from '../table/Table';\nimport\tbillsData\tfrom '../data/bills.json';\nimport  plans  from '../data/plans.json';\nimport {getCustomerslist,getOrderslist,getUserPlan}\tfrom '../../api/Common';\nfunction Bills() {\n\tconst orders = JSON.parse(getOrderslist())\n\tlet data = []\n\tlet list = []\n\tconst plan = getUserPlan()\n\tlet initProperties = [\"delivered\",\"awaiting_pickup\",\"in_delivery\",\"postponed\",\"in_storage\",\"awaiting_return\",\"in_storage_to_return\",\"in_storage_to_return\",\n\t\"return_postponed\",\"return_pickup_postponed\",\"returned\",\"package_number\",\"total_price\",\"total_weight\",\"base_price_delivery\",\"custom_delivery_price\",\"total_packages\",\"payed\"]\n\tconst dataMap = async () =>{\n\t\tPromise.all(orders.map(item => { \n\t\t\tif(item[\"memory\"]==\"1\"){\n\t\t\t\tif(!list[item[\"order_id\"]]){\n\t\t\t\tlist[item[\"order_id\"]]= []\n\t\t\t\tlist[item[\"order_id\"]][\"order_id\"] = item[\"order_id\"]\n\t\t\t\tinitProperties.forEach(element => {\n\t\t\t\t\tlist[item[\"order_id\"]][element] = 0\n\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(item[\"order_id\"]==list[item[\"order_id\"]][\"order_id\"]){\n\t\t\n\t\t\t\tswitch (item[\"status\"]) {\n\t\t\t\t\tcase \"livré\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].delivered = list[list[item[\"order_id\"]]].delivered + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en attente d'enlèvement\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].awaiting_pickup = list[item[\"order_id\"]].awaiting_pickup + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en cours de livraison\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_delivery = list[item[\"order_id\"]].in_delivery + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Livraison reportée\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].postponed = list[item[\"order_id\"]].postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en entrepôt\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_storage = list[item[\"order_id\"]].in_storage + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en attente de retour\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].awaiting_return = list[item[\"order_id\"]].awaiting_return + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"en entrepôt (retour)\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].in_storage_to_return = list[item[\"order_id\"]].in_storage_to_return + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"retour reporté\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].return_postponed = list[item[\"order_id\"]].return_postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"enlèvement reporté (retour)\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].return_pickup_postponed = list[item[\"order_id\"]].return_pickup_postponed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"retourné\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].returned = list[item[\"order_id\"]].returned + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"problème de livraison\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].returned = list[item[\"order_id\"]].returned + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"payé\":\n\t\t\t\t\t\tlist[item[\"order_id\"]].payed = list[item[\"order_id\"]].payed + 1\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Status not recognized\");\n\t\t\t\t}\n\t\t\t\titem[\"base_price_delivery\"]=(plans[plan][\"price\"]+((item[\"weight_g\"]>10200)?(Math.ceil((item[\"weight_g\"]-10200)/1000) * plans[plan][\"extra\"]):\"\"))\n\t\t\t\tlist[item[\"order_id\"]].total_packages = list[item[\"order_id\"]].total_packages + 1\n\t\t\t\tlist[item[\"order_id\"]].total_weight = Number(item[\"weight_g\"]) + list[item[\"order_id\"]].total_weight\n\t\t\t\tlist[item[\"order_id\"]].total_price = Number(item[\"price_base\"]) + list[item[\"order_id\"]].total_price\n\t\t\t\tlist[item[\"order_id\"]].base_price_delivery = Number(item[\"base_price_delivery\"]) + list[item[\"order_id\"]].base_price_delivery\n\t\t\t\tlist[item[\"order_id\"]].custom_delivery_price = Number(item[\"custom_delivery_price\"]) + list[item[\"order_id\"]].custom_delivery_price\n\t\t\t\tlist[item[\"order_id\"]].package_number = Number(item[\"package_number\"]) + list[item[\"order_id\"]].package_number\n\t\t\t\t}\n\t\t\t}\n\t\t})).then((ret)=>{\n\t\t\tconsole.log(\"end of promises\", orders)\n\t\t\tconsole.log(\"end of promises\", ret)\n\t\t\tconsole.log(\"end of promises\", list)\n\t\t\treturn true\n\t\t})\n\t}\n\tdataMap()\n\tfor (let k in list){\n\t\tdata.push(list[k])\n\t\tconsole.log(data)\n\t}\n\n\tconsole.log(data)\n\treturn(\n\t\t<>\n\t\t<Table data={data} actions={billsData[\"actions\"]} togglecolumns={billsData[\"togglecolumns\"]} columns={billsData[\"columns\"]} title={billsData[\"title\"]} crumbs_list={billsData[\"crumbs\"]} ></Table>\n\t\t</>\n\t);\n}\n\nexport default Bills;\n",
    "function ContactUs() {\n    return (\n        <div className= \"ContactUs\">\n\n\t\t</div>\n    );\n}\n\nexport default ContactUs;\n",
    "function Tracking() {\n    return (\n        <div className= \"Tracking\">\n\n\t\t</div>\n    );\n}\n\nexport default Tracking;\n",
    "import { useHistory } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { removeUserSession, getToken } from '../../api/Common';\nimport './Dashboard.scss';\nimport Breadcrumbs from '../breadcrumbs/Breadcrumbs';\nimport {\n    Chart as ChartJS,\n    RadialLinearScale,\n    ArcElement,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\nimport { Doughnut, PolarArea } from 'react-chartjs-2';\n\n  \nfunction Dashboard() {\n  const crumbs_list = [[\"/\", \"Accueil\"], [\"/Dashboard\", \"Tableau de bord\"]]\n  let history = useHistory();\n  // handle click event of logout button\n  if (!getToken()){\n    removeUserSession();\n\thistory.push(\"/login\")\n  }\n  const goToOrders = () =>{\n    history.push(\"/orders\")\n  }\n  const css = `\n    .App {\n        background: url('https://calirextn.com/assets/images/loading-background-light.svg');\n        background-position: bottom right;\n        background-size: cover;\n        background-repeat: no-repeat;\n    }\n    `\n  ChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\n  const fullDataSet = {\n    labels: ['Livrées', 'en cours', 'En attente d\\'enlevement', 'Retournées'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19, 3, 5],\n        backgroundColor: [\n            '#0943ea',\n            '#eab009',\n            '#ea6b09',\n            '#7609ea',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  const dualDataSetOrders = {\n    labels: ['Livrées', 'Retournées'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19],\n        backgroundColor: [\n            '#0943ea',\n            '#eab009',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  const dualDataSetClients = {\n    labels: ['Livrées', 'Retournées'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19],\n        backgroundColor: [\n            '#ea6b09',\n            '#7609ea',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <>\n      <Helmet>\n          <style>{css}</style>\n      </Helmet>\n      <div className=\"p-5\">\n      <h3 className=\"has-text-centered\">Suivez facilement l&#39;état de vos commandes!</h3>\n      <Doughnut data={fullDataSet} onClick={goToOrders} />\n      </div>\n      <h3 className=\"has-text-centered\">Ratio de vos commandes retournées vs livrées!</h3>\n      <PolarArea data={dualDataSetOrders} />\n      <div className=\"p-5\">\n      <h3 className=\"has-text-centered\">Ratio de vos clients livrées vs en attente de livraison!</h3>\n      <PolarArea data={dualDataSetClients} />    \n      </div>\n      <Breadcrumbs crumbs ={crumbs_list} invertedText={false} ></Breadcrumbs>  \n    </>\n  );\n}\n\n\nexport default Dashboard;\n",
    "import './App.scss';\nimport Home from './components/home/Home';\n\nimport HeaderOut from './components/header/HeaderLoggedOut';\nimport Footer from './components/footer/Footer';\nimport Prices from './components/prices/Prices';\nimport Profile from './components/profile/Profile';\nimport Orders from './components/orders/Orders';\nimport Notifications from './components/notifications/Notifications';\nimport Customers from './components/customers/Customers';\nimport Bills from './components/bills/Bills';\nimport ContactUs from './components/contactus/ContactUs';\nimport Tracking from './components/tracking/Tracking';\nimport Dashboard from './components/dashboard/Dashboard';\nimport React, { useState, useEffect } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport axios from 'axios';\nimport { getToken, removeUserSession, setUserSession } from './api/Common';\nfunction App() {\n\tconst [authLoading, setAuthLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tconst token = getToken();\n\t\tif (!token) {\n\t\treturn;\n\t\t}\n\t\taxios.get(`https://dqnhq15t16.execute-api.eu-west-3.amazonaws.com/prod/user?operation=2&&authorizationToken=${token}`).then(response => {\n\t\tif(response.data.statusCode === 200) {\n\t\t\tsetUserSession(response.data.body);\n\t\t\tsetAuthLoading(false);\n\t\t}else{\t\n\t\t\tremoveUserSession();\n\t\t\tsetAuthLoading(false);\n\t\t}\n\t\t\n\t\t}).catch(error => {\n\t\tremoveUserSession();\n\t\tsetAuthLoading(false);\n\t\t});\n\t}, []);\n\tlet header = <></>\n\t\theader = <HeaderOut bg=\"secondary\"/>\n\t\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t{header}\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/tracking\">\n\t\t\t\t\t\t<Tracking />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/pricing\">\n\t\t\t\t\t\t<Prices />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/dashboard\">\n\t\t\t\t\t\t<Dashboard/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t\t<Profile/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/customers\">\n\t\t\t\t\t\t<Customers/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/bills\">\n\t\t\t\t\t\t<Bills/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/notifications\">\n\t\t\t\t\t\t<Notifications />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/orders\">\n\t\t\t\t\t\t<Orders />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/contact-us\">\n\t\t\t\t\t\t<ContactUs />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t\t<Footer/>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
